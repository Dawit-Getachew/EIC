{"version":3,"sources":["content/pages/Components/Badges/index.tsx","components/PageTitleWrapper/index.tsx","components/Footer/index.tsx","components/PageTitle/index.tsx"],"names":["shapeStyles","bgcolor","width","height","rectangle","component","sx","circle","borderRadius","Badges","useState","count","setCount","invisible","setInvisible","heading","subHeading","docs","maxWidth","container","direction","justifyContent","alignItems","spacing","item","xs","title","color","badgeContent","variant","overlap","display","flexDirection","marginBottom","marginRight","onClick","Math","max","fontSize","control","checked","onChange","label","PageTitle","styled","Box","theme","PageTitleWrapper","children","FooterWrapper","Footer","py","md","textAlign","noButton","rest","gutterBottom","href","target","rel","mt","startIcon"],"mappings":"kXAmBMA,EAAc,CAAEC,QAAS,eAAgBC,MAAO,GAAIC,OAAQ,IAE5DC,EAAY,cAAC,IAAD,CAAKC,UAAU,OAAOC,GAAIN,IACtCO,EACJ,cAAC,IAAD,CAAKF,UAAU,OAAOC,GAAE,2BAAON,GAHP,CAAEQ,aAAc,UAsI3BC,UAhIf,WAEE,MAA0BC,mBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KAMA,OACE,qCACE,cAAC,IAAD,UACE,0DAEF,cAAC,IAAD,UACE,cAAC,IAAD,CACEC,QAAQ,SACRC,WAAW,oEACXC,KAAK,iDAET,cAAC,IAAD,CAAWC,SAAS,KAApB,SACE,eAAC,IAAD,CACEC,WAAS,EACTC,UAAU,MACVC,eAAe,SACfC,WAAW,UACXC,QAAS,EALX,UAOE,cAAC,IAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAYC,MAAM,WAClB,cAAC,IAAD,IACA,cAAC,IAAD,UACE,eAAC,IAAD,CAAOH,QAAS,EAAGH,UAAU,MAA7B,UACE,cAAC,IAAD,CAAOO,MAAM,YAAYC,aAAa,IAAtC,SACGxB,IAEH,cAAC,IAAD,CAAOuB,MAAM,YAAYC,aAAa,IAAIC,QAAQ,MAAlD,SACGzB,IAEH,cAAC,IAAD,CAAOuB,MAAM,YAAYG,QAAQ,WAAWF,aAAa,IAAzD,SACGrB,IAEH,cAAC,IAAD,CAAOoB,MAAM,YAAYG,QAAQ,WAAWF,aAAa,IAAIC,QAAQ,MAArE,SACGtB,cAMX,cAAC,IAAD,CAAMiB,MAAI,EAACC,GAAI,GAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAYC,MAAM,sBAClB,cAAC,IAAD,IACA,cAAC,IAAD,UACE,eAAC,IAAD,CACEpB,GAAI,CACFqB,MAAO,gBACPI,QAAS,OACTC,cAAe,SACf,QAAS,CACPC,aAAc,GAEhB,mBAAoB,CAClBC,YAAa,IATnB,UAaE,gCACE,cAAC,IAAD,CAAOP,MAAM,YAAYC,aAAcjB,EAAvC,SACE,cAAC,IAAD,MAEF,eAAC,IAAD,WACE,cAAC,IAAD,CACE,aAAW,SACXwB,QAAS,WACPvB,EAASwB,KAAKC,IAAI1B,EAAQ,EAAG,KAHjC,SAME,cAAC,IAAD,CAAY2B,SAAS,YAEvB,cAAC,IAAD,CACE,aAAW,WACXH,QAAS,WACPvB,EAASD,EAAQ,IAHrB,SAME,cAAC,IAAD,CAAS2B,SAAS,kBAIxB,gCACE,cAAC,IAAD,CAAOX,MAAM,YAAYE,QAAQ,MAAMhB,UAAWA,EAAlD,SACE,cAAC,IAAD,MAEF,cAAC,IAAD,CACEP,GAAI,CAAEqB,MAAO,gBACbY,QAAS,cAAC,IAAD,CAAQC,SAAU3B,EAAW4B,SA5F5B,WAC5B3B,GAAcD,MA4FI6B,MAAM,4BAOlB,cAAC,IAAD,CAAMlB,MAAI,EAACC,GAAI,GAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAYC,MAAM,WAClB,cAAC,IAAD,IACA,cAAC,IAAD,UACE,eAAC,IAAD,CAAOH,QAAS,EAAGH,UAAU,MAA7B,UACE,cAAC,IAAD,CAAOQ,aAAc,EAAGD,MAAM,YAA9B,SACE,cAAC,IAAD,CAAUA,MAAM,aAElB,cAAC,IAAD,CAAOC,aAAc,EAAGD,MAAM,UAA9B,SACE,cAAC,IAAD,CAAUA,MAAM,4BAQ9B,cAAC,IAAD,S,iCCpJN,oCAKMgB,EAAYC,YAAOC,IAAPD,EAChB,gBAAGE,EAAH,EAAGA,MAAH,mCACiBA,EAAMvB,QAAQ,EAAG,GADlC,UAyBawB,IAhBqC,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACrD,OACE,mCACE,cAACL,EAAD,UACE,cAAC,IAAD,CAAWzB,SAAS,KAApB,SACG8B,U,iCCrBX,oCAGMC,EAAgBL,YAAOC,IAAPD,EACpB,gBAAGE,EAAH,EAAGA,MAAH,6DAEgBA,EAAMvB,QAAQ,GAF9B,YA+Ba2B,IAzBf,WACE,OACE,cAACD,EAAD,UACE,cAAC,IAAD,CAAW/B,SAAS,KAApB,SACE,cAAC,IAAD,CACEiC,GAAI,EACJpB,QAAS,CAAEN,GAAI,QAAS2B,GAAI,QAC5B9B,WAAW,SACX+B,UAAW,CAAE5B,GAAI,SAAU2B,GAAI,QAC/B/B,eAAe,wB,sJCgCVsB,IAvCuB,SAAC,GAMhC,IAAD,IALF5B,eAKE,MALQ,GAKR,MAJFC,kBAIE,MAJW,GAIX,MAHFC,YAGE,MAHK,GAGL,MAFFqC,gBAEE,SADCC,EACD,iBACF,OACI,eAAC,IAAD,yBAAMpC,WAAS,EAACE,eAAe,gBAAgBC,WAAW,UAAaiC,GAAvE,cACI,eAAC,IAAD,CAAM/B,MAAI,EAAV,UACI,cAAC,IAAD,CAAYK,QAAQ,KAAKxB,UAAU,KAAKmD,cAAY,EAApD,SACKzC,IAEL,cAAC,IAAD,CAAYc,QAAQ,YAApB,SACKb,QAGPsC,GAAY,cAAC,IAAD,CAAM9B,MAAI,EAAV,SACV,cAAC,IAAD,CACIiC,KAAMxC,EACNyC,OAAO,SACPC,IAAI,sBACJrD,GAAI,CAAEsD,GAAI,CAAEnC,GAAI,EAAG2B,GAAI,IACvBvB,QAAQ,YACRgC,UAAW,cAAC,IAAD,CAAgBvB,SAAS,UANxC,SAQKvB","file":"static/js/66.f093b04d.chunk.js","sourcesContent":["import { Helmet } from 'react-helmet-async';\r\nimport PageTitle from 'src/components/PageTitle';\r\nimport PageTitleWrapper from 'src/components/PageTitleWrapper';\r\nimport { Container, Grid, Card, CardHeader, CardContent, Divider } from '@mui/material';\r\nimport { useState } from 'react';\r\nimport Footer from 'src/components/Footer';\r\n\r\nimport ButtonGroup from '@mui/material/ButtonGroup';\r\nimport Button from '@mui/material/Button';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport RemoveIcon from '@mui/icons-material/Remove';\r\nimport MailIcon from '@mui/icons-material/Mail';\r\nimport Switch from '@mui/material/Switch';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\n\r\nimport Box from '@mui/material/Box';\r\nimport Stack from '@mui/material/Stack';\r\nimport Badge from '@mui/material/Badge';\r\n\r\nconst shapeStyles = { bgcolor: 'primary.main', width: 40, height: 40 };\r\nconst shapeCircleStyles = { borderRadius: '50%' };\r\nconst rectangle = <Box component=\"span\" sx={shapeStyles} />;\r\nconst circle = (\r\n  <Box component=\"span\" sx={{ ...shapeStyles, ...shapeCircleStyles }} />\r\n);\r\n\r\nfunction Badges() {\r\n\r\n  const [count, setCount] = useState(1);\r\n  const [invisible, setInvisible] = useState(false);\r\n\r\n  const handleBadgeVisibility = () => {\r\n    setInvisible(!invisible);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Badges - Components</title>\r\n      </Helmet>\r\n      <PageTitleWrapper>\r\n        <PageTitle\r\n          heading=\"Badges\"\r\n          subHeading=\"Badge generates a small badge to the top-right of its child(ren).\"\r\n          docs=\"https://material-ui.com/components/badges/\" />\r\n      </PageTitleWrapper>\r\n      <Container maxWidth=\"lg\">\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"stretch\"\r\n          spacing={3}\r\n        >\r\n          <Grid item xs={12}>\r\n            <Card>\r\n              <CardHeader title=\"Shapes\" />\r\n              <Divider />\r\n              <CardContent>\r\n                <Stack spacing={3} direction=\"row\">\r\n                  <Badge color=\"secondary\" badgeContent=\" \">\r\n                    {rectangle}\r\n                  </Badge>\r\n                  <Badge color=\"secondary\" badgeContent=\" \" variant=\"dot\">\r\n                    {rectangle}\r\n                  </Badge>\r\n                  <Badge color=\"secondary\" overlap=\"circular\" badgeContent=\" \">\r\n                    {circle}\r\n                  </Badge>\r\n                  <Badge color=\"secondary\" overlap=\"circular\" badgeContent=\" \" variant=\"dot\">\r\n                    {circle}\r\n                  </Badge>\r\n                </Stack>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Card>\r\n              <CardHeader title=\"Badges Visibility\" />\r\n              <Divider />\r\n              <CardContent>\r\n                <Box\r\n                  sx={{\r\n                    color: 'action.active',\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    '& > *': {\r\n                      marginBottom: 2,\r\n                    },\r\n                    '& .MuiBadge-root': {\r\n                      marginRight: 4,\r\n                    },\r\n                  }}\r\n                >\r\n                  <div>\r\n                    <Badge color=\"secondary\" badgeContent={count}>\r\n                      <MailIcon />\r\n                    </Badge>\r\n                    <ButtonGroup>\r\n                      <Button\r\n                        aria-label=\"reduce\"\r\n                        onClick={() => {\r\n                          setCount(Math.max(count - 1, 0));\r\n                        }}\r\n                      >\r\n                        <RemoveIcon fontSize=\"small\" />\r\n                      </Button>\r\n                      <Button\r\n                        aria-label=\"increase\"\r\n                        onClick={() => {\r\n                          setCount(count + 1);\r\n                        }}\r\n                      >\r\n                        <AddIcon fontSize=\"small\" />\r\n                      </Button>\r\n                    </ButtonGroup>\r\n                  </div>\r\n                  <div>\r\n                    <Badge color=\"secondary\" variant=\"dot\" invisible={invisible}>\r\n                      <MailIcon />\r\n                    </Badge>\r\n                    <FormControlLabel\r\n                      sx={{ color: 'text.primary' }}\r\n                      control={<Switch checked={!invisible} onChange={handleBadgeVisibility} />}\r\n                      label=\"Show Badge\"\r\n                    />\r\n                  </div>\r\n                </Box>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Card>\r\n              <CardHeader title=\"Colors\" />\r\n              <Divider />\r\n              <CardContent>\r\n                <Stack spacing={2} direction=\"row\">\r\n                  <Badge badgeContent={4} color=\"secondary\">\r\n                    <MailIcon color=\"action\" />\r\n                  </Badge>\r\n                  <Badge badgeContent={4} color=\"success\">\r\n                    <MailIcon color=\"action\" />\r\n                  </Badge>\r\n                </Stack>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Badges;\r\n","import { FC, ReactNode } from 'react';\r\nimport { Container } from '@mui/material';\r\nimport PropTypes from 'prop-types';\r\nimport { styled } from '@mui/material/styles';\r\nimport { Box } from '@mui/material';\r\n\r\nconst PageTitle = styled(Box)(\r\n  ({ theme }) => `\r\n        padding: ${theme.spacing(4, 0)};\r\n`\r\n);\r\n\r\ninterface PageTitleWrapperProps {\r\n  children?: ReactNode;\r\n}\r\n\r\nconst PageTitleWrapper: FC<PageTitleWrapperProps> = ({ children }) => {\r\n  return (\r\n    <>\r\n      <PageTitle>\r\n        <Container maxWidth=\"lg\">\r\n          {children}\r\n        </Container>\r\n      </PageTitle>\r\n    </>\r\n  );\r\n};\r\n\r\nPageTitleWrapper.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n};\r\n\r\nexport default PageTitleWrapper;\r\n","import { Box, Container, Link, Typography } from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\n\r\nconst FooterWrapper = styled(Box)(\r\n  ({ theme }) => `\r\n        border-radius: 0;\r\n        margin: ${theme.spacing(3)} 0;\r\n`\r\n);\r\n\r\nfunction Footer() {\r\n  return (\r\n    <FooterWrapper>\r\n      <Container maxWidth=\"lg\">\r\n        <Box\r\n          py={3}\r\n          display={{ xs: 'block', md: 'flex' }}\r\n          alignItems=\"center\"\r\n          textAlign={{ xs: 'center', md: 'left' }}\r\n          justifyContent=\"space-between\"\r\n        >\r\n          {/* <Box>\r\n            <Typography variant=\"subtitle1\">\r\n              &copy; 2021 - Tokyo Free White React Admin Dashboard\r\n            </Typography>\r\n          </Box>\r\n          <Typography sx={{ pt: { xs: 2, md: 0 } }} variant=\"subtitle1\">\r\n            Crafted by <Link href=\"https://bloomui.com\" target=\"_blank\" rel=\"noopener noreferrer\">BloomUI.com</Link>\r\n          </Typography> */}\r\n        </Box>\r\n      </Container>\r\n    </FooterWrapper>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import { FC } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AddTwoToneIcon from '@mui/icons-material/AddTwoTone';\r\nimport { Typography, Button, Grid } from '@mui/material';\r\n\r\ninterface PageTitleProps {\r\n    heading?: string;\r\n    subHeading?: string;\r\n    docs?: string;\r\n    noButton?: boolean;\r\n}\r\n\r\nconst PageTitle: FC<PageTitleProps> = ({\r\n    heading = '',\r\n    subHeading = '',\r\n    docs = '',\r\n    noButton = false,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Grid container justifyContent=\"space-between\" alignItems=\"center\" {...rest}>\r\n            <Grid item>\r\n                <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n                    {heading}\r\n                </Typography>\r\n                <Typography variant=\"subtitle2\">\r\n                    {subHeading}\r\n                </Typography>\r\n            </Grid>\r\n            {!noButton && <Grid item>\r\n                <Button\r\n                    href={docs}\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                    sx={{ mt: { xs: 2, md: 0 } }}\r\n                    variant=\"contained\"\r\n                    startIcon={<AddTwoToneIcon fontSize=\"small\" />}\r\n                >\r\n                    {heading}\r\n                </Button>\r\n            </Grid>}\r\n        </Grid>\r\n    );\r\n};\r\n\r\nPageTitle.propTypes = {\r\n    heading: PropTypes.string,\r\n    subHeading: PropTypes.string,\r\n    docs: PropTypes.string,\r\n};\r\n\r\nexport default PageTitle;\r\n"],"sourceRoot":""}