{"version":3,"sources":["pages/Messenger/TopBarContent.tsx","pages/Messenger/BottomBarContent.tsx","store/States/Investment/Message/helper.ts","pages/Messenger/SidebarContent.tsx","pages/Messenger/ChatContent.tsx","store/States/Investment/User/helper.ts","store/States/Investment/Account/helper.ts","../../src/equality.ts","../../../../src/react/parser/index.ts","../../../../src/react/hooks/useSubscription.ts","../../../../src/react/hooks/useApolloClient.ts","pages/Messenger/index.tsx","components/Label/index.tsx"],"names":["RootWrapper","styled","Box","theme","breakpoints","values","md","ListItemIconWrapper","ListItemIcon","colors","primary","light","AccordionSummaryWrapper","AccordionSummary","transitions","create","spacing","alpha","black","main","TopBarContent","props","useTheme","useState","mobileOpen","setMobileOpen","handleDrawerToggle","expanded","setExpanded","handleChange","section","_event","isExpanded","sx","display","sm","alignItems","Avatar","variant","width","height","alt","src","pl","pt","xs","Typography","gutterBottom","name","formatDistance","subMinutes","Date","addSuffix","mt","Tooltip","placement","title","IconButton","color","onClick","Drawer","anchor","direction","open","onClose","elevation","minWidth","p","textAlign","mx","my","Divider","Accordion","onChange","expandIcon","AccordionDetails","List","component","ListItem","button","ListItemText","primaryTypographyProps","secondary","secondaryTypographyProps","DividerWrapper","Input","BottomBarContent","user","text","setText","Card","Hidden","mdDown","orientation","flexItem","flex","mr","TextField","hiddenLabel","fullWidth","placeholder","event","target","value","arrow","accept","id","type","htmlFor","isLoading","CircularProgress","Button","startIcon","length","sendMessage","disabled","getUpdatedReadMessages","new_messages","messages","updated_old_messages","filter","message","sender_role","SenderRole","USER","forEach","findIndex","item","String","_id","push","AvatarSuccess","success","lighter","lighten","general","borderRadius","ListItemWrapper","ListItemButton","TabsContainerWrapper","typography","pxToRem","SidebarContent","invisible","state","setState","currentTab","setCurrentTab","selectedMessage","setSelectedMessage","readMessages","useSelector","selectReadMessages","renderMessageContent","count","totalCount","new_ids","map","old_ids","getUnReadMessagesCount","allMessages","chatID","selected","clickMessage","ListItemAvatar","noWrap","content","Boolean","Label","ml","justifyContent","size","fontSize","FormControlLabel","control","Switch","checked","label","mb","InputProps","startAdornment","InputAdornment","position","Tabs","scrollButtons","textColor","indicatorColor","tab","Tab","disablePadding","pb","palette","background","default","CardWrapperPrimary","contrastText","borderRadiusXl","CardWrapperSecondary","ChatContent","format","subDays","slice","reverse","createdAt","py","flexDirection","subHours","renderAdminReply","getUser","users","foundIndex","service_id","getAccount","accounts","Object","prototype","toString","hasOwnProperty","fnToStr","Function","previousComparisons","Map","equal","a","b","check","clear","aTag","call","previouslyCompared","aKeys","definedKeys","bKeys","keyCount","k","key","aIterator","entries","isMap","info","next","done","aKey","aValue","has","get","Uint8Array","len","byteLength","aCode","full","suffix","fromIndex","indexOf","endsWith","nativeCodeSuffix","obj","keys","isDefinedKey","this","DocumentType","bSet","set","Set","add","cache","operationName","Query","Mutation","Subscription","verifyDocumentType","document","operation","variables","cached","__DEV__","invariant","concat","fragments","definitions","x","kind","queries","mutations","subscriptions","definition","variableDefinitions","payload","requiredOperationName","useSubscription","subscription","options","client","override","context","useContext","getApolloContext","useApolloClient","loading","skip","error","data","result","setResult","subscribe","query","fetchPolicy","observable","setObservable","ref","useRef","useEffect","shouldResubscribe","current","_a","_b","_c","_d","assign","fetchResult","onSubscriptionData","subscriptionData","complete","onSubscriptionComplete","unsubscribe","Sidebar","white","ChatWindow","ChatTopBar","ChatMain","ChatBottomBar","ApplicationsMessenger","scrollToBottom","dispatch","useDispatch","MessageSelectors","selectMessages","UserSelectors","selectUsers","AccountSelectors","selectAccounts","selectServiceID","MessageAPI","FetchMessages","err","MessageActions","FetchedMessages","UserAPI","FetchUsers","UserActions","FetchedUsers","AccountAPI","FetchAccounts","AccountActions","FetchedAccounts","realMessages","setRealMessages","chatContent","setChatContent","setLoading","sentMessage","setSentMessage","getUniqueItems","items","tag","uniqueItems","prop","_prop","uniqueMessages","ADMIN","from_user","to_user","first_name","last_name","BufferActions","SetReadMessages","SubscribeToMessagesBody","SubscribeToMessagesBodyTag","AddMessage","autoHide","getMessage","account","CreateMessage","LabelWrapper","warning","className","children","rest"],"mappings":"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","file":"static/js/75.96024397.chunk.js","sourcesContent":["import { useState, SyntheticEvent, FC } from 'react';\r\nimport {\r\n  Box,\r\n  IconButton,\r\n  Tooltip,\r\n  Avatar,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  Drawer,\r\n  Divider,\r\n  Typography,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemIcon\r\n} from '@mui/material';\r\nimport { styled, useTheme } from '@mui/material/styles';\r\nimport { formatDistance, subMinutes } from 'date-fns';\r\nimport CallTwoToneIcon from '@mui/icons-material/CallTwoTone';\r\nimport VideoCameraFrontTwoToneIcon from '@mui/icons-material/VideoCameraFrontTwoTone';\r\nimport InfoTwoToneIcon from '@mui/icons-material/InfoTwoTone';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport SearchTwoToneIcon from '@mui/icons-material/SearchTwoTone';\r\nimport ColorLensTwoToneIcon from '@mui/icons-material/ColorLensTwoTone';\r\nimport NotificationsOffTwoToneIcon from '@mui/icons-material/NotificationsOffTwoTone';\r\nimport EmojiEmotionsTwoToneIcon from '@mui/icons-material/EmojiEmotionsTwoTone';\r\nimport CancelTwoToneIcon from '@mui/icons-material/CancelTwoTone';\r\nimport BlockTwoToneIcon from '@mui/icons-material/BlockTwoTone';\r\nimport WarningTwoToneIcon from '@mui/icons-material/WarningTwoTone';\r\nimport DescriptionTwoToneIcon from '@mui/icons-material/DescriptionTwoTone';\r\n\r\nconst RootWrapper = styled(Box)(\r\n  ({ theme }) => `\r\n        @media (min-width: ${theme.breakpoints.values.md}px) {\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: space-between;\r\n      }\r\n`\r\n);\r\n\r\nconst ListItemIconWrapper = styled(ListItemIcon)(\r\n  ({ theme }) => `\r\n        min-width: 36px;\r\n        color: ${theme.colors.primary.light};\r\n`\r\n);\r\n\r\nconst AccordionSummaryWrapper = styled(AccordionSummary)(\r\n  ({ theme }) => `\r\n        &.Mui-expanded {\r\n          min-height: 48px;\r\n        }\r\n\r\n        .MuiAccordionSummary-content.Mui-expanded {\r\n          margin: 12px 0;\r\n        }\r\n\r\n        .MuiSvgIcon-root {\r\n          transition: ${theme.transitions.create(['color'])};\r\n        }\r\n\r\n        &.MuiButtonBase-root {\r\n\r\n          margin-bottom: ${theme.spacing(0.5)};\r\n\r\n          &:last-child {\r\n            margin-bottom: 0;\r\n          }\r\n\r\n          &.Mui-expanded,\r\n          &:hover {\r\n            background: ${theme.colors.alpha.black[10]};\r\n\r\n            .MuiSvgIcon-root {\r\n              color: ${theme.colors.primary.main};\r\n            }\r\n          }\r\n        }\r\n`\r\n);\r\n\r\ninterface Props {\r\n  name: string\r\n}\r\n\r\nconst TopBarContent: FC<Props> = (props) => {\r\n\r\n  const theme = useTheme();\r\n\r\n  const [mobileOpen, setMobileOpen] = useState(false);\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n\r\n  const [expanded, setExpanded] = useState<string | false>('section1');\r\n\r\n  const handleChange = (section: string) => (\r\n    _event: SyntheticEvent,\r\n    isExpanded: boolean\r\n  ) => {\r\n    setExpanded(isExpanded ? section : false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <RootWrapper>\r\n        <Box sx={{ display: { sm: 'flex' } }} alignItems=\"center\">\r\n          <Avatar\r\n            variant=\"rounded\"\r\n            sx={{ width: 50, height: 50 }}\r\n            alt=\"Zain Baptista\"\r\n            src=\"https://thispersondoesnotexist.com/image\"\r\n          />\r\n          <Box sx={{ pl: { sm: 1.5 }, pt: { xs: 1.5, sm: 0 } }}>\r\n            <Typography variant=\"h4\" gutterBottom>\r\n              {props.name}\r\n            </Typography>\r\n            <Typography variant=\"subtitle2\">\r\n              {formatDistance(subMinutes(new Date(), 8), new Date(), {\r\n                addSuffix: true\r\n              })}\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n        <Box\r\n          sx={{\r\n            mt: { xs: 3, md: 0 }\r\n          }}\r\n        >\r\n          <Tooltip placement=\"bottom\" title=\"Start a voice call\">\r\n            <IconButton color=\"primary\">\r\n              <CallTwoToneIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Tooltip placement=\"bottom\" title=\"Start a video call\">\r\n            <IconButton color=\"primary\">\r\n              <VideoCameraFrontTwoToneIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Tooltip placement=\"bottom\" title=\"Conversation information\">\r\n            <IconButton color=\"primary\" onClick={handleDrawerToggle}>\r\n              <InfoTwoToneIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Box>\r\n      </RootWrapper>\r\n      <Drawer\r\n        variant=\"temporary\"\r\n        anchor={theme.direction === 'rtl' ? 'left' : 'right'}\r\n        open={mobileOpen}\r\n        onClose={handleDrawerToggle}\r\n        elevation={9}\r\n      >\r\n        <Box sx={{ minWidth: 360 }} p={2}>\r\n          <Box sx={{ textAlign: 'center' }}>\r\n            <Avatar\r\n              sx={{\r\n                mx: 'auto',\r\n                my: 2,\r\n                width: theme.spacing(12),\r\n                height: theme.spacing(12)\r\n              }}\r\n              variant=\"rounded\"\r\n              alt=\"Zain Baptista\"\r\n              src=\"https://thispersondoesnotexist.com/image\"\r\n            />\r\n            <Typography variant=\"h4\">{props.name}</Typography>\r\n            <Typography variant=\"subtitle2\">\r\n              Active{' '}\r\n              {formatDistance(subMinutes(new Date(), 7), new Date(), {\r\n                addSuffix: true\r\n              })}\r\n            </Typography>\r\n          </Box>\r\n          <Divider sx={{ my: 3 }} />\r\n\r\n          <Accordion\r\n            expanded={expanded === 'section1'}\r\n            onChange={handleChange('section1')}\r\n          >\r\n            <AccordionSummaryWrapper expandIcon={<ExpandMoreIcon />}>\r\n              <Typography variant=\"h5\">Customize Chat</Typography>\r\n            </AccordionSummaryWrapper>\r\n            <AccordionDetails sx={{ p: 0 }}>\r\n              <List component=\"nav\">\r\n                <ListItem button>\r\n                  <ListItemIconWrapper>\r\n                    <SearchTwoToneIcon />\r\n                  </ListItemIconWrapper>\r\n                  <ListItemText\r\n                    primary=\"Search in Conversation\"\r\n                    primaryTypographyProps={{ variant: 'h5' }}\r\n                  />\r\n                </ListItem>\r\n                <ListItem button>\r\n                  <ListItemIconWrapper>\r\n                    <ColorLensTwoToneIcon />\r\n                  </ListItemIconWrapper>\r\n                  <ListItemText\r\n                    primary=\"Change Theme Styling\"\r\n                    primaryTypographyProps={{ variant: 'h5' }}\r\n                  />\r\n                </ListItem>\r\n                <ListItem button>\r\n                  <ListItemIconWrapper>\r\n                    <EmojiEmotionsTwoToneIcon />\r\n                  </ListItemIconWrapper>\r\n                  <ListItemText\r\n                    primary=\"Choose Default Emoji\"\r\n                    primaryTypographyProps={{ variant: 'h5' }}\r\n                  />\r\n                </ListItem>\r\n              </List>\r\n            </AccordionDetails>\r\n          </Accordion>\r\n          <Accordion\r\n            expanded={expanded === 'section2'}\r\n            onChange={handleChange('section2')}\r\n          >\r\n            <AccordionSummaryWrapper expandIcon={<ExpandMoreIcon />}>\r\n              <Typography variant=\"h5\">Privacy & Support</Typography>\r\n            </AccordionSummaryWrapper>\r\n            <AccordionDetails sx={{ p: 0 }}>\r\n              <List component=\"nav\">\r\n                <ListItem button>\r\n                  <ListItemIconWrapper>\r\n                    <NotificationsOffTwoToneIcon />\r\n                  </ListItemIconWrapper>\r\n                  <ListItemText\r\n                    primary=\"Turn off notifications\"\r\n                    primaryTypographyProps={{ variant: 'h5' }}\r\n                  />\r\n                </ListItem>\r\n                <ListItem button>\r\n                  <ListItemIconWrapper>\r\n                    <CancelTwoToneIcon />\r\n                  </ListItemIconWrapper>\r\n                  <ListItemText\r\n                    primary=\"Ignore all messages\"\r\n                    primaryTypographyProps={{ variant: 'h5' }}\r\n                  />\r\n                </ListItem>\r\n                <ListItem button>\r\n                  <ListItemIconWrapper>\r\n                    <BlockTwoToneIcon />\r\n                  </ListItemIconWrapper>\r\n                  <ListItemText\r\n                    primary=\"Block user\"\r\n                    primaryTypographyProps={{ variant: 'h5' }}\r\n                  />\r\n                </ListItem>\r\n                <ListItem button>\r\n                  <ListItemIconWrapper>\r\n                    <WarningTwoToneIcon />\r\n                  </ListItemIconWrapper>\r\n                  <ListItemText\r\n                    primary=\"Something's Wrong\"\r\n                    primaryTypographyProps={{ variant: 'h5' }}\r\n                    secondary=\"Report the conversation and provide feedback\"\r\n                    secondaryTypographyProps={{ variant: 'subtitle1' }}\r\n                  />\r\n                </ListItem>\r\n              </List>\r\n            </AccordionDetails>\r\n          </Accordion>\r\n          <Accordion\r\n            expanded={expanded === 'section3'}\r\n            onChange={handleChange('section3')}\r\n          >\r\n            <AccordionSummaryWrapper expandIcon={<ExpandMoreIcon />}>\r\n              <Typography variant=\"h5\">Shared Files</Typography>\r\n            </AccordionSummaryWrapper>\r\n            <AccordionDetails sx={{ p: 0 }}>\r\n              <List component=\"nav\">\r\n                <ListItem button>\r\n                  <ListItemIconWrapper>\r\n                    <DescriptionTwoToneIcon />\r\n                  </ListItemIconWrapper>\r\n                  <ListItemText\r\n                    primary=\"HolidayPictures.zip\"\r\n                    primaryTypographyProps={{ variant: 'h5' }}\r\n                    secondary=\"You opened in the past year\"\r\n                    secondaryTypographyProps={{ variant: 'subtitle1' }}\r\n                  />\r\n                </ListItem>\r\n                <ListItem button>\r\n                  <ListItemIconWrapper>\r\n                    <DescriptionTwoToneIcon />\r\n                  </ListItemIconWrapper>\r\n                  <ListItemText\r\n                    primary=\"2021Screenshot.jpg\"\r\n                    primaryTypographyProps={{ variant: 'h5' }}\r\n                    secondary=\"You edited this file yesterday\"\r\n                    secondaryTypographyProps={{ variant: 'subtitle1' }}\r\n                  />\r\n                </ListItem>\r\n                <ListItem button>\r\n                  <ListItemIconWrapper>\r\n                    <DescriptionTwoToneIcon />\r\n                  </ListItemIconWrapper>\r\n                  <ListItemText\r\n                    primary=\"PresentationDeck.pdf\"\r\n                    primaryTypographyProps={{ variant: 'h5' }}\r\n                    secondary=\"Never opened\"\r\n                    secondaryTypographyProps={{ variant: 'subtitle1' }}\r\n                  />\r\n                </ListItem>\r\n              </List>\r\n            </AccordionDetails>\r\n          </Accordion>\r\n        </Box>\r\n      </Drawer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TopBarContent;\r\n","import { useState, FC } from \"react\"\r\nimport {\r\n  Card,\r\n  Avatar,\r\n  Tooltip,\r\n  IconButton,\r\n  Box,\r\n  Button,\r\n  Hidden,\r\n  TextField,\r\n  Divider,\r\n  CircularProgress\r\n} from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\nimport AttachFileTwoToneIcon from '@mui/icons-material/AttachFileTwoTone';\r\nimport SendTwoToneIcon from '@mui/icons-material/SendTwoTone';\r\n\r\nconst DividerWrapper = styled(Divider)(\r\n  ({ theme }) => `\r\n        height: 40px !important;\r\n        margin: 0 ${theme.spacing(2)};\r\n        align-self: center;\r\n`\r\n);\r\n\r\nconst Input = styled('input')({\r\n  display: 'none'\r\n});\r\n\r\ninterface Props {\r\n  sendMessage: (text: string) => void;\r\n  disabled: boolean;\r\n  isLoading: boolean;\r\n}\r\n\r\nconst BottomBarContent: FC<Props> = (props) => {\r\n  const user =\r\n  {\r\n    name: 'Catherine Pike',\r\n    avatar: '/static/images/avatars/1.jpg'\r\n  };\r\n\r\n  const [text, setText] = useState(\"\")\r\n\r\n  const handleChange = (event: any) => {\r\n    setText(event.target.value)\r\n  }\r\n\r\n  const sendMessage = () => {\r\n    if (text.length > 0) {\r\n      props.sendMessage(text)\r\n      setText(\"\")\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card sx={{ display: 'flex', alignItems: 'center', p: 2 }}>\r\n      <Hidden mdDown>\r\n        <Avatar alt={user.name} src={user.avatar} />\r\n        <DividerWrapper orientation=\"vertical\" flexItem />\r\n      </Hidden>\r\n      <Box sx={{ flex: 1, mr: 2 }}>\r\n        <TextField\r\n          hiddenLabel\r\n          fullWidth\r\n          placeholder=\"Write here your message...\"\r\n          onChange={handleChange}\r\n          value={text}\r\n        />\r\n      </Box>\r\n      <Tooltip arrow placement=\"top\" title=\"Choose an emoji\">\r\n        <IconButton color=\"primary\">😀</IconButton>\r\n      </Tooltip>\r\n      <Input accept=\"image/*\" id=\"messenger-upload-file\" type=\"file\" />\r\n      <Tooltip arrow placement=\"top\" title=\"Attach a file\">\r\n        < label htmlFor=\"messenger-upload-file\" >\r\n          <IconButton color=\"primary\" component=\"span\">\r\n            <AttachFileTwoToneIcon />\r\n          </IconButton>\r\n        </label >\r\n      </Tooltip >\r\n      <Hidden mdDown>\r\n        <DividerWrapper orientation=\"vertical\" flexItem />\r\n        {props.isLoading ? <CircularProgress /> :\r\n          <Button startIcon={<SendTwoToneIcon />} variant=\"contained\" onClick={sendMessage} disabled={props.disabled}>\r\n            Send\r\n          </Button>}\r\n      </Hidden>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default BottomBarContent;\r\n","import { IMessage, SenderRole } from \"src/models/InvestmentModels/message\"\r\n\r\nexport const getUnReadMessagesCount = (new_messages: any[], messages: any[]) => {\r\n  let totalCount = 0\r\n  const new_ids = new_messages.filter(message => message.sender_role === SenderRole.USER).map(item => String(item._id))\r\n  const old_ids = messages.filter(message => message.sender_role === SenderRole.USER).map(item => String(item._id))\r\n  new_ids.forEach(id => {\r\n    const foundIndex = old_ids.findIndex(_id => _id === id)\r\n    if (foundIndex < 0) ++totalCount\r\n  })\r\n  return totalCount\r\n}\r\n\r\nexport const getUpdatedReadMessages = (new_messages: any[], messages: any[]) => {\r\n  const updated_old_messages = [...messages].filter(message => message.sender_role === SenderRole.USER)\r\n  const updated_new_messages = [...new_messages].filter(message => message.sender_role === SenderRole.USER)\r\n  updated_new_messages.forEach(message => {\r\n    const foundIndex = updated_old_messages.findIndex(item => String(item._id) === String(message._id))\r\n    if (foundIndex < 0) {\r\n      updated_old_messages.push(message)\r\n    }\r\n  })\r\n  return updated_old_messages\r\n}\r\n\r\nexport const getMessage = (_id: string, messages: IMessage[]): IMessage => {\r\n  const foundIndex = messages.findIndex(message => String(message._id) === String(_id))\r\n  return foundIndex >= 0? messages[foundIndex] : {} as unknown as IMessage\r\n}\r\n\r\nexport const getFromAndToMessages = (messages: IMessage[]): IMessage[] => {\r\n  const resolvedMessages: IMessage[] = []\r\n  messages.forEach(item => {\r\n    const foundIndex = resolvedMessages.findIndex(prop => prop.chatID === item.chatID)\r\n    if (foundIndex >= 0) {\r\n      resolvedMessages[foundIndex] = item\r\n    } else {\r\n      resolvedMessages.push(item)\r\n    }\r\n  })\r\n  return resolvedMessages\r\n}\r\n\r\nexport const getDefaultFromAndToMessages = (chatID: string, messages: IMessage[]): IMessage[] => {\r\n  return messages.filter((item: any) => item.chatID === chatID)\r\n}","import { useState, ChangeEvent, FC } from 'react';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  FormControlLabel,\r\n  Switch,\r\n  Tabs,\r\n  Tab,\r\n  TextField,\r\n  IconButton,\r\n  InputAdornment,\r\n  Avatar,\r\n  List,\r\n  Button,\r\n  Tooltip,\r\n  Divider,\r\n  AvatarGroup,\r\n  ListItemButton,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  lighten\r\n} from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\nimport { formatDistance, subMinutes, subHours } from 'date-fns';\r\nimport SettingsTwoToneIcon from '@mui/icons-material/SettingsTwoTone';\r\nimport SearchTwoToneIcon from '@mui/icons-material/SearchTwoTone';\r\nimport Label from 'src/components/Label';\r\nimport CheckTwoToneIcon from '@mui/icons-material/CheckTwoTone';\r\nimport AlarmTwoToneIcon from '@mui/icons-material/AlarmTwoTone';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { selectReadMessages } from \"src/store/States/Buffer\"\r\nimport { getUnReadMessagesCount } from \"src/store/States/Investment/Message/helper\"\r\nimport { useSelector } from \"react-redux\"\r\n\r\nconst AvatarSuccess = styled(Avatar)(\r\n  ({ theme }) => `\r\n          background-color: ${theme.colors.success.lighter};\r\n          color: ${theme.colors.success.main};\r\n          width: ${theme.spacing(8)};\r\n          height: ${theme.spacing(8)};\r\n          margin-left: auto;\r\n          margin-right: auto;\r\n    `\r\n);\r\n\r\nconst MeetingBox = styled(Box)(\r\n  ({ theme }) => `\r\n          background-color: ${lighten(theme.colors.alpha.black[10], 0.5)};\r\n          margin: ${theme.spacing(2)} 0;\r\n          border-radius: ${theme.general.borderRadius};\r\n          padding: ${theme.spacing(2)};\r\n    `\r\n);\r\n\r\nconst RootWrapper = styled(Box)(\r\n  ({ theme }) => `\r\n        padding: ${theme.spacing(2.5)};\r\n  `\r\n);\r\n\r\nconst ListItemWrapper = styled(ListItemButton)(\r\n  ({ theme }) => `\r\n        &.MuiButtonBase-root {\r\n            margin: ${theme.spacing(1)} 0;\r\n        }\r\n  `\r\n);\r\n\r\nconst TabsContainerWrapper = styled(Box)(\r\n  ({ theme }) => `\r\n        .MuiTabs-indicator {\r\n            min-height: 4px;\r\n            height: 4px;\r\n            box-shadow: none;\r\n            border: 0;\r\n        }\r\n\r\n        .MuiTab-root {\r\n            &.MuiButtonBase-root {\r\n                padding: 0;\r\n                margin-right: ${theme.spacing(3)};\r\n                font-size: ${theme.typography.pxToRem(16)};\r\n                color: ${theme.colors.alpha.black[50]};\r\n\r\n                .MuiTouchRipple-root {\r\n                    display: none;\r\n                }\r\n            }\r\n\r\n            &.Mui-selected:hover,\r\n            &.Mui-selected {\r\n                color: ${theme.colors.alpha.black[100]};\r\n            }\r\n        }\r\n  `\r\n);\r\n\r\ninterface Props {\r\n  messages: any[]\r\n  clickMessage: (_id: string) => void;\r\n  allMessages: any[]\r\n}\r\n\r\nconst SidebarContent: FC<Props> = (props) => {\r\n  const user =\r\n  {\r\n    name: 'Catherine Pike',\r\n    avatar: '/static/images/avatars/1.jpg',\r\n    jobtitle: 'Software Developer'\r\n  };\r\n\r\n  const [state, setState] = useState({\r\n    invisible: true\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.checked\r\n    });\r\n  };\r\n\r\n  const [currentTab, setCurrentTab] = useState<string>('all');\r\n\r\n  const tabs = [\r\n    { value: 'all', label: 'All' },\r\n    { value: 'unread', label: 'Unread' },\r\n    { value: 'archived', label: 'Archived' }\r\n  ];\r\n\r\n  const handleTabsChange = (event: ChangeEvent<{}>, value: string): void => {\r\n    setCurrentTab(value);\r\n  };\r\n  const [selectedMessage, setSelectedMessage] = useState(\"\")\r\n  const readMessages = useSelector(selectReadMessages)\r\n\r\n  const clickMessage = (_id: string) => {\r\n    setSelectedMessage(_id)\r\n    props.clickMessage(_id)\r\n  }\r\n\r\n  const renderMessageContent = (item: any) => {\r\n    const count = getUnReadMessagesCount(\r\n      props.allMessages.filter(message => message.chatID === item.chatID),\r\n      readMessages\r\n    )\r\n    return (\r\n      <ListItemWrapper selected={String(item._id) === String(selectedMessage)} onClick={() => clickMessage(item._id)} key={item._id}>\r\n        <ListItemAvatar>\r\n          <Avatar src=\"https://thispersondoesnotexist.com/image\" />\r\n        </ListItemAvatar>\r\n        <ListItemText\r\n          sx={{ mr: 1 }}\r\n          primaryTypographyProps={{\r\n            color: 'textPrimary',\r\n            variant: 'h5',\r\n            noWrap: true\r\n          }}\r\n          secondaryTypographyProps={{\r\n            color: 'textSecondary',\r\n            noWrap: true\r\n          }}\r\n          primary={item.name}\r\n          secondary={item.content}\r\n        />\r\n        {Boolean(count) && <Label color=\"primary\">\r\n          <b>{count}</b>\r\n        </Label>}\r\n      </ListItemWrapper>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <RootWrapper>\r\n      <Box display=\"flex\" alignItems=\"flex-start\">\r\n        <Avatar alt={user.name} src={user.avatar} />\r\n        <Box sx={{ ml: 1.5, flex: 1 }}>\r\n          <Box\r\n            display=\"flex\"\r\n            alignItems=\"flex-start\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Box>\r\n              <Typography variant=\"h5\" noWrap>\r\n                {user.name}\r\n              </Typography>\r\n              <Typography variant=\"subtitle1\" noWrap>\r\n                {user.jobtitle}\r\n              </Typography>\r\n            </Box>\r\n            <IconButton sx={{ p: 1 }} size=\"small\" color=\"primary\">\r\n              <SettingsTwoToneIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          </Box>\r\n\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                checked={state.invisible}\r\n                onChange={handleChange}\r\n                name=\"invisible\"\r\n                color=\"primary\"\r\n              />\r\n            }\r\n            label=\"Invisible\"\r\n          />\r\n        </Box>\r\n      </Box>\r\n\r\n      <TextField\r\n        sx={{ mt: 2, mb: 1 }}\r\n        size=\"small\"\r\n        fullWidth\r\n        InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position=\"start\">\r\n              <SearchTwoToneIcon />\r\n            </InputAdornment>\r\n          )\r\n        }}\r\n        placeholder=\"Search...\"\r\n      />\r\n\r\n      <Typography sx={{ mb: 1, mt: 2 }} variant=\"h3\">\r\n        Chats\r\n      </Typography>\r\n\r\n      <TabsContainerWrapper>\r\n        <Tabs\r\n          onChange={handleTabsChange}\r\n          value={currentTab}\r\n          variant=\"scrollable\"\r\n          scrollButtons=\"auto\"\r\n          textColor=\"primary\"\r\n          indicatorColor=\"primary\"\r\n        >\r\n          {tabs.map((tab) => (\r\n            <Tab key={tab.value} label={tab.label} value={tab.value} />\r\n          ))}\r\n        </Tabs>\r\n      </TabsContainerWrapper>\r\n\r\n      <Box mt={2}>\r\n        {currentTab === 'all' && (\r\n          <List disablePadding component=\"div\">\r\n            {props.messages.map(item => (\r\n              renderMessageContent(item)\r\n            ))}\r\n          </List>\r\n        )}\r\n        {currentTab === 'unread' && (\r\n          <List disablePadding component=\"div\">\r\n            <ListItemWrapper>\r\n              <ListItemAvatar>\r\n                <Avatar src=\"/static/images/avatars/1.jpg\" />\r\n              </ListItemAvatar>\r\n              <ListItemText\r\n                sx={{ mr: 1 }}\r\n                primaryTypographyProps={{\r\n                  color: 'textPrimary',\r\n                  variant: 'h5',\r\n                  noWrap: true\r\n                }}\r\n                secondaryTypographyProps={{\r\n                  color: 'textSecondary',\r\n                  noWrap: true\r\n                }}\r\n                primary=\"Zain Baptista\"\r\n                secondary=\"Hey there, how are you today? Is it ok if I call you?\"\r\n              />\r\n              <Label color=\"primary\">\r\n                <b>2</b>\r\n              </Label>\r\n            </ListItemWrapper>\r\n            <ListItemWrapper>\r\n              <ListItemAvatar>\r\n                <Avatar src=\"/static/images/avatars/4.jpg\" />\r\n              </ListItemAvatar>\r\n              <ListItemText\r\n                sx={{ mr: 1 }}\r\n                primaryTypographyProps={{\r\n                  color: 'textPrimary',\r\n                  variant: 'h5',\r\n                  noWrap: true\r\n                }}\r\n                secondaryTypographyProps={{\r\n                  color: 'textSecondary',\r\n                  noWrap: true\r\n                }}\r\n                primary=\"Adison Press\"\r\n                secondary=\"I recently did some buying on Amazon and now I'm stuck\"\r\n              />\r\n              <Label color=\"primary\">\r\n                <b>8</b>\r\n              </Label>\r\n            </ListItemWrapper>\r\n          </List>\r\n        )}\r\n        {currentTab === 'archived' && (\r\n          <Box pb={3}>\r\n            <Divider sx={{ mb: 3 }} />\r\n            <AvatarSuccess>\r\n              <CheckTwoToneIcon />\r\n            </AvatarSuccess>\r\n            <Typography sx={{ mt: 2, textAlign: 'center' }} variant=\"subtitle2\">\r\n              Hurray! There are no archived chats!\r\n            </Typography>\r\n            <Divider sx={{ mt: 3 }} />\r\n          </Box>\r\n        )}\r\n      </Box>\r\n    </RootWrapper>\r\n  );\r\n}\r\n\r\nexport default SidebarContent;\r\n","import { FC } from \"react\"\r\nimport { Box, Avatar, Typography, Card, Divider } from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\nimport {\r\n  formatDistance,\r\n  format,\r\n  subDays,\r\n  subHours,\r\n  subMinutes\r\n} from 'date-fns';\r\nimport ScheduleTwoToneIcon from '@mui/icons-material/ScheduleTwoTone';\r\nimport { SenderRole } from \"src/models/InvestmentModels/message\"\r\n\r\nconst DividerWrapper = styled(Divider)(\r\n  ({ theme }) => `\r\n      .MuiDivider-wrapper {\r\n        text-transform: none;\r\n        background: ${theme.palette.background.default};\r\n        font-size: ${theme.typography.pxToRem(13)};\r\n        color: ${theme.colors.alpha.black[50]};\r\n      }\r\n`\r\n);\r\n\r\nconst CardWrapperPrimary = styled(Card)(\r\n  ({ theme }) => `\r\n      background: ${theme.colors.primary.main};\r\n      color: ${theme.palette.primary.contrastText};\r\n      padding: ${theme.spacing(2)};\r\n      border-radius: ${theme.general.borderRadiusXl};\r\n      border-top-right-radius: ${theme.general.borderRadius};\r\n      max-width: 380px;\r\n      display: inline-flex;\r\n`\r\n);\r\n\r\nconst CardWrapperSecondary = styled(Card)(\r\n  ({ theme }) => `\r\n      background: ${theme.colors.alpha.black[10]};\r\n      color: ${theme.colors.alpha.black[100]};\r\n      padding: ${theme.spacing(2)};\r\n      border-radius: ${theme.general.borderRadiusXl};\r\n      border-top-left-radius: ${theme.general.borderRadius};\r\n      max-width: 380px;\r\n      display: inline-flex;\r\n`\r\n);\r\n\r\ninterface Props {\r\n  name: string\r\n  messages: any[]\r\n}\r\n\r\nconst ChatContent: FC<Props> = (props) => {\r\n  const user =\r\n  {\r\n    name: 'Catherine Pike',\r\n    avatar: '/static/images/avatars/1.jpg'\r\n  };\r\n  const renderFromUser = (text: string, createdAt: string) => (\r\n    <Box\r\n      display=\"flex\"\r\n      alignItems=\"flex-start\"\r\n      justifyContent=\"flex-start\"\r\n      py={3}\r\n      key={createdAt}\r\n    >\r\n      <Avatar\r\n        variant=\"rounded\"\r\n        sx={{ width: 50, height: 50 }}\r\n        alt=\"Zain Baptista\"\r\n        src=\"/static/images/avatars/2.jpg\"\r\n      />\r\n      <Box\r\n        display=\"flex\"\r\n        alignItems=\"flex-start\"\r\n        flexDirection=\"column\"\r\n        justifyContent=\"flex-start\"\r\n        ml={2}\r\n      >\r\n        <CardWrapperSecondary>\r\n          {text}\r\n        </CardWrapperSecondary>\r\n        <Typography\r\n          variant=\"subtitle1\"\r\n          sx={{ pt: 1, display: 'flex', alignItems: 'center' }}\r\n        >\r\n          <ScheduleTwoToneIcon sx={{ mr: 0.5 }} fontSize=\"small\" />\r\n          {formatDistance(subHours(new Date(createdAt), 0), new Date(), {\r\n            addSuffix: true\r\n          })}\r\n        </Typography>\r\n      </Box>\r\n    </Box>\r\n  )\r\n\r\n  const renderAdminReply = (text: string, createdAt: string) => (\r\n    <Box\r\n      display=\"flex\"\r\n      alignItems=\"flex-start\"\r\n      justifyContent=\"flex-end\"\r\n      py={3}\r\n      key={createdAt}\r\n    >\r\n      <Box\r\n        display=\"flex\"\r\n        alignItems=\"flex-end\"\r\n        flexDirection=\"column\"\r\n        justifyContent=\"flex-end\"\r\n        mr={2}\r\n      >\r\n        <CardWrapperPrimary>\r\n          {text}\r\n        </CardWrapperPrimary>\r\n        <Typography\r\n          variant=\"subtitle1\"\r\n          sx={{ pt: 1, display: 'flex', alignItems: 'center' }}\r\n        >\r\n          <ScheduleTwoToneIcon sx={{ mr: 0.5 }} fontSize=\"small\" />\r\n          {formatDistance(subHours(new Date(createdAt), 0), new Date(), {\r\n            addSuffix: true\r\n          })}\r\n        </Typography>\r\n      </Box>\r\n      <Avatar\r\n        variant=\"rounded\"\r\n        sx={{ width: 50, height: 50 }}\r\n        alt={user.name}\r\n        src={user.avatar}\r\n      />\r\n    </Box>\r\n  )\r\n\r\n  return (\r\n    <Box p={3}>\r\n      <DividerWrapper>\r\n        {format(subDays(new Date(), 3), 'MMMM dd yyyy')}\r\n      </DividerWrapper>\r\n\r\n      {props.messages.slice(0).reverse().map(message => {\r\n        return message.sender_role === SenderRole.USER? renderFromUser(message.content, message.createdAt) : renderAdminReply(message.content, message.createdAt)\r\n      })}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default ChatContent;\r\n","import { IUser } from \"src/models/InvestmentModels/user\"\r\n\r\nexport const getUser = (_id: string, users: IUser[]): IUser => {\r\n  const foundIndex = users.findIndex(user => String(user.service_id) === String(_id))\r\n  return foundIndex >= 0? users[foundIndex] : {} as unknown as IUser\r\n}","import { IAccount } from \"src/models/InvestmentModels/account\"\r\n\r\nexport const getAccountByID = (_id: string, users: IAccount[]): IAccount => {\r\n  const foundIndex = users.findIndex(user => String(user._id) === String(_id))\r\n  return foundIndex >= 0? users[foundIndex] : {} as unknown as IAccount\r\n}\r\n\r\nexport const getAccount = (_id: string, accounts: IAccount[]): IAccount => {\r\n  const foundIndex = accounts.findIndex(user => String(user.service_id) === String(_id))\r\n  return foundIndex >= 0? accounts[foundIndex] : {} as unknown as IAccount\r\n}","const { toString, hasOwnProperty } = Object.prototype;\nconst fnToStr = Function.prototype.toString;\nconst previousComparisons = new Map<object, Set<object>>();\n\n/**\n * Performs a deep equality check on two JavaScript values, tolerating cycles.\n */\nexport function equal(a: any, b: any): boolean {\n  try {\n    return check(a, b);\n  } finally {\n    previousComparisons.clear();\n  }\n}\n\n// Allow default imports as well.\nexport default equal;\n\nfunction check(a: any, b: any): boolean {\n  // If the two values are strictly equal, our job is easy.\n  if (a === b) {\n    return true;\n  }\n\n  // Object.prototype.toString returns a representation of the runtime type of\n  // the given value that is considerably more precise than typeof.\n  const aTag = toString.call(a);\n  const bTag = toString.call(b);\n\n  // If the runtime types of a and b are different, they could maybe be equal\n  // under some interpretation of equality, but for simplicity and performance\n  // we just return false instead.\n  if (aTag !== bTag) {\n    return false;\n  }\n\n  switch (aTag) {\n    case '[object Array]':\n      // Arrays are a lot like other objects, but we can cheaply compare their\n      // lengths as a short-cut before comparing their elements.\n      if (a.length !== b.length) return false;\n      // Fall through to object case...\n    case '[object Object]': {\n      if (previouslyCompared(a, b)) return true;\n\n      const aKeys = definedKeys(a);\n      const bKeys = definedKeys(b);\n\n      // If `a` and `b` have a different number of enumerable keys, they\n      // must be different.\n      const keyCount = aKeys.length;\n      if (keyCount !== bKeys.length) return false;\n\n      // Now make sure they have the same keys.\n      for (let k = 0; k < keyCount; ++k) {\n        if (!hasOwnProperty.call(b, aKeys[k])) {\n          return false;\n        }\n      }\n\n      // Finally, check deep equality of all child properties.\n      for (let k = 0; k < keyCount; ++k) {\n        const key = aKeys[k];\n        if (!check(a[key], b[key])) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    case '[object Error]':\n      return a.name === b.name && a.message === b.message;\n\n    case '[object Number]':\n      // Handle NaN, which is !== itself.\n      if (a !== a) return b !== b;\n      // Fall through to shared +a === +b case...\n    case '[object Boolean]':\n    case '[object Date]':\n      return +a === +b;\n\n    case '[object RegExp]':\n    case '[object String]':\n      return a == `${b}`;\n\n    case '[object Map]':\n    case '[object Set]': {\n      if (a.size !== b.size) return false;\n      if (previouslyCompared(a, b)) return true;\n\n      const aIterator = a.entries();\n      const isMap = aTag === '[object Map]';\n\n      while (true) {\n        const info = aIterator.next();\n        if (info.done) break;\n\n        // If a instanceof Set, aValue === aKey.\n        const [aKey, aValue] = info.value;\n\n        // So this works the same way for both Set and Map.\n        if (!b.has(aKey)) {\n          return false;\n        }\n\n        // However, we care about deep equality of values only when dealing\n        // with Map structures.\n        if (isMap && !check(aValue, b.get(aKey))) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    case '[object Uint16Array]':\n    case '[object Uint8Array]': // Buffer, in Node.js.\n    case '[object Uint32Array]':\n    case '[object Int32Array]':\n    case '[object Int8Array]':\n    case '[object Int16Array]':\n    case '[object ArrayBuffer]':\n      // DataView doesn't need these conversions, but the equality check is\n      // otherwise the same.\n      a = new Uint8Array(a);\n      b = new Uint8Array(b);\n      // Fall through...\n    case '[object DataView]': {\n      let len = a.byteLength;\n      if (len === b.byteLength) {\n        while (len-- && a[len] === b[len]) {\n          // Keep looping as long as the bytes are equal.\n        }\n      }\n      return len === -1;\n    }\n\n    case '[object AsyncFunction]':\n    case '[object GeneratorFunction]':\n    case '[object AsyncGeneratorFunction]':\n    case '[object Function]': {\n      const aCode = fnToStr.call(a);\n      if (aCode !== fnToStr.call(b)) {\n        return false;\n      }\n\n      // We consider non-native functions equal if they have the same code\n      // (native functions require === because their code is censored).\n      // Note that this behavior is not entirely sound, since !== function\n      // objects with the same code can behave differently depending on\n      // their closure scope. However, any function can behave differently\n      // depending on the values of its input arguments (including this)\n      // and its calling context (including its closure scope), even\n      // though the function object is === to itself; and it is entirely\n      // possible for functions that are not === to behave exactly the\n      // same under all conceivable circumstances. Because none of these\n      // factors are statically decidable in JavaScript, JS function\n      // equality is not well-defined. This ambiguity allows us to\n      // consider the best possible heuristic among various imperfect\n      // options, and equating non-native functions that have the same\n      // code has enormous practical benefits, such as when comparing\n      // functions that are repeatedly passed as fresh function\n      // expressions within objects that are otherwise deeply equal. Since\n      // any function created from the same syntactic expression (in the\n      // same code location) will always stringify to the same code\n      // according to fnToStr.call, we can reasonably expect these\n      // repeatedly passed function expressions to have the same code, and\n      // thus behave \"the same\" (with all the caveats mentioned above),\n      // even though the runtime function objects are !== to one another.\n      return !endsWith(aCode, nativeCodeSuffix);\n    }\n  }\n\n  // Otherwise the values are not equal.\n  return false;\n}\n\nfunction definedKeys<TObject extends object>(obj: TObject) {\n  // Remember that the second argument to Array.prototype.filter will be\n  // used as `this` within the callback function.\n  return Object.keys(obj).filter(isDefinedKey, obj);\n}\nfunction isDefinedKey<TObject extends object>(\n  this: TObject,\n  key: keyof TObject,\n) {\n  return this[key] !== void 0;\n}\n\nconst nativeCodeSuffix = \"{ [native code] }\";\n\nfunction endsWith(full: string, suffix: string) {\n  const fromIndex = full.length - suffix.length;\n  return fromIndex >= 0 &&\n    full.indexOf(suffix, fromIndex) === fromIndex;\n}\n\nfunction previouslyCompared(a: object, b: object): boolean {\n  // Though cyclic references can make an object graph appear infinite from the\n  // perspective of a depth-first traversal, the graph still contains a finite\n  // number of distinct object references. We use the previousComparisons cache\n  // to avoid comparing the same pair of object references more than once, which\n  // guarantees termination (even if we end up comparing every object in one\n  // graph to every object in the other graph, which is extremely unlikely),\n  // while still allowing weird isomorphic structures (like rings with different\n  // lengths) a chance to pass the equality test.\n  let bSet = previousComparisons.get(a);\n  if (bSet) {\n    // Return true here because we can be sure false will be returned somewhere\n    // else if the objects are not equivalent.\n    if (bSet.has(b)) return true;\n  } else {\n    previousComparisons.set(a, bSet = new Set);\n  }\n  bSet.add(b);\n  return false;\n}\n","import { invariant } from '../../utilities/globals';\n\nimport {\n  DocumentNode,\n  DefinitionNode,\n  VariableDefinitionNode,\n  OperationDefinitionNode\n} from 'graphql';\n\nexport enum DocumentType {\n  Query,\n  Mutation,\n  Subscription\n}\n\nexport interface IDocumentDefinition {\n  type: DocumentType;\n  name: string;\n  variables: ReadonlyArray<VariableDefinitionNode>;\n}\n\nconst cache = new Map();\n\nexport function operationName(type: DocumentType) {\n  let name;\n  switch (type) {\n    case DocumentType.Query:\n      name = 'Query';\n      break;\n    case DocumentType.Mutation:\n      name = 'Mutation';\n      break;\n    case DocumentType.Subscription:\n      name = 'Subscription';\n      break;\n  }\n  return name;\n}\n\n// This parser is mostly used to safety check incoming documents.\nexport function parser(document: DocumentNode): IDocumentDefinition {\n  const cached = cache.get(document);\n  if (cached) return cached;\n\n  let variables, type, name;\n\n  invariant(\n    !!document && !!document.kind,\n    `Argument of ${document} passed to parser was not a valid GraphQL ` +\n      `DocumentNode. You may need to use 'graphql-tag' or another method ` +\n      `to convert your operation into a document`\n  );\n\n  const fragments = document.definitions.filter(\n    (x: DefinitionNode) => x.kind === 'FragmentDefinition'\n  );\n\n  const queries = document.definitions.filter(\n    (x: DefinitionNode) =>\n      x.kind === 'OperationDefinition' && x.operation === 'query'\n  );\n\n  const mutations = document.definitions.filter(\n    (x: DefinitionNode) =>\n      x.kind === 'OperationDefinition' && x.operation === 'mutation'\n  );\n\n  const subscriptions = document.definitions.filter(\n    (x: DefinitionNode) =>\n      x.kind === 'OperationDefinition' && x.operation === 'subscription'\n  );\n\n  invariant(\n    !fragments.length ||\n      (queries.length || mutations.length || subscriptions.length),\n    `Passing only a fragment to 'graphql' is not yet supported. ` +\n      `You must include a query, subscription or mutation as well`\n  );\n\n  invariant(\n    queries.length + mutations.length + subscriptions.length <= 1,\n    `react-apollo only supports a query, subscription, or a mutation per HOC. ` +\n      `${document} had ${queries.length} queries, ${subscriptions.length} ` +\n      `subscriptions and ${mutations.length} mutations. ` +\n      `You can use 'compose' to join multiple operation types to a component`\n  );\n\n  type = queries.length ? DocumentType.Query : DocumentType.Mutation;\n  if (!queries.length && !mutations.length) type = DocumentType.Subscription;\n\n  const definitions = queries.length\n    ? queries\n    : mutations.length\n    ? mutations\n    : subscriptions;\n\n  invariant(\n    definitions.length === 1,\n    `react-apollo only supports one definition per HOC. ${document} had ` +\n      `${definitions.length} definitions. ` +\n      `You can use 'compose' to join multiple operation types to a component`\n  );\n\n  const definition = definitions[0] as OperationDefinitionNode;\n  variables = definition.variableDefinitions || [];\n\n  if (definition.name && definition.name.kind === 'Name') {\n    name = definition.name.value;\n  } else {\n    name = 'data'; // fallback to using data if no name\n  }\n\n  const payload = { name, type, variables };\n  cache.set(document, payload);\n  return payload;\n}\n\nexport function verifyDocumentType(document: DocumentNode, type: DocumentType) {\n  const operation = parser(document);\n  const requiredOperationName = operationName(type);\n  const usedOperationName = operationName(operation.type);\n  invariant(\n    operation.type === type,\n    `Running a ${requiredOperationName} requires a graphql ` +\n      `${requiredOperationName}, but a ${usedOperationName} was used instead.`\n  );\n}\n\n","import '../../utilities/globals';\nimport { useState, useRef, useEffect } from 'react';\nimport { DocumentNode } from 'graphql';\nimport { TypedDocumentNode } from '@graphql-typed-document-node/core';\nimport { equal } from '@wry/equality';\n\nimport { DocumentType, verifyDocumentType } from '../parser';\nimport {\n  SubscriptionHookOptions,\n  SubscriptionResult\n} from '../types/types';\nimport { OperationVariables } from '../../core';\nimport { useApolloClient } from './useApolloClient';\n\nexport function useSubscription<TData = any, TVariables = OperationVariables>(\n  subscription: DocumentNode | TypedDocumentNode<TData, TVariables>,\n  options?: SubscriptionHookOptions<TData, TVariables>,\n) {\n  const client = useApolloClient(options?.client);\n  verifyDocumentType(subscription, DocumentType.Subscription);\n  const [result, setResult] = useState<SubscriptionResult<TData>>({\n    loading: !options?.skip,\n    error: void 0,\n    data: void 0,\n    variables: options?.variables,\n  });\n\n  const [observable, setObservable] = useState(() => {\n    if (options?.skip) {\n      return null;\n    }\n\n    return client.subscribe({\n      query: subscription,\n      variables: options?.variables,\n      fetchPolicy: options?.fetchPolicy,\n      context: options?.context,\n    });\n  });\n\n  const ref = useRef({ client, subscription, options });\n  useEffect(() => {\n    let shouldResubscribe = options?.shouldResubscribe;\n    if (typeof shouldResubscribe === 'function') {\n      shouldResubscribe = !!shouldResubscribe(options!);\n    }\n\n    if (options?.skip && !options?.skip !== !ref.current.options?.skip) {\n      setResult({\n        loading: false,\n        data: void 0,\n        error: void 0,\n        variables: options?.variables,\n      });\n      setObservable(null);\n    } else if (\n      shouldResubscribe !== false && (\n        client !== ref.current.client ||\n        subscription !== ref.current.subscription ||\n        options?.fetchPolicy !== ref.current.options?.fetchPolicy ||\n        !options?.skip !== !ref.current.options?.skip ||\n        !equal(options?.variables, ref.current.options?.variables)\n      )\n    ) {\n      setResult({\n        loading: true,\n        data: void 0,\n        error: void 0,\n        variables: options?.variables,\n      });\n      setObservable(client.subscribe({\n        query: subscription,\n        variables: options?.variables,\n        fetchPolicy: options?.fetchPolicy,\n        context: options?.context,\n      }));\n    }\n\n    Object.assign(ref.current, { client, subscription, options });\n  }, [client, subscription, options]);\n\n  useEffect(() => {\n    if (!observable) {\n      return;\n    }\n\n    const subscription = observable.subscribe({\n      next(fetchResult) {\n        const result = {\n          loading: false,\n          // TODO: fetchResult.data can be null but SubscriptionResult.data\n          // expects TData | undefined only\n          data: fetchResult.data!,\n          error: void 0,\n          variables: options?.variables,\n        };\n        setResult(result);\n\n        ref.current.options?.onSubscriptionData?.({\n          client,\n          subscriptionData: result\n        });\n      },\n      error(error) {\n        setResult({\n          loading: false,\n          data: void 0,\n          error,\n          variables: options?.variables,\n        });\n      },\n      complete() {\n        ref.current.options?.onSubscriptionComplete?.();\n      },\n    });\n\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, [observable]);\n\n  return result;\n}\n","import { invariant } from '../../utilities/globals';\nimport { useContext } from 'react';\nimport { ApolloClient } from '../../core';\nimport { getApolloContext } from '../context';\n\nexport function useApolloClient(\n  override?: ApolloClient<object>,\n): ApolloClient<object> {\n  const context = useContext(getApolloContext());\n  const client = override || context.client;\n  invariant(\n    !!client,\n    'Could not find \"client\" in the context or passed in as an option. ' +\n    'Wrap the root component in an <ApolloProvider>, or pass an ApolloClient ' +\n    'instance in via options.',\n  );\n\n  return client;\n}\n","import { useEffect, useRef, useState } from 'react';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport TopBarContent from './TopBarContent';\r\nimport BottomBarContent from './BottomBarContent';\r\nimport SidebarContent from './SidebarContent';\r\nimport ChatContent from './ChatContent';\r\nimport { Scrollbars } from 'react-custom-scrollbars-2';\r\nimport { Box } from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\nimport { Actions as MessageActions, Selectors as MessageSelectors, API as MessageAPI } from \"src/store/States/Investment/Message/\"\r\nimport { Actions as UserActions, Selectors as UserSelectors, API as UserAPI } from \"src/store/States/Investment/User/\"\r\nimport { Actions as AccountActions, Selectors as AccountSelectors, API as AccountAPI } from \"src/store/States/Investment/Account/\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { IMessage, SenderRole } from 'src/models/InvestmentModels/message';\r\nimport { IUser } from 'src/models/InvestmentModels/user';\r\nimport { IAccount } from 'src/models/InvestmentModels/account';\r\nimport { getUser } from \"src/store/States/Investment/User/helper\"\r\nimport { getAccount } from \"src/store/States/Investment/Account/helper\"\r\nimport { getMessage, getUnReadMessagesCount, getUpdatedReadMessages } from \"src/store/States/Investment/Message/helper\"\r\nimport { selectServiceID } from \"src/store/States/Buffer/\"\r\nimport { useSubscription } from \"@apollo/react-hooks\";\r\nimport { SubscribeToMessagesBody, SubscribeToMessagesBodyTag } from \"src/store/States/Investment/Message/query\"\r\nimport { Actions as BufferActions, selectReadMessages } from \"src/store/States/Buffer\"\r\n\r\nconst RootWrapper = styled(Box)(\r\n  () => `\r\n       height: 100%;\r\n       display: flex;\r\n`\r\n);\r\n\r\nconst Sidebar = styled(Box)(\r\n  ({ theme }) => `\r\n        width: 300px;\r\n        background: ${theme.colors.alpha.white[100]};\r\n        border-right: ${theme.colors.alpha.black[10]} solid 1px;\r\n`\r\n);\r\n\r\nconst ChatWindow = styled(Box)(\r\n  () => `\r\n        width: 100%;\r\n        height: 100%;\r\n        display: flex;\r\n        flex-direction: column;\r\n        flex: 1;\r\n`\r\n);\r\n\r\nconst ChatTopBar = styled(Box)(\r\n  ({ theme }) => `\r\n        background: ${theme.colors.alpha.white[100]};\r\n        border-bottom: ${theme.colors.alpha.black[10]} solid 1px;\r\n        padding: ${theme.spacing(3)};\r\n`\r\n);\r\n\r\nconst ChatMain = styled(Box)(\r\n  () => `\r\n        flex: 1;\r\n`\r\n);\r\n\r\nconst ChatBottomBar = styled(Box)(\r\n  ({ theme }) => `\r\n        padding: ${theme.spacing(3)};\r\n`\r\n);\r\n\r\nfunction ApplicationsMessenger() {\r\n  const ref = useRef<any>(null);\r\n\r\n  useEffect(() => {\r\n    if (ref.current) {\r\n      ref.current.scrollToBottom();\r\n    }\r\n  });\r\n\r\n  const dispatch = useDispatch()\r\n  const messages = useSelector(MessageSelectors.selectMessages) as IMessage[]\r\n  const users = useSelector(UserSelectors.selectUsers) as IUser[]\r\n  const accounts = useSelector(AccountSelectors.selectAccounts) as IAccount[]\r\n  const service_id = useSelector(selectServiceID)\r\n  useEffect(() => {\r\n    MessageAPI.FetchMessages((err: any, data: any) => {\r\n      if (err) throw err\r\n      dispatch(MessageActions.FetchedMessages(data))\r\n    })\r\n\r\n    UserAPI.FetchUsers((err: any, data: any) => {\r\n      if (err) throw err\r\n      dispatch(UserActions.FetchedUsers(data))\r\n    })\r\n\r\n    AccountAPI.FetchAccounts((err: any, data: any) => {\r\n      if (err) throw err\r\n      dispatch(AccountActions.FetchedAccounts(data))\r\n    })\r\n  }, [])\r\n\r\n  const readMessages = useSelector(selectReadMessages)\r\n  const [realMessages, setRealMessages] = useState([])\r\n  const [chatContent, setChatContent] = useState({\r\n    _id: \"\",\r\n    name: \"\",\r\n    messages: []\r\n  })\r\n\r\n  const clickMessage = (_id: string) => {\r\n    const message = getMessage(_id, messages)\r\n    const uniqueMessages = getUniqueItems([message, ...messages], \"_id\").filter(item => item.chatID === message.chatID)\r\n    if (message.sender_role === SenderRole.USER) {\r\n      const user = getUser(message.from_user, users)\r\n      setChatContent({\r\n        name: `${user.first_name} ${user.last_name}`,\r\n        _id: message.from_user,\r\n        messages: uniqueMessages\r\n      })\r\n    } else {\r\n      const account = getAccount(message.from_user, accounts)\r\n      setChatContent({\r\n        name: `${account.first_name} ${account.last_name}`,\r\n        _id: message.to_user,\r\n        messages: uniqueMessages,\r\n      })\r\n    }\r\n    dispatch(BufferActions.SetReadMessages(getUpdatedReadMessages(uniqueMessages, readMessages)))\r\n  }\r\n\r\n  const [isLoading, setLoading] = useState(false)\r\n  const [sentMessage, setSentMessage] = useState<any>({})\r\n\r\n  const sendMessage = (text: string) => {\r\n    setLoading(true)\r\n    service_id && MessageAPI.CreateMessage({\r\n      content: text,\r\n      from_user: service_id,\r\n      sender_role: SenderRole.ADMIN,\r\n      to_user: chatContent._id\r\n    }, (err: any, data: any) => {\r\n      if (err) throw err\r\n      if (data._id) {\r\n        dispatch(MessageActions.AddMessage(data))\r\n        setSentMessage(data)\r\n      }\r\n      setLoading(false)\r\n    })\r\n  }\r\n\r\n  const getUniqueItems = (items: any[], tag: string) => {\r\n    const uniqueItems = []\r\n    items.forEach(prop => {\r\n      const foundIndex = uniqueItems.findIndex(_prop => _prop[tag] === prop[tag])\r\n      if (foundIndex < 0) {\r\n        uniqueItems.push(prop)\r\n      }\r\n    })\r\n    return uniqueItems\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(sentMessage).length > 0) {\r\n      const uniqueMessages = []\r\n      messages.forEach((message: any) => {\r\n        const foundIndex = uniqueMessages.findIndex((item: any) => item.chatID === message.chatID)\r\n        if (foundIndex < 0) {\r\n          if (message.sender_role === SenderRole.ADMIN) {\r\n            const from_user = getAccount(message.from_user, accounts)\r\n            const to_user = getUser(message.to_user, users)\r\n            uniqueMessages.push({ ...message, from_user, to_user, name: `${from_user.first_name} ${from_user.last_name}` })\r\n          } else if (message.sender_role === SenderRole.USER) {\r\n            const from_user = getUser(message.from_user, users)\r\n            const to_user = getAccount(message.to_user, accounts)\r\n            uniqueMessages.push({ ...message, from_user, to_user, name: `${from_user.first_name} ${from_user.last_name}` })\r\n          }\r\n        }\r\n      })\r\n      setRealMessages(uniqueMessages)\r\n      if (sentMessage.sender_role === SenderRole.USER) {\r\n        const user = getUser(sentMessage.from_user, users)\r\n        if (user.service_id === chatContent._id) {\r\n          setChatContent({\r\n            _id: String(chatContent._id),\r\n            name: chatContent.name,\r\n            messages: messages.filter((item: any) => item.chatID === sentMessage.chatID),\r\n          })\r\n          dispatch(BufferActions.SetReadMessages(getUpdatedReadMessages(messages.filter((item: any) => item.chatID === sentMessage.chatID), readMessages)))\r\n        }\r\n      } else {\r\n        const user = getUser(sentMessage.to_user, users)\r\n        if (user.service_id === chatContent._id) {\r\n          setChatContent({\r\n            _id: String(chatContent._id),\r\n            name: chatContent.name,\r\n            messages: messages.filter((item: any) => item.chatID === sentMessage.chatID),\r\n          })\r\n          dispatch(BufferActions.SetReadMessages(getUpdatedReadMessages(messages.filter((item: any) => item.chatID === sentMessage.chatID), readMessages)))\r\n        }\r\n      }\r\n    } else {\r\n      const uniqueMessages = []\r\n      messages.forEach((message: any) => {\r\n        const foundIndex = uniqueMessages.findIndex((item: any) => item.chatID === message.chatID)\r\n        if (foundIndex < 0) {\r\n          if (message.sender_role === SenderRole.ADMIN) {\r\n            const from_user = getAccount(message.from_user, accounts)\r\n            const to_user = getUser(message.to_user, users)\r\n            uniqueMessages.push({ ...message, from_user, to_user, name: `${from_user.first_name} ${from_user.last_name}` })\r\n          } else if (message.sender_role === SenderRole.USER) {\r\n            const from_user = getUser(message.from_user, users)\r\n            const to_user = getAccount(message.to_user, accounts)\r\n            uniqueMessages.push({ ...message, from_user, to_user, name: `${from_user.first_name} ${from_user.last_name}` })\r\n          }\r\n        }\r\n      })\r\n      setRealMessages(uniqueMessages)\r\n    }\r\n  }, [messages, setRealMessages, sentMessage, setChatContent])\r\n\r\n  let { data, loading } = useSubscription(SubscribeToMessagesBody(service_id), {});\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      if (data[SubscribeToMessagesBodyTag]) {\r\n        setSentMessage(data[SubscribeToMessagesBodyTag])\r\n        dispatch(MessageActions.AddMessage(data[SubscribeToMessagesBodyTag]))\r\n      }\r\n    }\r\n  }, [loading, data, setSentMessage]);\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Messenger - Applications</title>\r\n      </Helmet>\r\n      <RootWrapper>\r\n        <Sidebar>\r\n          <Scrollbars autoHide>\r\n            <SidebarContent\r\n              messages={realMessages}\r\n              clickMessage={clickMessage}\r\n              allMessages={messages}\r\n            />\r\n          </Scrollbars>\r\n        </Sidebar>\r\n        <ChatWindow>\r\n          <ChatTopBar>\r\n            <TopBarContent\r\n              name={chatContent.name}\r\n            />\r\n          </ChatTopBar>\r\n          <ChatMain>\r\n            <Scrollbars ref={ref} autoHide>\r\n              <ChatContent\r\n                name={chatContent.name}\r\n                messages={chatContent.messages}\r\n              />\r\n            </Scrollbars>\r\n          </ChatMain>\r\n          <ChatBottomBar>\r\n            <BottomBarContent\r\n              sendMessage={sendMessage}\r\n              disabled={!(chatContent.name.length > 0)}\r\n              isLoading={isLoading}\r\n            />\r\n          </ChatBottomBar>\r\n        </ChatWindow>\r\n      </RootWrapper>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ApplicationsMessenger;","import { FC, ReactNode } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { styled } from '@mui/material/styles';\r\n\r\ninterface LabelProps {\r\n  className?: string;\r\n  color?: 'primary' | 'secondary' | 'error' | 'warning' | 'success' | 'info';\r\n  children?: ReactNode;\r\n}\r\n\r\nconst LabelWrapper = styled('span')(\r\n  ({ theme }) => `\r\n      background-color: ${theme.colors.alpha.black[5]};\r\n      padding: ${theme.spacing(0.5, 1)};\r\n      font-size: ${theme.typography.pxToRem(13)};\r\n      border-radius: ${theme.general.borderRadius};\r\n      display: inline-flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      max-height: ${theme.spacing(3)};\r\n      \r\n      &.MuiLabel {\r\n        &-primary {\r\n          background-color: ${theme.colors.primary.lighter};\r\n          color: ${theme.palette.primary.main}\r\n        }\r\n        \r\n        &-secondary {\r\n          background-color: ${theme.colors.secondary.lighter};\r\n          color: ${theme.palette.secondary.main}\r\n        }\r\n        \r\n        &-success {\r\n          background-color: ${theme.colors.success.lighter};\r\n          color: ${theme.palette.success.main}\r\n        }\r\n        \r\n        &-warning {\r\n          background-color: ${theme.colors.warning.lighter};\r\n          color: ${theme.palette.warning.main}\r\n        }\r\n              \r\n        &-error {\r\n          background-color: ${theme.colors.error.lighter};\r\n          color: ${theme.palette.error.main}\r\n        }\r\n        \r\n        &-info {\r\n          background-color: ${theme.colors.info.lighter};\r\n          color: ${theme.palette.info.main}\r\n        }\r\n      }\r\n`\r\n);\r\n\r\nconst Label: FC<LabelProps> = ({\r\n  className = '',\r\n  color = 'secondary',\r\n  children,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <LabelWrapper className={'MuiLabel-' + color} {...rest}>\r\n      {children}\r\n    </LabelWrapper>\r\n  );\r\n};\r\n\r\nLabel.propTypes = {\r\n  children: PropTypes.node,\r\n  className: PropTypes.string,\r\n  color: PropTypes.oneOf([\r\n    'primary',\r\n    'secondary',\r\n    'error',\r\n    'warning',\r\n    'success',\r\n    'info'\r\n  ])\r\n};\r\n\r\nexport default Label;\r\n"],"sourceRoot":""}