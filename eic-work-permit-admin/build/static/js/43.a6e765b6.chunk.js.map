{"version":3,"sources":["pages/WorkPermit/ProjectCategory/PageHeader.tsx","../node_modules/@mui/lab/TabContext/TabContext.js","../node_modules/@mui/lab/TabList/TabList.js","../node_modules/@mui/lab/TabPanel/tabPanelClasses.js","../node_modules/@mui/lab/TabPanel/TabPanel.js","pages/WorkPermit/ProjectCategory/Tabs/Sector/BulkActions.tsx","pages/WorkPermit/ProjectCategory/Tabs/Sector/ViewModal.tsx","pages/WorkPermit/ProjectCategory/Tabs/Sector/DeleteModal.tsx","pages/WorkPermit/ProjectCategory/Tabs/Sector/SectorsTable.tsx","pages/WorkPermit/ProjectCategory/Tabs/Sector/index.tsx","pages/WorkPermit/ProjectCategory/Tabs/SubSector/BulkActions.tsx","pages/WorkPermit/ProjectCategory/Tabs/SubSector/ViewModal.tsx","pages/WorkPermit/ProjectCategory/Tabs/SubSector/DeleteModal.tsx","store/States/Investment/Category/Sector/helper.ts","pages/WorkPermit/ProjectCategory/Tabs/SubSector/SubSectorsTable.tsx","pages/WorkPermit/ProjectCategory/Tabs/SubSector/index.tsx","pages/WorkPermit/ProjectCategory/Tabs/Activity/BulkActions.tsx","store/States/Investment/Category/SubSector/helper.ts","pages/WorkPermit/ProjectCategory/Tabs/Activity/ViewModal.tsx","pages/WorkPermit/ProjectCategory/Tabs/Activity/DeleteModal.tsx","pages/WorkPermit/ProjectCategory/Tabs/Activity/ActivitiesTable.tsx","pages/WorkPermit/ProjectCategory/Tabs/Activity/index.tsx","pages/WorkPermit/ProjectCategory/Tabs/InvestmentActivity/BulkActions.tsx","store/States/Investment/Category/Activity/helper.ts","pages/WorkPermit/ProjectCategory/Tabs/InvestmentActivity/ViewModal.tsx","pages/WorkPermit/ProjectCategory/Tabs/InvestmentActivity/DeleteModal.tsx","pages/WorkPermit/ProjectCategory/Tabs/InvestmentActivity/InvestmentActivitiesTable.tsx","pages/WorkPermit/ProjectCategory/Tabs/InvestmentActivity/index.tsx","pages/WorkPermit/ProjectCategory/index.tsx","components/PageTitleWrapper/index.tsx","components/Label/index.tsx","../node_modules/@mui/icons-material/MoreVertTwoTone.js","../node_modules/@mui/icons-material/RemoveRedEyeSharp.js","../node_modules/@mui/icons-material/EditTwoTone.js","../node_modules/@mui/material/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@mui/material/internal/svg-icons/CheckBox.js","../node_modules/@mui/material/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@mui/material/Checkbox/checkboxClasses.js","../node_modules/@mui/material/Checkbox/Checkbox.js","../node_modules/@mui/icons-material/Add.js","utils/date.ts"],"names":["PageHeader","useNavigate","Grid","container","justifyContent","alignItems","item","Typography","variant","component","gutterBottom","Context","React","TabContext","props","children","value","idPrefix","id","setId","Math","round","random","useUniquePrefix","context","_jsx","Provider","useTabContext","getPanelId","getTabId","_excluded","TabList","ref","childrenProp","other","_objectWithoutPropertiesLoose","TypeError","map","child","Tabs","_extends","getTabPanelUtilityClass","slot","generateUtilityClass","generateUtilityClasses","TabPanelRoot","styled","name","overridesResolver","styles","root","padding","theme","spacing","TabPanel","inProps","useThemeProps","className","ownerState","classes","composeClasses","useUtilityClasses","tabId","clsx","hidden","role","ButtonError","Button","colors","error","main","palette","contrastText","dark","BulkActions","useState","onMenuOpen","menuOpen","moreRef","useRef","Box","display","color","sx","ml","startIcon","IconButton","onClick","p","Menu","keepMounted","anchorEl","current","open","onClose","anchorOrigin","vertical","horizontal","transformOrigin","List","ListItem","button","ListItemText","primary","style","position","top","left","transform","width","backgroundColor","ViewModal","isVisible","sector","Modal","Container","maxWidth","direction","xs","marginBottom","marginTop","md","TextField","required","disabled","label","defaultValue","getCorrectDate","createdAt","updatedAt","margin","type","DeleteModal","isLoading","setIsLoading","dispatch","useDispatch","API","RemoveSector","_id","err","data","Actions","CircularProgress","RecentOrdersTable","sectors","selectedSectors","setSelectedCryptoOrders","selectedBulkActions","length","page","setPage","limit","setLimit","status","filters","setFilters","filteredSectors","filter","cryptoOrder","matches","applyFilters","paginatedSectors","slice","applyPagination","selectedSomeSectors","selectedAllSectors","useTheme","viewModalOpen","setViewModalOpen","deleteModalOpen","setDeleteModalOpen","selectedSector","setSelectedSector","navigate","Card","flex","CardHeader","action","FormControl","fullWidth","InputLabel","Select","onChange","e","target","prevFilters","autoWidth","statusOption","MenuItem","title","Divider","TableContainer","Table","TableHead","TableRow","TableCell","Checkbox","checked","indeterminate","event","align","TableBody","isCryptoOrderSelected","includes","hover","selected","cryptoOrderId","prevSelected","fontWeight","noWrap","Tooltip","arrow","background","lighter","size","fontSize","SectorActions","SelectSector","routes","WORK_PERMIT","EDIT_SECTOR","ROUTE","replace","TablePagination","count","onPageChange","newPage","onRowsPerPageChange","parseInt","rowsPerPage","rowsPerPageOptions","defaultProps","CategorySector","useSelector","Selectors","selectSectors","useEffect","FetchSectors","FetchedSectors","mb","mt","textAlign","pb","pt","pl","pr","CREATE_SECTOR","SectorsTable","sub_sector","RemoveSubSector","getSector","foundIndex","findIndex","String","sub_sectors","selectedSubSectors","filteredSubSectors","paginatedSubSectors","selectedSomeSubSectors","selectedAllSubSectors","selectedSubSector","setSelectedSubSector","SubSectorActions","SelectSubSector","EDIT_SUB_SECTOR","CategorySubSector","SubSectorSelector","selectSubSectors","SectorSelector","FetchSubSectors","FetchedSubSectors","CREATE_SUB_SECTOR","SubSectorsTable","getSubSector","activity","RemoveActivity","activities","selectedActivities","filteredActivities","paginatedActivities","selectedSomeActivities","selectedAllActivities","selectedActivity","setSelectedActivity","ActivityActions","SelectActivity","EDIT_ACTIVITY","Activity","selectActivities","FetchActivities","FetchedActivities","CREATE_ACTIVITY","ActivitiesTable","getActivity","activitys","investment_activity","ActivitySelector","RemoveInvestmentActivity","investment_activities","selectedInvestmentActivities","filteredInvestmentActivities","paginatedInvestmentActivities","selectedSomeInvestmentActivities","selectedAllInvestmentActivities","selectedInvestmentActivity","setSelectedInvestmentActivity","InvestmentActivityActions","SelectInvestmentActivity","EDIT_INVESTMENT_ACTIVITY","CategoryInvestmentActivity","InvestmentActivitySelector","selectInvestmentActivities","FetchInvestmentActivities","FetchedInvestmentActivities","CREATE_INVESTMENT_ACTIVITY","InvestmentActivitiesTable","ProjectCategory","categoryTab","selectCategoryTab","PageTitleWrapper","borderBottom","borderColor","newValue","BufferActions","UpdateCategoryTab","Tab","PageTitle","LabelWrapper","alpha","black","typography","pxToRem","general","borderRadius","secondary","success","warning","info","Label","rest","_interopRequireDefault","require","Object","defineProperty","exports","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","opacity","createSvgIcon","getCheckboxUtilityClass","checkboxClasses","CheckboxRoot","SwitchBase","shouldForwardProp","prop","rootShouldForwardProp","capitalize","text","disableRipple","active","hoverOpacity","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","_icon$props$fontSize","_indeterminateIcon$pr","checkedIcon","icon","iconProp","indeterminateIcon","indeterminateIconProp","inputProps","slots","composedClasses","test_date","Date","getFullYear","getMonth","getDate"],"mappings":"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","file":"static/js/43.a6e765b6.chunk.js","sourcesContent":["import { FC } from \"react\";\r\nimport { Typography, Button, Grid } from \"@mui/material\";\r\nimport AddTwoToneIcon from \"@mui/icons-material/AddTwoTone\";\r\nimport { useNavigate } from \"react-router\";\r\nimport routes from \"src/constants/routes\";\r\n\r\nconst PageHeader = () => {\r\n  const navigate = useNavigate();\r\n  const user = {\r\n    name: \"Catherine Pike\",\r\n    avatar: \"/static/images/avatars/1.jpg\",\r\n  };\r\n  return (\r\n    <Grid container justifyContent=\"space-between\" alignItems=\"center\">\r\n      <Grid item>\r\n        <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n          Project Categories\r\n        </Typography>\r\n        <Typography variant=\"subtitle2\">\r\n          {user.name}, edit project categories\r\n        </Typography>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default PageHeader;\r\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\n/**\n * @type {React.Context<{ idPrefix: string; value: string } | null>}\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Context = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== 'production') {\n  Context.displayName = 'TabContext';\n}\n\nfunction useUniquePrefix() {\n  const [id, setId] = React.useState(null);\n  React.useEffect(() => {\n    setId(`mui-p-${Math.round(Math.random() * 1e5)}`);\n  }, []);\n  return id;\n}\n\nexport default function TabContext(props) {\n  const {\n    children,\n    value\n  } = props;\n  const idPrefix = useUniquePrefix();\n  const context = React.useMemo(() => {\n    return {\n      idPrefix,\n      value\n    };\n  }, [idPrefix, value]);\n  return /*#__PURE__*/_jsx(Context.Provider, {\n    value: context,\n    children: children\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? TabContext.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * The value of the currently selected `Tab`.\n   */\n  value: PropTypes.string.isRequired\n} : void 0;\n/**\n * @returns {unknown}\n */\n\nexport function useTabContext() {\n  return React.useContext(Context);\n}\nexport function getPanelId(context, value) {\n  const {\n    idPrefix\n  } = context;\n\n  if (idPrefix === null) {\n    return null;\n  }\n\n  return `${context.idPrefix}-P-${value}`;\n}\nexport function getTabId(context, value) {\n  const {\n    idPrefix\n  } = context;\n\n  if (idPrefix === null) {\n    return null;\n  }\n\n  return `${context.idPrefix}-T-${value}`;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@mui/material/Tabs';\nimport { useTabContext, getTabId, getPanelId } from '../TabContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst TabList = /*#__PURE__*/React.forwardRef(function TabList(props, ref) {\n  const {\n    children: childrenProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const context = useTabContext();\n\n  if (context === null) {\n    throw new TypeError('No TabContext provided');\n  }\n\n  const children = React.Children.map(childrenProp, child => {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n\n    return /*#__PURE__*/React.cloneElement(child, {\n      // SOMEDAY: `Tabs` will set those themselves\n      'aria-controls': getPanelId(context, child.props.value),\n      id: getTabId(context, child.props.value)\n    });\n  });\n  return /*#__PURE__*/_jsx(Tabs, _extends({}, other, {\n    ref: ref,\n    value: context.value,\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TabList.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * A list of `<Tab />` elements.\n   */\n  children: PropTypes.node\n} : void 0;\nexport default TabList;","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getTabPanelUtilityClass(slot) {\n  return generateUtilityClass('MuiTabPanel', slot);\n}\nconst tabPanelClasses = generateUtilityClasses('MuiTabPanel', ['root']);\nexport default tabPanelClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled, useThemeProps } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport { getTabPanelUtilityClass } from './tabPanelClasses';\nimport { getPanelId, getTabId, useTabContext } from '../TabContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTabPanelUtilityClass, classes);\n};\n\nconst TabPanelRoot = styled('div', {\n  name: 'MuiTabPanel',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(3)\n}));\nconst TabPanel = /*#__PURE__*/React.forwardRef(function TabPanel(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTabPanel'\n  });\n\n  const {\n    children,\n    className,\n    value\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props);\n\n  const classes = useUtilityClasses(ownerState);\n  const context = useTabContext();\n\n  if (context === null) {\n    throw new TypeError('No TabContext provided');\n  }\n\n  const id = getPanelId(context, value);\n  const tabId = getTabId(context, value);\n  return /*#__PURE__*/_jsx(TabPanelRoot, _extends({\n    \"aria-labelledby\": tabId,\n    className: clsx(classes.root, className),\n    hidden: value !== context.value,\n    id: id,\n    ref: ref,\n    role: \"tabpanel\",\n    ownerState: ownerState\n  }, other, {\n    children: value === context.value && children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TabPanel.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The `value` of the corresponding `Tab`. Must use the index of the `Tab` when\n   * no `value` was passed to `Tab`.\n   */\n  value: PropTypes.string.isRequired\n} : void 0;\nexport default TabPanel;","import { useState, useRef } from 'react';\r\n\r\nimport {\r\n  Box,\r\n  Menu,\r\n  IconButton,\r\n  Button,\r\n  ListItemText,\r\n  ListItem,\r\n  List,\r\n  Typography\r\n} from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\n\r\nimport DeleteTwoToneIcon from '@mui/icons-material/DeleteTwoTone';\r\nimport MoreVertTwoToneIcon from '@mui/icons-material/MoreVertTwoTone';\r\n\r\nconst ButtonError = styled(Button)(\r\n  ({ theme }) => `\r\n     background: ${theme.colors.error.main};\r\n     color: ${theme.palette.error.contrastText};\r\n\r\n     &:hover {\r\n        background: ${theme.colors.error.dark};\r\n     }\r\n    `\r\n);\r\n\r\nfunction BulkActions() {\r\n  const [onMenuOpen, menuOpen] = useState<boolean>(false);\r\n  const moreRef = useRef<HTMLButtonElement | null>(null);\r\n\r\n  const openMenu = (): void => {\r\n    menuOpen(true);\r\n  };\r\n\r\n  const closeMenu = (): void => {\r\n    menuOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <Typography variant=\"h5\" color=\"text.secondary\">\r\n            Bulk actions:\r\n          </Typography>\r\n          <ButtonError\r\n            sx={{ ml: 1 }}\r\n            startIcon={<DeleteTwoToneIcon />}\r\n            variant=\"contained\"\r\n          >\r\n            Delete\r\n          </ButtonError>\r\n        </Box>\r\n        <IconButton\r\n          color=\"primary\"\r\n          onClick={openMenu}\r\n          ref={moreRef}\r\n          sx={{ ml: 2, p: 1 }}\r\n        >\r\n          <MoreVertTwoToneIcon />\r\n        </IconButton>\r\n      </Box>\r\n\r\n      <Menu\r\n        keepMounted\r\n        anchorEl={moreRef.current}\r\n        open={onMenuOpen}\r\n        onClose={closeMenu}\r\n        anchorOrigin={{\r\n          vertical: 'center',\r\n          horizontal: 'center'\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'center',\r\n          horizontal: 'center'\r\n        }}\r\n\r\n      >\r\n        <List sx={{ p: 1 }} component=\"nav\">\r\n          <ListItem button>\r\n            <ListItemText primary=\"Bulk delete selected\" />\r\n          </ListItem>\r\n          <ListItem button>\r\n            <ListItemText primary=\"Bulk edit selected\" />\r\n          </ListItem>\r\n        </List>\r\n      </Menu>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default BulkActions;\r\n","import React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport { TextField, Grid, Box, Container } from \"@mui/material/\"\r\nimport Modal from '@mui/material/Modal';\r\nimport { getCorrectDate } from 'src/utils/date'\r\n\r\nconst style = {\r\n  position: 'absolute' as 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: 720,\r\n  backgroundColor: 'background.paper',\r\n  padding: 5,\r\n};\r\n\r\ninterface ViewModalProps {\r\n  isVisible: boolean;\r\n  onClose: () => void;\r\n  sector: any;\r\n}\r\n\r\nconst ViewModal: React.FC<ViewModalProps> = ({ isVisible, onClose, sector }) => {\r\n  return (\r\n    <div>\r\n      <Modal\r\n        open={isVisible}\r\n        onClose={onClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box sx={style}>\r\n          <Container maxWidth=\"lg\">\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justifyContent=\"center\"\r\n              alignItems=\"stretch\"\r\n              spacing={3}\r\n            >\r\n              <Grid item xs={12}>\r\n              <Typography id=\"modal-modal-title\" variant=\"h2\" component=\"h2\" style={{ marginBottom: 15, marginTop: 15 }}>\r\n                  Sector Detail\r\n                </Typography>\r\n                <Grid container spacing={3} display=\"flex\" alignItems=\"flex-start\">\r\n                  <Grid item md={4}>\r\n                    <TextField\r\n                      required\r\n                      disabled\r\n                      label=\"Sector Name\"\r\n                      defaultValue={sector.name}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item md={4}>\r\n                    <TextField\r\n                      required\r\n                      disabled\r\n                      label=\"Created At\"\r\n                      defaultValue={getCorrectDate(sector.createdAt)}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item md={4}>\r\n                  <TextField\r\n                      required\r\n                      disabled\r\n                      label=\"Updated At\"\r\n                      defaultValue={getCorrectDate(sector.updatedAt)}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container spacing={3} style={{ marginTop: 15, display: \"flex\", justifyContent: \"space-around\", alignItems: \"center\" }}>\r\n                  <Grid item md={6} style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                    <Button sx={{ margin: 1 }} variant=\"contained\" color=\"secondary\" type=\"submit\" onClick={onClose}>\r\n                      Close\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Container>\r\n        </Box>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ViewModal","import React, { useState } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport { Grid, Box, CircularProgress } from \"@mui/material/\"\r\nimport Modal from '@mui/material/Modal';\r\nimport { API, Actions } from \"src/store/States/Investment/Category/Sector/\"\r\nimport { useDispatch } from \"react-redux\"\r\n\r\nconst style = {\r\n  position: 'absolute' as 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: 420,\r\n  backgroundColor: 'background.paper',\r\n  padding: 5,\r\n};\r\n\r\ninterface DeleteModalProps {\r\n  isVisible: boolean;\r\n  onClose: () => void;\r\n  sector: any;\r\n}\r\n\r\nconst DeleteModal: React.FC<DeleteModalProps> = ({ isVisible, onClose, sector }) => {\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const dispatch = useDispatch()\r\n  const yesHandler = () => {\r\n    setIsLoading(true)\r\n    API.RemoveSector(sector._id, (err, data) => {\r\n      if (err) throw err\r\n      setIsLoading(false)\r\n      if (data._id) {\r\n        dispatch(Actions.RemoveSector(data))\r\n        onClose()\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        open={isVisible}\r\n        onClose={onClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box sx={style}>\r\n          <Typography id=\"modal-modal-title\" variant=\"h4\" component=\"h2\" style={{ marginBottom: 15, marginTop: 5 }}>\r\n            Are you sure you want to delete {sector.name}\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justifyContent=\"space-around\"\r\n              alignItems=\"stretch\"\r\n              spacing={3}\r\n            >\r\n              <Grid item md={6} style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                <Button variant=\"contained\" sx={{ margin: 1 }} color=\"primary\" onClick={yesHandler} disabled={isLoading}>\r\n                {isLoading ? <CircularProgress /> : \"Yes\"}\r\n                </Button>\r\n              </Grid>\r\n              <Grid item md={6} style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                <Button variant=\"contained\" sx={{ margin: 1 }} color=\"secondary\" onClick={onClose} disabled={isLoading}>No</Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Typography>\r\n        </Box>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DeleteModal","import { FC, ChangeEvent, useState } from 'react';\r\nimport { format } from 'date-fns';\r\nimport numeral from 'numeral';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Tooltip,\r\n  Divider,\r\n  Box,\r\n  FormControl,\r\n  InputLabel,\r\n  Card,\r\n  Checkbox,\r\n  IconButton,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  TableContainer,\r\n  Select,\r\n  MenuItem,\r\n  Typography,\r\n  useTheme,\r\n  CardHeader\r\n} from '@mui/material';\r\n\r\nimport Label from 'src/components/Label';\r\nimport { CryptoOrder, CryptoOrderStatus } from 'src/models/crypto_order';\r\nimport { ISector } from 'src/models/InvestmentModels/Category/sector'\r\nimport EditTwoToneIcon from '@mui/icons-material/EditTwoTone';\r\nimport ViewTwoToneIcon from '@mui/icons-material/RemoveRedEyeSharp';\r\nimport DeleteTwoToneIcon from '@mui/icons-material/DeleteTwoTone';\r\nimport BulkActions from './BulkActions';\r\nimport ViewModal from './ViewModal'\r\nimport DeleteModal from './DeleteModal'\r\nimport { useDispatch } from \"react-redux\"\r\nimport { Actions as SectorActions } from \"src/store/States/Investment/Category/Sector/\"\r\nimport { useNavigate } from \"react-router\"\r\nimport routes from 'src/constants/routes'\r\n\r\ninterface RecentOrdersTableProps {\r\n  className?: string;\r\n  sectors: CryptoOrder[];\r\n}\r\n\r\ninterface Filters {\r\n  status?: CryptoOrderStatus;\r\n}\r\n\r\nconst getStatusLabel = (text: any): JSX.Element => {\r\n  const map = {\r\n    failed: {\r\n      text: 'Failed',\r\n      color: 'error'\r\n    },\r\n    completed: {\r\n      text: 'Completed',\r\n      color: 'success'\r\n    },\r\n    pending: {\r\n      text: 'Pending',\r\n      color: 'warning'\r\n    }\r\n  };\r\n\r\n  const { color }: any = map['completed'];\r\n\r\n  return <Label color={color}>{text}</Label>;\r\n};\r\n\r\nconst applyFilters = (\r\n  sectors: CryptoOrder[],\r\n  filters: Filters\r\n): CryptoOrder[] => {\r\n  return sectors.filter((cryptoOrder) => {\r\n    let matches = true;\r\n\r\n    if (filters.status && cryptoOrder.status !== filters.status) {\r\n      matches = false;\r\n    }\r\n\r\n    return matches;\r\n  });\r\n};\r\n\r\nconst applyPagination = (\r\n  sectors: CryptoOrder[],\r\n  page: number,\r\n  limit: number\r\n): CryptoOrder[] => {\r\n  return sectors.slice(page * limit, page * limit + limit);\r\n};\r\n\r\nconst RecentOrdersTable: FC<RecentOrdersTableProps> = ({ sectors }) => {\r\n  const [selectedSectors, setSelectedCryptoOrders] = useState<string[]>(\r\n    []\r\n  );\r\n  const selectedBulkActions = selectedSectors.length > 0;\r\n  const [page, setPage] = useState<number>(0);\r\n  const [limit, setLimit] = useState<number>(5);\r\n  const [filters, setFilters] = useState<Filters>({\r\n    status: null\r\n  });\r\n\r\n  const statusOptions = [\r\n    {\r\n      id: 'all',\r\n      name: 'All'\r\n    },\r\n    {\r\n      id: 'completed',\r\n      name: 'Completed'\r\n    },\r\n    {\r\n      id: 'pending',\r\n      name: 'Pending'\r\n    },\r\n    {\r\n      id: 'failed',\r\n      name: 'Failed'\r\n    }\r\n  ];\r\n\r\n  const handleStatusChange = (e: ChangeEvent<HTMLInputElement>): void => {\r\n    let value = null;\r\n\r\n    if (e.target.value !== 'all') {\r\n      value = e.target.value;\r\n    }\r\n\r\n    setFilters((prevFilters) => ({\r\n      ...prevFilters,\r\n      status: value\r\n    }));\r\n  };\r\n\r\n  const handleSelectAllSectors = (\r\n    event: ChangeEvent<HTMLInputElement>\r\n  ): void => {\r\n    setSelectedCryptoOrders(\r\n      event.target.checked\r\n        ? sectors.map((cryptoOrder) => cryptoOrder.id)\r\n        : []\r\n    );\r\n  };\r\n\r\n  const handleSelectOneCryptoOrder = (\r\n    event: ChangeEvent<HTMLInputElement>,\r\n    cryptoOrderId: string\r\n  ): void => {\r\n    if (!selectedSectors.includes(cryptoOrderId)) {\r\n      setSelectedCryptoOrders((prevSelected) => [\r\n        ...prevSelected,\r\n        cryptoOrderId\r\n      ]);\r\n    } else {\r\n      setSelectedCryptoOrders((prevSelected) =>\r\n        prevSelected.filter((id) => id !== cryptoOrderId)\r\n      );\r\n    }\r\n  };\r\n\r\n  const handlePageChange = (event: any, newPage: number): void => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleLimitChange = (event: ChangeEvent<HTMLInputElement>): void => {\r\n    setLimit(parseInt(event.target.value));\r\n  };\r\n\r\n  const filteredSectors = applyFilters(sectors, filters);\r\n  const paginatedSectors = applyPagination(\r\n    filteredSectors,\r\n    page,\r\n    limit\r\n  );\r\n  const selectedSomeSectors =\r\n    selectedSectors.length > 0 &&\r\n    selectedSectors.length < sectors.length;\r\n  const selectedAllSectors =\r\n    selectedSectors.length === sectors.length;\r\n  const theme = useTheme();\r\n\r\n  const [viewModalOpen, setViewModalOpen] = useState(false)\r\n  const [deleteModalOpen, setDeleteModalOpen] = useState(false)\r\n  const [selectedSector, setSelectedSector] = useState({})\r\n  const navigate = useNavigate()\r\n  const dispatch = useDispatch()\r\n  return (\r\n    <Card>\r\n      <ViewModal\r\n        isVisible={viewModalOpen}\r\n        onClose={() => setViewModalOpen(false)}\r\n        sector={selectedSector}\r\n      />\r\n      <DeleteModal\r\n        isVisible={deleteModalOpen}\r\n        onClose={() => setDeleteModalOpen(false)}\r\n        sector={selectedSector}\r\n      />\r\n      {selectedBulkActions && (\r\n        <Box flex={1} p={2}>\r\n          <BulkActions />\r\n        </Box>\r\n      )}\r\n      {!selectedBulkActions && (\r\n        <CardHeader\r\n          action={\r\n            <Box width={150}>\r\n              <FormControl fullWidth variant=\"outlined\">\r\n                <InputLabel>Status</InputLabel>\r\n                <Select\r\n                  value={filters.status || 'all'}\r\n                  onChange={handleStatusChange}\r\n                  label=\"Status\"\r\n                  autoWidth\r\n                >\r\n                  {statusOptions.map((statusOption) => (\r\n                    <MenuItem key={statusOption.id} value={statusOption.id}>\r\n                      {statusOption.name}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Box>\r\n          }\r\n          title=\"Recent Sectors\"\r\n        />\r\n      )}\r\n      <Divider />\r\n      <TableContainer>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell padding=\"checkbox\">\r\n                <Checkbox\r\n                  color=\"primary\"\r\n                  checked={selectedAllSectors}\r\n                  indeterminate={selectedSomeSectors}\r\n                  onChange={handleSelectAllSectors}\r\n                />\r\n              </TableCell>\r\n              <TableCell>Name</TableCell>\r\n              <TableCell align=\"right\">Actions</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {paginatedSectors.map((item) => {\r\n              const isCryptoOrderSelected = selectedSectors.includes(\r\n                item._id\r\n              );\r\n              const sector = item as unknown as ISector\r\n              return (\r\n                <TableRow\r\n                  hover\r\n                  key={sector._id}\r\n                  selected={isCryptoOrderSelected}\r\n                >\r\n                  <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                      color=\"primary\"\r\n                      checked={isCryptoOrderSelected}\r\n                      onChange={(event: ChangeEvent<HTMLInputElement>) =>\r\n                        handleSelectOneCryptoOrder(event, sector._id)\r\n                      }\r\n                      value={isCryptoOrderSelected}\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Typography\r\n                      variant=\"body1\"\r\n                      fontWeight=\"bold\"\r\n                      color=\"text.primary\"\r\n                      gutterBottom\r\n                      noWrap\r\n                    >\r\n                      {sector.name}\r\n                    </Typography>\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">\r\n                    <Tooltip title=\"View Profile\" arrow>\r\n                      <IconButton\r\n                        sx={{\r\n                          '&:hover': {\r\n                            background: theme.colors.primary.lighter\r\n                          },\r\n                          color: theme.palette.primary.main\r\n                        }}\r\n                        color=\"inherit\"\r\n                        size=\"small\"\r\n                        onClick={() => {\r\n                          setSelectedSector(sector)\r\n                          setViewModalOpen(true)\r\n                        }}\r\n                      >\r\n                        <ViewTwoToneIcon fontSize=\"small\" />\r\n                      </IconButton>\r\n                    </Tooltip>\r\n                    <Tooltip title=\"Edit Profile\" arrow>\r\n                      <IconButton\r\n                        sx={{\r\n                          '&:hover': {\r\n                            background: theme.colors.primary.lighter\r\n                          },\r\n                          color: theme.palette.primary.main\r\n                        }}\r\n                        color=\"inherit\"\r\n                        size=\"small\"\r\n                        onClick={() => {\r\n                          dispatch(SectorActions.SelectSector(sector))\r\n                          navigate(routes.WORK_PERMIT.EDIT_SECTOR.ROUTE, { replace: true })\r\n                        }}\r\n                      >\r\n                        <EditTwoToneIcon fontSize=\"small\" />\r\n                      </IconButton>\r\n                    </Tooltip>\r\n                    <Tooltip title=\"Delete Profile\" arrow>\r\n                      <IconButton\r\n                        sx={{\r\n                          '&:hover': { background: theme.colors.error.lighter },\r\n                          color: theme.palette.error.main\r\n                        }}\r\n                        color=\"inherit\"\r\n                        size=\"small\"\r\n                        onClick={() => {\r\n                          setSelectedSector(sector)\r\n                          setDeleteModalOpen(true)\r\n                        }}\r\n                      >\r\n                        <DeleteTwoToneIcon fontSize=\"small\" />\r\n                      </IconButton>\r\n                    </Tooltip>\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <Box p={2}>\r\n        <TablePagination\r\n          component=\"div\"\r\n          count={filteredSectors.length}\r\n          onPageChange={handlePageChange}\r\n          onRowsPerPageChange={handleLimitChange}\r\n          page={page}\r\n          rowsPerPage={limit}\r\n          rowsPerPageOptions={[5, 10, 25, 30]}\r\n        />\r\n      </Box>\r\n    </Card>\r\n  );\r\n};\r\n\r\nRecentOrdersTable.propTypes = {\r\n  sectors: PropTypes.array.isRequired\r\n};\r\n\r\nRecentOrdersTable.defaultProps = {\r\n  sectors: []\r\n};\r\n\r\nexport default RecentOrdersTable;\r\n","import React, { useEffect } from \"react\";\r\nimport Card from \"@mui/material/Card\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport {\r\n  TextField,\r\n  Grid,\r\n  MenuItem,\r\n  Box,\r\n  Container,\r\n  CircularProgress,\r\n  Tabs,\r\n  Tab,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  RadioGroup,\r\n  Radio,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n} from \"@mui/material/\";\r\nimport {\r\n  LegalStatusTypes,\r\n  FormOfOwnerShipTypes,\r\n  IBusinessProfileInput,\r\n} from \"src/models/InvestmentModels/business_profile\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport ViewIcon from \"@mui/icons-material/Visibility\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport { Selectors, API, Actions } from \"src/store/States/Investment/Category/Sector\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport SectorsTable from \"./SectorsTable\"\r\nimport routes from \"src/constants/routes\"\r\nimport { useNavigate } from \"react-router\"\r\n\r\nconst CategorySector: React.FC<any> = () => {\r\n  const rows = [\r\n    { name: \"Pre Implementation\" },\r\n    { name: \"Implementation\" },\r\n    { name: \"Operation\" },\r\n  ];\r\n\r\n  const dispatch = useDispatch()\r\n  const sectors = useSelector(Selectors.selectSectors)\r\n\r\n  const navigate = useNavigate()\r\n\r\n  useEffect(() => {\r\n    API.FetchSectors((err, data) => {\r\n      if (err) throw err\r\n      dispatch(Actions.FetchedSectors(data))\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <Grid container>\r\n        <Grid item md={6}>\r\n          <Typography\r\n            id=\"modal-modal-title\"\r\n            variant=\"h4\"\r\n            component=\"h2\"\r\n            sx={{ mb: 3, mt: 2 }}\r\n          >\r\n            Project Sector\r\n          </Typography>\r\n        </Grid>\r\n\r\n        <Grid item md={6} style={{ textAlign: \"right\" }}>\r\n          <Button\r\n            sx={{ margin: 1, pb: 1.1, pt: 1.1, pl: 3, pr: 3 }}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            type=\"submit\"\r\n            startIcon={<AddIcon />}\r\n            onClick={() => navigate(routes.WORK_PERMIT.CREATE_SECTOR.ROUTE, { replace: true })}\r\n          >\r\n            New Sector\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container spacing={3}>\r\n        <Grid item md={12}>\r\n          <SectorsTable sectors={sectors as any[]} />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CategorySector;\r\n","import { useState, useRef } from 'react';\r\n\r\nimport {\r\n  Box,\r\n  Menu,\r\n  IconButton,\r\n  Button,\r\n  ListItemText,\r\n  ListItem,\r\n  List,\r\n  Typography\r\n} from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\n\r\nimport DeleteTwoToneIcon from '@mui/icons-material/DeleteTwoTone';\r\nimport MoreVertTwoToneIcon from '@mui/icons-material/MoreVertTwoTone';\r\n\r\nconst ButtonError = styled(Button)(\r\n  ({ theme }) => `\r\n     background: ${theme.colors.error.main};\r\n     color: ${theme.palette.error.contrastText};\r\n\r\n     &:hover {\r\n        background: ${theme.colors.error.dark};\r\n     }\r\n    `\r\n);\r\n\r\nfunction BulkActions() {\r\n  const [onMenuOpen, menuOpen] = useState<boolean>(false);\r\n  const moreRef = useRef<HTMLButtonElement | null>(null);\r\n\r\n  const openMenu = (): void => {\r\n    menuOpen(true);\r\n  };\r\n\r\n  const closeMenu = (): void => {\r\n    menuOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <Typography variant=\"h5\" color=\"text.secondary\">\r\n            Bulk actions:\r\n          </Typography>\r\n          <ButtonError\r\n            sx={{ ml: 1 }}\r\n            startIcon={<DeleteTwoToneIcon />}\r\n            variant=\"contained\"\r\n          >\r\n            Delete\r\n          </ButtonError>\r\n        </Box>\r\n        <IconButton\r\n          color=\"primary\"\r\n          onClick={openMenu}\r\n          ref={moreRef}\r\n          sx={{ ml: 2, p: 1 }}\r\n        >\r\n          <MoreVertTwoToneIcon />\r\n        </IconButton>\r\n      </Box>\r\n\r\n      <Menu\r\n        keepMounted\r\n        anchorEl={moreRef.current}\r\n        open={onMenuOpen}\r\n        onClose={closeMenu}\r\n        anchorOrigin={{\r\n          vertical: 'center',\r\n          horizontal: 'center'\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'center',\r\n          horizontal: 'center'\r\n        }}\r\n\r\n      >\r\n        <List sx={{ p: 1 }} component=\"nav\">\r\n          <ListItem button>\r\n            <ListItemText primary=\"Bulk delete selected\" />\r\n          </ListItem>\r\n          <ListItem button>\r\n            <ListItemText primary=\"Bulk edit selected\" />\r\n          </ListItem>\r\n        </List>\r\n      </Menu>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default BulkActions;\r\n","import React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport { TextField, Grid, Box, Container } from \"@mui/material/\"\r\nimport Modal from '@mui/material/Modal';\r\nimport { getCorrectDate } from 'src/utils/date'\r\n\r\nconst style = {\r\n  position: 'absolute' as 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: 720,\r\n  backgroundColor: 'background.paper',\r\n  padding: 5,\r\n};\r\n\r\ninterface ViewModalProps {\r\n  isVisible: boolean;\r\n  onClose: () => void;\r\n  sub_sector: any;\r\n}\r\n\r\nconst ViewModal: React.FC<ViewModalProps> = ({ isVisible, onClose, sub_sector }) => {\r\n  return (\r\n    <div>\r\n      <Modal\r\n        open={isVisible}\r\n        onClose={onClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box sx={style}>\r\n          <Container maxWidth=\"lg\">\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justifyContent=\"center\"\r\n              alignItems=\"stretch\"\r\n              spacing={3}\r\n            >\r\n              <Grid item xs={12}>\r\n              <Typography id=\"modal-modal-title\" variant=\"h2\" component=\"h2\" style={{ marginBottom: 15, marginTop: 15 }}>\r\n                  Sector Detail\r\n                </Typography>\r\n                <Grid container spacing={3} display=\"flex\" alignItems=\"flex-start\">\r\n                  <Grid item md={4}>\r\n                    <TextField\r\n                      required\r\n                      disabled\r\n                      label=\"Sub Sector Name\"\r\n                      defaultValue={sub_sector.name}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item md={6}>\r\n                    <TextField\r\n                      required\r\n                      disabled\r\n                      label=\"Sector\"\r\n                      defaultValue={getCorrectDate(sub_sector.createdAt)}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container spacing={3} style={{ marginTop: 15, display: \"flex\", justifyContent: \"space-around\", alignItems: \"center\" }}>\r\n                  <Grid item md={6} style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                    <Button sx={{ margin: 1 }} variant=\"contained\" color=\"secondary\" type=\"submit\" onClick={onClose}>\r\n                      Close\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Container>\r\n        </Box>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ViewModal","import React, { useState } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport { Grid, Box, CircularProgress } from \"@mui/material/\"\r\nimport Modal from '@mui/material/Modal';\r\nimport { API, Actions } from \"src/store/States/Investment/Category/SubSector/\"\r\nimport { useDispatch } from \"react-redux\"\r\n\r\nconst style = {\r\n  position: 'absolute' as 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: 420,\r\n  backgroundColor: 'background.paper',\r\n  padding: 5,\r\n};\r\n\r\ninterface DeleteModalProps {\r\n  isVisible: boolean;\r\n  onClose: () => void;\r\n  sub_sector: any;\r\n}\r\n\r\nconst DeleteModal: React.FC<DeleteModalProps> = ({ isVisible, onClose, sub_sector }) => {\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const dispatch = useDispatch()\r\n  const yesHandler = () => {\r\n    setIsLoading(true)\r\n    API.RemoveSubSector(sub_sector._id, (err, data) => {\r\n      if (err) throw err\r\n      setIsLoading(false)\r\n      if (data._id) {\r\n        dispatch(Actions.RemoveSubSector(data))\r\n        onClose()\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        open={isVisible}\r\n        onClose={onClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box sx={style}>\r\n          <Typography id=\"modal-modal-title\" variant=\"h4\" component=\"h2\" style={{ marginBottom: 15, marginTop: 5 }}>\r\n            Are you sure you want to delete {sub_sector.name}\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justifyContent=\"space-around\"\r\n              alignItems=\"stretch\"\r\n              spacing={3}\r\n            >\r\n              <Grid item md={6} style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                <Button variant=\"contained\" sx={{ margin: 1 }} color=\"primary\" onClick={yesHandler} disabled={isLoading}>\r\n                {isLoading ? <CircularProgress /> : \"Yes\"}\r\n                </Button>\r\n              </Grid>\r\n              <Grid item md={6} style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                <Button variant=\"contained\" sx={{ margin: 1 }} color=\"secondary\" onClick={onClose} disabled={isLoading}>No</Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Typography>\r\n        </Box>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DeleteModal","import { ISector } from \"src/models/InvestmentModels/Category/sector\"\r\n\r\nexport const getSector = (_id: string, sectors: ISector[]): ISector => {\r\n  const foundIndex = sectors.findIndex(sector => String(sector._id) === String(_id))\r\n  return foundIndex >= 0? sectors[foundIndex] : {} as unknown as ISector\r\n}","import { FC, ChangeEvent, useState } from 'react';\r\nimport { format } from 'date-fns';\r\nimport numeral from 'numeral';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Tooltip,\r\n  Divider,\r\n  Box,\r\n  FormControl,\r\n  InputLabel,\r\n  Card,\r\n  Checkbox,\r\n  IconButton,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  TableContainer,\r\n  Select,\r\n  MenuItem,\r\n  Typography,\r\n  useTheme,\r\n  CardHeader\r\n} from '@mui/material';\r\n\r\nimport Label from 'src/components/Label';\r\nimport { CryptoOrder, CryptoOrderStatus } from 'src/models/crypto_order';\r\nimport { ISubSector } from 'src/models/InvestmentModels/Category/sub_sector'\r\nimport EditTwoToneIcon from '@mui/icons-material/EditTwoTone';\r\nimport ViewTwoToneIcon from '@mui/icons-material/RemoveRedEyeSharp';\r\nimport DeleteTwoToneIcon from '@mui/icons-material/DeleteTwoTone';\r\nimport BulkActions from './BulkActions';\r\nimport ViewModal from './ViewModal'\r\nimport DeleteModal from './DeleteModal'\r\nimport { useDispatch } from \"react-redux\"\r\nimport { Actions as SubSectorActions } from \"src/store/States/Investment/Category/SubSector/\"\r\nimport { useNavigate } from \"react-router\"\r\nimport routes from 'src/constants/routes'\r\nimport { getSector } from \"src/store/States/Investment/Category/Sector/helper\"\r\n\r\ninterface RecentOrdersTableProps {\r\n  className?: string;\r\n  sub_sectors: CryptoOrder[];\r\n  sectors: any[]\r\n}\r\n\r\ninterface Filters {\r\n  status?: CryptoOrderStatus;\r\n}\r\n\r\nconst getStatusLabel = (text: any): JSX.Element => {\r\n  const map = {\r\n    failed: {\r\n      text: 'Failed',\r\n      color: 'error'\r\n    },\r\n    completed: {\r\n      text: 'Completed',\r\n      color: 'success'\r\n    },\r\n    pending: {\r\n      text: 'Pending',\r\n      color: 'warning'\r\n    }\r\n  };\r\n\r\n  const { color }: any = map['completed'];\r\n\r\n  return <Label color={color}>{text}</Label>;\r\n};\r\n\r\nconst applyFilters = (\r\n  sub_sectors: CryptoOrder[],\r\n  filters: Filters\r\n): CryptoOrder[] => {\r\n  return sub_sectors.filter((cryptoOrder) => {\r\n    let matches = true;\r\n\r\n    if (filters.status && cryptoOrder.status !== filters.status) {\r\n      matches = false;\r\n    }\r\n\r\n    return matches;\r\n  });\r\n};\r\n\r\nconst applyPagination = (\r\n  sub_sectors: CryptoOrder[],\r\n  page: number,\r\n  limit: number\r\n): CryptoOrder[] => {\r\n  return sub_sectors.slice(page * limit, page * limit + limit);\r\n};\r\n\r\nconst RecentOrdersTable: FC<RecentOrdersTableProps> = ({ sub_sectors, sectors }) => {\r\n  const [selectedSubSectors, setSelectedCryptoOrders] = useState<string[]>(\r\n    []\r\n  );\r\n  const selectedBulkActions = selectedSubSectors.length > 0;\r\n  const [page, setPage] = useState<number>(0);\r\n  const [limit, setLimit] = useState<number>(5);\r\n  const [filters, setFilters] = useState<Filters>({\r\n    status: null\r\n  });\r\n\r\n  const statusOptions = [\r\n    {\r\n      id: 'all',\r\n      name: 'All'\r\n    },\r\n    {\r\n      id: 'completed',\r\n      name: 'Completed'\r\n    },\r\n    {\r\n      id: 'pending',\r\n      name: 'Pending'\r\n    },\r\n    {\r\n      id: 'failed',\r\n      name: 'Failed'\r\n    }\r\n  ];\r\n\r\n  const handleStatusChange = (e: ChangeEvent<HTMLInputElement>): void => {\r\n    let value = null;\r\n\r\n    if (e.target.value !== 'all') {\r\n      value = e.target.value;\r\n    }\r\n\r\n    setFilters((prevFilters) => ({\r\n      ...prevFilters,\r\n      status: value\r\n    }));\r\n  };\r\n\r\n  const handleSelectAllSubSectors = (\r\n    event: ChangeEvent<HTMLInputElement>\r\n  ): void => {\r\n    setSelectedCryptoOrders(\r\n      event.target.checked\r\n        ? sub_sectors.map((cryptoOrder) => cryptoOrder.id)\r\n        : []\r\n    );\r\n  };\r\n\r\n  const handleSelectOneCryptoOrder = (\r\n    event: ChangeEvent<HTMLInputElement>,\r\n    cryptoOrderId: string\r\n  ): void => {\r\n    if (!selectedSubSectors.includes(cryptoOrderId)) {\r\n      setSelectedCryptoOrders((prevSelected) => [\r\n        ...prevSelected,\r\n        cryptoOrderId\r\n      ]);\r\n    } else {\r\n      setSelectedCryptoOrders((prevSelected) =>\r\n        prevSelected.filter((id) => id !== cryptoOrderId)\r\n      );\r\n    }\r\n  };\r\n\r\n  const handlePageChange = (event: any, newPage: number): void => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleLimitChange = (event: ChangeEvent<HTMLInputElement>): void => {\r\n    setLimit(parseInt(event.target.value));\r\n  };\r\n\r\n  const filteredSubSectors = applyFilters(sub_sectors, filters);\r\n  const paginatedSubSectors = applyPagination(\r\n    filteredSubSectors,\r\n    page,\r\n    limit\r\n  );\r\n  const selectedSomeSubSectors =\r\n    selectedSubSectors.length > 0 &&\r\n    selectedSubSectors.length < sub_sectors.length;\r\n  const selectedAllSubSectors =\r\n    selectedSubSectors.length === sub_sectors.length;\r\n  const theme = useTheme();\r\n\r\n  const [viewModalOpen, setViewModalOpen] = useState(false)\r\n  const [deleteModalOpen, setDeleteModalOpen] = useState(false)\r\n  const [selectedSubSector, setSelectedSubSector] = useState({})\r\n  const navigate = useNavigate()\r\n  const dispatch = useDispatch()\r\n  return (\r\n    <Card>\r\n      <ViewModal\r\n        isVisible={viewModalOpen}\r\n        onClose={() => setViewModalOpen(false)}\r\n        sub_sector={selectedSubSector}\r\n      />\r\n      <DeleteModal\r\n        isVisible={deleteModalOpen}\r\n        onClose={() => setDeleteModalOpen(false)}\r\n        sub_sector={selectedSubSector}\r\n      />\r\n      {selectedBulkActions && (\r\n        <Box flex={1} p={2}>\r\n          <BulkActions />\r\n        </Box>\r\n      )}\r\n      {!selectedBulkActions && (\r\n        <CardHeader\r\n          action={\r\n            <Box width={150}>\r\n              <FormControl fullWidth variant=\"outlined\">\r\n                <InputLabel>Status</InputLabel>\r\n                <Select\r\n                  value={filters.status || 'all'}\r\n                  onChange={handleStatusChange}\r\n                  label=\"Status\"\r\n                  autoWidth\r\n                >\r\n                  {statusOptions.map((statusOption) => (\r\n                    <MenuItem key={statusOption.id} value={statusOption.id}>\r\n                      {statusOption.name}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Box>\r\n          }\r\n          title=\"Recent SubSectors\"\r\n        />\r\n      )}\r\n      <Divider />\r\n      <TableContainer>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell padding=\"checkbox\">\r\n                <Checkbox\r\n                  color=\"primary\"\r\n                  checked={selectedAllSubSectors}\r\n                  indeterminate={selectedSomeSubSectors}\r\n                  onChange={handleSelectAllSubSectors}\r\n                />\r\n              </TableCell>\r\n              <TableCell>Name</TableCell>\r\n              <TableCell>Sector</TableCell>\r\n              <TableCell align=\"right\">Actions</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {paginatedSubSectors.map((item) => {\r\n              const isCryptoOrderSelected = selectedSubSectors.includes(\r\n                item._id\r\n              );\r\n              const sub_sector = item as unknown as ISubSector\r\n              return (\r\n                <TableRow\r\n                  hover\r\n                  key={sub_sector._id}\r\n                  selected={isCryptoOrderSelected}\r\n                >\r\n                  <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                      color=\"primary\"\r\n                      checked={isCryptoOrderSelected}\r\n                      onChange={(event: ChangeEvent<HTMLInputElement>) =>\r\n                        handleSelectOneCryptoOrder(event, sub_sector._id)\r\n                      }\r\n                      value={isCryptoOrderSelected}\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Typography\r\n                      variant=\"body1\"\r\n                      fontWeight=\"bold\"\r\n                      color=\"text.primary\"\r\n                      gutterBottom\r\n                      noWrap\r\n                    >\r\n                      {sub_sector.name}\r\n                    </Typography>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Typography\r\n                      variant=\"body1\"\r\n                      fontWeight=\"bold\"\r\n                      color=\"text.primary\"\r\n                      gutterBottom\r\n                      noWrap\r\n                    >\r\n                      {getSector(sub_sector.sector, sectors).name}\r\n                    </Typography>\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">\r\n                    <Tooltip title=\"View Profile\" arrow>\r\n                      <IconButton\r\n                        sx={{\r\n                          '&:hover': {\r\n                            background: theme.colors.primary.lighter\r\n                          },\r\n                          color: theme.palette.primary.main\r\n                        }}\r\n                        color=\"inherit\"\r\n                        size=\"small\"\r\n                        onClick={() => {\r\n                          setSelectedSubSector(sub_sector)\r\n                          setViewModalOpen(true)\r\n                        }}\r\n                      >\r\n                        <ViewTwoToneIcon fontSize=\"small\" />\r\n                      </IconButton>\r\n                    </Tooltip>\r\n                    <Tooltip title=\"Edit Profile\" arrow>\r\n                      <IconButton\r\n                        sx={{\r\n                          '&:hover': {\r\n                            background: theme.colors.primary.lighter\r\n                          },\r\n                          color: theme.palette.primary.main\r\n                        }}\r\n                        color=\"inherit\"\r\n                        size=\"small\"\r\n                        onClick={() => {\r\n                          dispatch(SubSectorActions.SelectSubSector(sub_sector))\r\n                          navigate(routes.WORK_PERMIT.EDIT_SUB_SECTOR.ROUTE, { replace: true })\r\n                        }}\r\n                      >\r\n                        <EditTwoToneIcon fontSize=\"small\" />\r\n                      </IconButton>\r\n                    </Tooltip>\r\n                    <Tooltip title=\"Delete Profile\" arrow>\r\n                      <IconButton\r\n                        sx={{\r\n                          '&:hover': { background: theme.colors.error.lighter },\r\n                          color: theme.palette.error.main\r\n                        }}\r\n                        color=\"inherit\"\r\n                        size=\"small\"\r\n                        onClick={() => {\r\n                          setSelectedSubSector(sub_sector)\r\n                          setDeleteModalOpen(true)\r\n                        }}\r\n                      >\r\n                        <DeleteTwoToneIcon fontSize=\"small\" />\r\n                      </IconButton>\r\n                    </Tooltip>\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <Box p={2}>\r\n        <TablePagination\r\n          component=\"div\"\r\n          count={filteredSubSectors.length}\r\n          onPageChange={handlePageChange}\r\n          onRowsPerPageChange={handleLimitChange}\r\n          page={page}\r\n          rowsPerPage={limit}\r\n          rowsPerPageOptions={[5, 10, 25, 30]}\r\n        />\r\n      </Box>\r\n    </Card>\r\n  );\r\n};\r\n\r\nRecentOrdersTable.propTypes = {\r\n  sub_sectors: PropTypes.array.isRequired\r\n};\r\n\r\nRecentOrdersTable.defaultProps = {\r\n  sub_sectors: []\r\n};\r\n\r\nexport default RecentOrdersTable;\r\n","import React, { useEffect } from \"react\";\r\nimport Card from \"@mui/material/Card\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport {\r\n  TextField,\r\n  Grid,\r\n  MenuItem,\r\n  Box,\r\n  Container,\r\n  CircularProgress,\r\n  Tabs,\r\n  Tab,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  RadioGroup,\r\n  Radio,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n} from \"@mui/material/\";\r\nimport {\r\n  LegalStatusTypes,\r\n  FormOfOwnerShipTypes,\r\n  IBusinessProfileInput,\r\n} from \"src/models/InvestmentModels/business_profile\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport ViewIcon from \"@mui/icons-material/Visibility\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport { Selectors as SubSectorSelector, API, Actions } from \"src/store/States/Investment/Category/SubSector\"\r\nimport { Selectors as SectorSelector } from \"src/store/States/Investment/Category/Sector\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport SubSectorsTable from \"./SubSectorsTable\"\r\nimport routes from \"src/constants/routes\"\r\nimport { useNavigate } from \"react-router\"\r\n\r\nconst CategorySubSector: React.FC<any> = () => {\r\n  const rows = [\r\n    { name: \"Pre Implementation\" },\r\n    { name: \"Implementation\" },\r\n    { name: \"Operation\" },\r\n  ];\r\n\r\n  const dispatch = useDispatch()\r\n  const sub_sectors = useSelector(SubSectorSelector.selectSubSectors)\r\n  const sectors = useSelector(SectorSelector.selectSectors)\r\n\r\n  const navigate = useNavigate()\r\n\r\n  useEffect(() => {\r\n    API.FetchSubSectors((err, data) => {\r\n      if (err) throw err\r\n      dispatch(Actions.FetchedSubSectors(data))\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <Grid container>\r\n        <Grid item md={6}>\r\n          <Typography\r\n            id=\"modal-modal-title\"\r\n            variant=\"h4\"\r\n            component=\"h2\"\r\n            sx={{ mb: 3, mt: 2 }}\r\n          >\r\n            Project Sub Sector\r\n          </Typography>\r\n        </Grid>\r\n\r\n        <Grid item md={6} style={{ textAlign: \"right\" }}>\r\n          <Button\r\n            sx={{ margin: 1, pb: 1.1, pt: 1.1, pl: 3, pr: 3 }}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            type=\"submit\"\r\n            startIcon={<AddIcon />}\r\n            onClick={() => navigate(routes.WORK_PERMIT.CREATE_SUB_SECTOR.ROUTE, { replace: true })}\r\n          >\r\n            New Sub Sector\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container spacing={3}>\r\n        <Grid item md={12}>\r\n          <SubSectorsTable\r\n            sub_sectors={sub_sectors as any[]}\r\n            sectors={sectors as any[]}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CategorySubSector;\r\n","import { useState, useRef } from 'react';\r\n\r\nimport {\r\n  Box,\r\n  Menu,\r\n  IconButton,\r\n  Button,\r\n  ListItemText,\r\n  ListItem,\r\n  List,\r\n  Typography\r\n} from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\n\r\nimport DeleteTwoToneIcon from '@mui/icons-material/DeleteTwoTone';\r\nimport MoreVertTwoToneIcon from '@mui/icons-material/MoreVertTwoTone';\r\n\r\nconst ButtonError = styled(Button)(\r\n  ({ theme }) => `\r\n     background: ${theme.colors.error.main};\r\n     color: ${theme.palette.error.contrastText};\r\n\r\n     &:hover {\r\n        background: ${theme.colors.error.dark};\r\n     }\r\n    `\r\n);\r\n\r\nfunction BulkActions() {\r\n  const [onMenuOpen, menuOpen] = useState<boolean>(false);\r\n  const moreRef = useRef<HTMLButtonElement | null>(null);\r\n\r\n  const openMenu = (): void => {\r\n    menuOpen(true);\r\n  };\r\n\r\n  const closeMenu = (): void => {\r\n    menuOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <Typography variant=\"h5\" color=\"text.secondary\">\r\n            Bulk actions:\r\n          </Typography>\r\n          <ButtonError\r\n            sx={{ ml: 1 }}\r\n            startIcon={<DeleteTwoToneIcon />}\r\n            variant=\"contained\"\r\n          >\r\n            Delete\r\n          </ButtonError>\r\n        </Box>\r\n        <IconButton\r\n          color=\"primary\"\r\n          onClick={openMenu}\r\n          ref={moreRef}\r\n          sx={{ ml: 2, p: 1 }}\r\n        >\r\n          <MoreVertTwoToneIcon />\r\n        </IconButton>\r\n      </Box>\r\n\r\n      <Menu\r\n        keepMounted\r\n        anchorEl={moreRef.current}\r\n        open={onMenuOpen}\r\n        onClose={closeMenu}\r\n        anchorOrigin={{\r\n          vertical: 'center',\r\n          horizontal: 'center'\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'center',\r\n          horizontal: 'center'\r\n        }}\r\n\r\n      >\r\n        <List sx={{ p: 1 }} component=\"nav\">\r\n          <ListItem button>\r\n            <ListItemText primary=\"Bulk delete selected\" />\r\n          </ListItem>\r\n          <ListItem button>\r\n            <ListItemText primary=\"Bulk edit selected\" />\r\n          </ListItem>\r\n        </List>\r\n      </Menu>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default BulkActions;\r\n","import { ISubSector } from \"src/models/InvestmentModels/Category/sub_sector\"\r\n\r\nexport const getSubSector = (_id: string, sub_sectors: ISubSector[]): ISubSector => {\r\n  const foundIndex = sub_sectors.findIndex(sub_sector => String(sub_sector._id) === String(_id))\r\n  return foundIndex >= 0? sub_sectors[foundIndex] : {} as unknown as ISubSector\r\n}","import React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport { TextField, Grid, Box, Container } from \"@mui/material/\"\r\nimport Modal from '@mui/material/Modal';\r\nimport { Selectors as SubSectorSelector } from \"src/store/States/Investment/Category/SubSector\"\r\nimport { getSubSector } from \"src/store/States/Investment/Category/SubSector/helper\"\r\nimport { useSelector } from \"react-redux\"\r\n\r\nconst style = {\r\n  position: 'absolute' as 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: 720,\r\n  backgroundColor: 'background.paper',\r\n  padding: 5,\r\n};\r\n\r\ninterface ViewModalProps {\r\n  isVisible: boolean;\r\n  onClose: () => void;\r\n  activity: any;\r\n}\r\n\r\nconst ViewModal: React.FC<ViewModalProps> = ({ isVisible, onClose, activity }) => {\r\n  const sub_sectors = useSelector(SubSectorSelector.selectSubSectors)\r\n  return (\r\n    <div>\r\n      <Modal\r\n        open={isVisible}\r\n        onClose={onClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box sx={style}>\r\n          <Container maxWidth=\"lg\">\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justifyContent=\"center\"\r\n              alignItems=\"stretch\"\r\n              spacing={3}\r\n            >\r\n              <Grid item xs={12}>\r\n              <Typography id=\"modal-modal-title\" variant=\"h2\" component=\"h2\" style={{ marginBottom: 15, marginTop: 15 }}>\r\n                  Activity Detail\r\n                </Typography>\r\n                <Grid container spacing={3} display=\"flex\" alignItems=\"flex-start\">\r\n                  <Grid item md={4}>\r\n                    <TextField\r\n                      required\r\n                      disabled\r\n                      label=\"Activity Name\"\r\n                      defaultValue={activity.name}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item md={4}>\r\n                    <TextField\r\n                      required\r\n                      disabled\r\n                      label=\"Sub Sector\"\r\n                      defaultValue={getSubSector(activity.sub_sector, sub_sectors).name}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container spacing={3} style={{ marginTop: 15, display: \"flex\", justifyContent: \"space-around\", alignItems: \"center\" }}>\r\n                  <Grid item md={6} style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                    <Button sx={{ margin: 1 }} variant=\"contained\" color=\"secondary\" type=\"submit\" onClick={onClose}>\r\n                      Close\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Container>\r\n        </Box>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ViewModal","import React, { useState } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport { Grid, Box, CircularProgress } from \"@mui/material/\"\r\nimport Modal from '@mui/material/Modal';\r\nimport { API, Actions } from \"src/store/States/Investment/Category/Activity/\"\r\nimport { useDispatch } from \"react-redux\"\r\n\r\nconst style = {\r\n  position: 'absolute' as 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: 420,\r\n  backgroundColor: 'background.paper',\r\n  padding: 5,\r\n};\r\n\r\ninterface DeleteModalProps {\r\n  isVisible: boolean;\r\n  onClose: () => void;\r\n  activity: any;\r\n}\r\n\r\nconst DeleteModal: React.FC<DeleteModalProps> = ({ isVisible, onClose, activity }) => {\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const dispatch = useDispatch()\r\n  const yesHandler = () => {\r\n    setIsLoading(true)\r\n    API.RemoveActivity(activity._id, (err, data) => {\r\n      if (err) throw err\r\n      setIsLoading(false)\r\n      if (data._id) {\r\n        dispatch(Actions.RemoveActivity(data))\r\n        onClose()\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        open={isVisible}\r\n        onClose={onClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box sx={style}>\r\n          <Typography id=\"modal-modal-title\" variant=\"h4\" component=\"h2\" style={{ marginBottom: 15, marginTop: 5 }}>\r\n            Are you sure you want to delete {activity.name}\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justifyContent=\"space-around\"\r\n              alignItems=\"stretch\"\r\n              spacing={3}\r\n            >\r\n              <Grid item md={6} style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                <Button variant=\"contained\" sx={{ margin: 1 }} color=\"primary\" onClick={yesHandler} disabled={isLoading}>\r\n                {isLoading ? <CircularProgress /> : \"Yes\"}\r\n                </Button>\r\n              </Grid>\r\n              <Grid item md={6} style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                <Button variant=\"contained\" sx={{ margin: 1 }} color=\"secondary\" onClick={onClose} disabled={isLoading}>No</Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Typography>\r\n        </Box>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DeleteModal","import { FC, ChangeEvent, useState } from \"react\";\r\nimport { format } from \"date-fns\";\r\nimport numeral from \"numeral\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Tooltip,\r\n  Divider,\r\n  Box,\r\n  FormControl,\r\n  InputLabel,\r\n  Card,\r\n  Checkbox,\r\n  IconButton,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  TableContainer,\r\n  Select,\r\n  MenuItem,\r\n  Typography,\r\n  useTheme,\r\n  CardHeader,\r\n} from \"@mui/material\";\r\n\r\nimport Label from \"src/components/Label\";\r\nimport { CryptoOrder, CryptoOrderStatus } from \"src/models/crypto_order\";\r\nimport { IActivity } from \"src/models/InvestmentModels/Category/activity\";\r\nimport EditTwoToneIcon from \"@mui/icons-material/EditTwoTone\";\r\nimport ViewTwoToneIcon from \"@mui/icons-material/RemoveRedEyeSharp\";\r\nimport DeleteTwoToneIcon from \"@mui/icons-material/DeleteTwoTone\";\r\nimport BulkActions from \"./BulkActions\";\r\nimport ViewModal from \"./ViewModal\";\r\nimport DeleteModal from \"./DeleteModal\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Actions as ActivityActions } from \"src/store/States/Investment/Category/Activity/\";\r\nimport { getSubSector } from \"src/store/States/Investment/Category/SubSector/helper\"\r\nimport { useNavigate } from \"react-router\";\r\nimport routes from \"src/constants/routes\";\r\n\r\ninterface RecentOrdersTableProps {\r\n  className?: string;\r\n  activities: CryptoOrder[];\r\n  sub_sectors: any[];\r\n}\r\n\r\ninterface Filters {\r\n  status?: CryptoOrderStatus;\r\n}\r\n\r\nconst getStatusLabel = (text: any): JSX.Element => {\r\n  const map = {\r\n    failed: {\r\n      text: \"Failed\",\r\n      color: \"error\",\r\n    },\r\n    completed: {\r\n      text: \"Completed\",\r\n      color: \"success\",\r\n    },\r\n    pending: {\r\n      text: \"Pending\",\r\n      color: \"warning\",\r\n    },\r\n  };\r\n\r\n  const { color }: any = map[\"completed\"];\r\n\r\n  return <Label color={color}>{text}</Label>;\r\n};\r\n\r\nconst applyFilters = (\r\n  activities: CryptoOrder[],\r\n  filters: Filters\r\n): CryptoOrder[] => {\r\n  return activities.filter((cryptoOrder) => {\r\n    let matches = true;\r\n\r\n    if (filters.status && cryptoOrder.status !== filters.status) {\r\n      matches = false;\r\n    }\r\n\r\n    return matches;\r\n  });\r\n};\r\n\r\nconst applyPagination = (\r\n  activities: CryptoOrder[],\r\n  page: number,\r\n  limit: number\r\n): CryptoOrder[] => {\r\n  return activities.slice(page * limit, page * limit + limit);\r\n};\r\n\r\nconst RecentOrdersTable: FC<RecentOrdersTableProps> = ({ activities, sub_sectors }) => {\r\n  const [selectedActivities, setSelectedCryptoOrders] = useState<string[]>([]);\r\n  const selectedBulkActions = selectedActivities.length > 0;\r\n  const [page, setPage] = useState<number>(0);\r\n  const [limit, setLimit] = useState<number>(5);\r\n  const [filters, setFilters] = useState<Filters>({\r\n    status: null,\r\n  });\r\n\r\n  const statusOptions = [\r\n    {\r\n      id: \"all\",\r\n      name: \"All\",\r\n    },\r\n    {\r\n      id: \"completed\",\r\n      name: \"Completed\",\r\n    },\r\n    {\r\n      id: \"pending\",\r\n      name: \"Pending\",\r\n    },\r\n    {\r\n      id: \"failed\",\r\n      name: \"Failed\",\r\n    },\r\n  ];\r\n\r\n  const handleStatusChange = (e: ChangeEvent<HTMLInputElement>): void => {\r\n    let value = null;\r\n\r\n    if (e.target.value !== \"all\") {\r\n      value = e.target.value;\r\n    }\r\n\r\n    setFilters((prevFilters) => ({\r\n      ...prevFilters,\r\n      status: value,\r\n    }));\r\n  };\r\n\r\n  const handleSelectAllActivities = (\r\n    event: ChangeEvent<HTMLInputElement>\r\n  ): void => {\r\n    setSelectedCryptoOrders(\r\n      event.target.checked ? activities.map((cryptoOrder) => cryptoOrder.id) : []\r\n    );\r\n  };\r\n\r\n  const handleSelectOneCryptoOrder = (\r\n    event: ChangeEvent<HTMLInputElement>,\r\n    cryptoOrderId: string\r\n  ): void => {\r\n    if (!selectedActivities.includes(cryptoOrderId)) {\r\n      setSelectedCryptoOrders((prevSelected) => [\r\n        ...prevSelected,\r\n        cryptoOrderId,\r\n      ]);\r\n    } else {\r\n      setSelectedCryptoOrders((prevSelected) =>\r\n        prevSelected.filter((id) => id !== cryptoOrderId)\r\n      );\r\n    }\r\n  };\r\n\r\n  const handlePageChange = (event: any, newPage: number): void => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleLimitChange = (event: ChangeEvent<HTMLInputElement>): void => {\r\n    setLimit(parseInt(event.target.value));\r\n  };\r\n\r\n  const filteredActivities = applyFilters(activities, filters);\r\n  const paginatedActivities = applyPagination(filteredActivities, page, limit);\r\n  const selectedSomeActivities =\r\n    selectedActivities.length > 0 && selectedActivities.length < activities.length;\r\n  const selectedAllActivities = selectedActivities.length === activities.length;\r\n  const theme = useTheme();\r\n\r\n  const [viewModalOpen, setViewModalOpen] = useState(false);\r\n  const [deleteModalOpen, setDeleteModalOpen] = useState(false);\r\n  const [selectedActivity, setSelectedActivity] = useState({});\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <Card>\r\n      <ViewModal\r\n        isVisible={viewModalOpen}\r\n        onClose={() => setViewModalOpen(false)}\r\n        activity={selectedActivity}\r\n      />\r\n      <DeleteModal\r\n        isVisible={deleteModalOpen}\r\n        onClose={() => setDeleteModalOpen(false)}\r\n        activity={selectedActivity}\r\n      />\r\n      {selectedBulkActions && (\r\n        <Box flex={1} p={2}>\r\n          <BulkActions />\r\n        </Box>\r\n      )}\r\n      {!selectedBulkActions && (\r\n        <CardHeader\r\n          action={\r\n            <Box width={150}>\r\n              <FormControl fullWidth variant=\"outlined\">\r\n                <InputLabel>Status</InputLabel>\r\n                <Select\r\n                  value={filters.status || \"all\"}\r\n                  onChange={handleStatusChange}\r\n                  label=\"Status\"\r\n                  autoWidth\r\n                >\r\n                  {statusOptions.map((statusOption) => (\r\n                    <MenuItem key={statusOption.id} value={statusOption.id}>\r\n                      {statusOption.name}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Box>\r\n          }\r\n          title=\"Recent Activities\"\r\n        />\r\n      )}\r\n      <Divider />\r\n      <TableContainer>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell padding=\"checkbox\">\r\n                <Checkbox\r\n                  color=\"primary\"\r\n                  checked={selectedAllActivities}\r\n                  indeterminate={selectedSomeActivities}\r\n                  onChange={handleSelectAllActivities}\r\n                />\r\n              </TableCell>\r\n              <TableCell>Name</TableCell>\r\n              <TableCell>SUB-SECTOR</TableCell>\r\n              <TableCell align=\"right\">Actions</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {paginatedActivities.map((item) => {\r\n              const isCryptoOrderSelected = selectedActivities.includes(item._id);\r\n              const activity = item as unknown as IActivity;\r\n              return (\r\n                <TableRow\r\n                  hover\r\n                  key={activity._id}\r\n                  selected={isCryptoOrderSelected}\r\n                >\r\n                  <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                      color=\"primary\"\r\n                      checked={isCryptoOrderSelected}\r\n                      onChange={(event: ChangeEvent<HTMLInputElement>) =>\r\n                        handleSelectOneCryptoOrder(event, activity._id)\r\n                      }\r\n                      value={isCryptoOrderSelected}\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Typography\r\n                      variant=\"body1\"\r\n                      fontWeight=\"bold\"\r\n                      color=\"text.primary\"\r\n                      gutterBottom\r\n                      noWrap\r\n                    >\r\n                      {activity.name}\r\n                    </Typography>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Typography\r\n                      variant=\"body1\"\r\n                      fontWeight=\"bold\"\r\n                      color=\"text.primary\"\r\n                      gutterBottom\r\n                      noWrap\r\n                    >\r\n                      {getSubSector(activity.sub_sector, sub_sectors).name}\r\n                    </Typography>\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">\r\n                    <Tooltip title=\"View Profile\" arrow>\r\n                      <IconButton\r\n                        sx={{\r\n                          \"&:hover\": {\r\n                            background: theme.colors.primary.lighter,\r\n                          },\r\n                          color: theme.palette.primary.main,\r\n                        }}\r\n                        color=\"inherit\"\r\n                        size=\"small\"\r\n                        onClick={() => {\r\n                          setSelectedActivity(activity);\r\n                          setViewModalOpen(true);\r\n                        }}\r\n                      >\r\n                        <ViewTwoToneIcon fontSize=\"small\" />\r\n                      </IconButton>\r\n                    </Tooltip>\r\n                    <Tooltip title=\"Edit Profile\" arrow>\r\n                      <IconButton\r\n                        sx={{\r\n                          \"&:hover\": {\r\n                            background: theme.colors.primary.lighter,\r\n                          },\r\n                          color: theme.palette.primary.main,\r\n                        }}\r\n                        color=\"inherit\"\r\n                        size=\"small\"\r\n                        onClick={() => {\r\n                          dispatch(ActivityActions.SelectActivity(activity));\r\n                          navigate(\r\n                            routes.WORK_PERMIT.EDIT_ACTIVITY.ROUTE,\r\n                            { replace: true }\r\n                          );\r\n                        }}\r\n                      >\r\n                        <EditTwoToneIcon fontSize=\"small\" />\r\n                      </IconButton>\r\n                    </Tooltip>\r\n                    <Tooltip title=\"Delete Profile\" arrow>\r\n                      <IconButton\r\n                        sx={{\r\n                          \"&:hover\": { background: theme.colors.error.lighter },\r\n                          color: theme.palette.error.main,\r\n                        }}\r\n                        color=\"inherit\"\r\n                        size=\"small\"\r\n                        onClick={() => {\r\n                          setSelectedActivity(activity);\r\n                          setDeleteModalOpen(true);\r\n                        }}\r\n                      >\r\n                        <DeleteTwoToneIcon fontSize=\"small\" />\r\n                      </IconButton>\r\n                    </Tooltip>\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <Box p={2}>\r\n        <TablePagination\r\n          component=\"div\"\r\n          count={filteredActivities.length}\r\n          onPageChange={handlePageChange}\r\n          onRowsPerPageChange={handleLimitChange}\r\n          page={page}\r\n          rowsPerPage={limit}\r\n          rowsPerPageOptions={[5, 10, 25, 30]}\r\n        />\r\n      </Box>\r\n    </Card>\r\n  );\r\n};\r\n\r\nRecentOrdersTable.propTypes = {\r\n  activities: PropTypes.array.isRequired,\r\n};\r\n\r\nRecentOrdersTable.defaultProps = {\r\n  activities: [],\r\n};\r\n\r\nexport default RecentOrdersTable;\r\n","import React, { useEffect } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { Grid } from \"@mui/material/\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport {\r\n  Selectors,\r\n  API,\r\n  Actions,\r\n} from \"src/store/States/Investment/Category/Activity\";\r\nimport { Selectors as SubSectorSelector } from \"src/store/States/Investment/Category/SubSector\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport ActivitiesTable from \"./ActivitiesTable\";\r\nimport { useNavigate } from \"react-router\";\r\nimport routes from \"src/constants/routes\";\r\n\r\nconst Activity: React.FC<any> = () => {\r\n  const rows = [\r\n    { name: \"Pre Implementation\" },\r\n    { name: \"Implementation\" },\r\n    { name: \"Operation\" },\r\n  ];\r\n\r\n  const dispatch = useDispatch();\r\n  const activities = useSelector(Selectors.selectActivities);\r\n  const sub_sectors = useSelector(SubSectorSelector.selectSubSectors)\r\n\r\n  const navigate = useNavigate()\r\n  useEffect(() => {\r\n    API.FetchActivities((err, data) => {\r\n      if (err) throw err;\r\n      dispatch(Actions.FetchedActivities(data));\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Grid container>\r\n        <Grid item md={6}>\r\n          <Typography\r\n            id=\"modal-modal-title\"\r\n            variant=\"h4\"\r\n            component=\"h2\"\r\n            sx={{ mb: 3, mt: 2 }}\r\n          >\r\n            Project Activity\r\n          </Typography>\r\n        </Grid>\r\n\r\n        <Grid item md={6} style={{ textAlign: \"right\" }}>\r\n          <Button\r\n            sx={{ margin: 1, pb: 1.1, pt: 1.1, pl: 3, pr: 3 }}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            type=\"submit\"\r\n            startIcon={<AddIcon />}\r\n            onClick={() => navigate(routes.WORK_PERMIT.CREATE_ACTIVITY.ROUTE, { replace: true })}\r\n          >\r\n            New Activity\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container spacing={3}>\r\n        <Grid item md={12}>\r\n          <ActivitiesTable activities={activities as any[]} sub_sectors={sub_sectors} />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Activity;\r\n","import { useState, useRef } from 'react';\r\n\r\nimport {\r\n  Box,\r\n  Menu,\r\n  IconButton,\r\n  Button,\r\n  ListItemText,\r\n  ListItem,\r\n  List,\r\n  Typography\r\n} from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\n\r\nimport DeleteTwoToneIcon from '@mui/icons-material/DeleteTwoTone';\r\nimport MoreVertTwoToneIcon from '@mui/icons-material/MoreVertTwoTone';\r\n\r\nconst ButtonError = styled(Button)(\r\n  ({ theme }) => `\r\n     background: ${theme.colors.error.main};\r\n     color: ${theme.palette.error.contrastText};\r\n\r\n     &:hover {\r\n        background: ${theme.colors.error.dark};\r\n     }\r\n    `\r\n);\r\n\r\nfunction BulkActions() {\r\n  const [onMenuOpen, menuOpen] = useState<boolean>(false);\r\n  const moreRef = useRef<HTMLButtonElement | null>(null);\r\n\r\n  const openMenu = (): void => {\r\n    menuOpen(true);\r\n  };\r\n\r\n  const closeMenu = (): void => {\r\n    menuOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <Typography variant=\"h5\" color=\"text.secondary\">\r\n            Bulk actions:\r\n          </Typography>\r\n          <ButtonError\r\n            sx={{ ml: 1 }}\r\n            startIcon={<DeleteTwoToneIcon />}\r\n            variant=\"contained\"\r\n          >\r\n            Delete\r\n          </ButtonError>\r\n        </Box>\r\n        <IconButton\r\n          color=\"primary\"\r\n          onClick={openMenu}\r\n          ref={moreRef}\r\n          sx={{ ml: 2, p: 1 }}\r\n        >\r\n          <MoreVertTwoToneIcon />\r\n        </IconButton>\r\n      </Box>\r\n\r\n      <Menu\r\n        keepMounted\r\n        anchorEl={moreRef.current}\r\n        open={onMenuOpen}\r\n        onClose={closeMenu}\r\n        anchorOrigin={{\r\n          vertical: 'center',\r\n          horizontal: 'center'\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'center',\r\n          horizontal: 'center'\r\n        }}\r\n\r\n      >\r\n        <List sx={{ p: 1 }} component=\"nav\">\r\n          <ListItem button>\r\n            <ListItemText primary=\"Bulk delete selected\" />\r\n          </ListItem>\r\n          <ListItem button>\r\n            <ListItemText primary=\"Bulk edit selected\" />\r\n          </ListItem>\r\n        </List>\r\n      </Menu>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default BulkActions;\r\n","import { IActivity } from \"src/models/InvestmentModels/Category/activity\"\r\n\r\nexport const getActivity = (_id: string, activitys: IActivity[]): IActivity => {\r\n  const foundIndex = activitys.findIndex(activity => String(activity._id) === String(_id))\r\n  return foundIndex >= 0? activitys[foundIndex] : {} as unknown as IActivity\r\n}","import React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport { TextField, Grid, Box, Container } from \"@mui/material/\"\r\nimport Modal from '@mui/material/Modal';\r\nimport { Selectors as ActivitySelector } from \"src/store/States/Investment/Category/Activity/\"\r\nimport { getActivity } from \"src/store/States/Investment/Category/Activity/helper\"\r\nimport { useSelector } from \"react-redux\"\r\n\r\nconst style = {\r\n  position: 'absolute' as 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: 720,\r\n  backgroundColor: 'background.paper',\r\n  padding: 5,\r\n};\r\n\r\ninterface ViewModalProps {\r\n  isVisible: boolean;\r\n  onClose: () => void;\r\n  investment_activity: any;\r\n}\r\n\r\nconst ViewModal: React.FC<ViewModalProps> = ({ isVisible, onClose, investment_activity }) => {\r\n  const activities = useSelector(ActivitySelector.selectActivities)\r\n  return (\r\n    <div>\r\n      <Modal\r\n        open={isVisible}\r\n        onClose={onClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box sx={style}>\r\n          <Container maxWidth=\"lg\">\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justifyContent=\"center\"\r\n              alignItems=\"stretch\"\r\n              spacing={3}\r\n            >\r\n              <Grid item xs={12}>\r\n              <Typography id=\"modal-modal-title\" variant=\"h2\" component=\"h2\" style={{ marginBottom: 15, marginTop: 15 }}>\r\n                  Investment Activity Detail\r\n                </Typography>\r\n                <Grid container spacing={3} display=\"flex\" alignItems=\"flex-start\">\r\n                  <Grid item md={4}>\r\n                    <TextField\r\n                      required\r\n                      disabled\r\n                      label=\"Investment Activity Name\"\r\n                      defaultValue={investment_activity.name}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item md={6}>\r\n                    <TextField\r\n                      required\r\n                      disabled\r\n                      label=\"Acitvity\"\r\n                      defaultValue={getActivity(investment_activity.activity, activities).name}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container spacing={3} style={{ marginTop: 15, display: \"flex\", justifyContent: \"space-around\", alignItems: \"center\" }}>\r\n                  <Grid item md={6} style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                    <Button sx={{ margin: 1 }} variant=\"contained\" color=\"secondary\" type=\"submit\" onClick={onClose}>\r\n                      Close\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Container>\r\n        </Box>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ViewModal","import React, { useState } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport { Grid, Box, CircularProgress } from \"@mui/material/\"\r\nimport Modal from '@mui/material/Modal';\r\nimport { API, Actions } from \"src/store/States/Investment/Category/InvestmentActivity/\"\r\nimport { useDispatch } from \"react-redux\"\r\n\r\nconst style = {\r\n  position: 'absolute' as 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: 420,\r\n  backgroundColor: 'background.paper',\r\n  padding: 5,\r\n};\r\n\r\ninterface DeleteModalProps {\r\n  isVisible: boolean;\r\n  onClose: () => void;\r\n  investment_activity: any;\r\n}\r\n\r\nconst DeleteModal: React.FC<DeleteModalProps> = ({ isVisible, onClose, investment_activity }) => {\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const dispatch = useDispatch()\r\n  const yesHandler = () => {\r\n    setIsLoading(true)\r\n    API.RemoveInvestmentActivity(investment_activity._id, (err, data) => {\r\n      if (err) throw err\r\n      setIsLoading(false)\r\n      if (data._id) {\r\n        dispatch(Actions.RemoveInvestmentActivity(data))\r\n        onClose()\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        open={isVisible}\r\n        onClose={onClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box sx={style}>\r\n          <Typography id=\"modal-modal-title\" variant=\"h4\" component=\"h2\" style={{ marginBottom: 15, marginTop: 5 }}>\r\n            Are you sure you want to delete {investment_activity.name}\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justifyContent=\"space-around\"\r\n              alignItems=\"stretch\"\r\n              spacing={3}\r\n            >\r\n              <Grid item md={6} style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                <Button variant=\"contained\" sx={{ margin: 1 }} color=\"primary\" onClick={yesHandler} disabled={isLoading}>\r\n                {isLoading ? <CircularProgress /> : \"Yes\"}\r\n                </Button>\r\n              </Grid>\r\n              <Grid item md={6} style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                <Button variant=\"contained\" sx={{ margin: 1 }} color=\"secondary\" onClick={onClose} disabled={isLoading}>No</Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Typography>\r\n        </Box>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DeleteModal","import { FC, ChangeEvent, useState } from 'react';\r\nimport { format } from 'date-fns';\r\nimport numeral from 'numeral';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Tooltip,\r\n  Divider,\r\n  Box,\r\n  FormControl,\r\n  InputLabel,\r\n  Card,\r\n  Checkbox,\r\n  IconButton,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  TableContainer,\r\n  Select,\r\n  MenuItem,\r\n  Typography,\r\n  useTheme,\r\n  CardHeader\r\n} from '@mui/material';\r\n\r\nimport Label from 'src/components/Label';\r\nimport { CryptoOrder, CryptoOrderStatus } from 'src/models/crypto_order';\r\nimport { IInvestmentActivity } from 'src/models/InvestmentModels/Category/investment_activity'\r\nimport EditTwoToneIcon from '@mui/icons-material/EditTwoTone';\r\nimport ViewTwoToneIcon from '@mui/icons-material/RemoveRedEyeSharp';\r\nimport DeleteTwoToneIcon from '@mui/icons-material/DeleteTwoTone';\r\nimport BulkActions from './BulkActions';\r\nimport ViewModal from './ViewModal'\r\nimport DeleteModal from './DeleteModal'\r\nimport { useDispatch } from \"react-redux\"\r\nimport { Actions as InvestmentActivityActions } from \"src/store/States/Investment/Category/InvestmentActivity/\"\r\nimport { useNavigate } from \"react-router\"\r\nimport routes from 'src/constants/routes'\r\nimport { getActivity } from \"src/store/States/Investment/Category/Activity/helper\"\r\n\r\ninterface RecentOrdersTableProps {\r\n  className?: string;\r\n  investment_activities: CryptoOrder[];\r\n  activities: any[]\r\n}\r\n\r\ninterface Filters {\r\n  status?: CryptoOrderStatus;\r\n}\r\n\r\nconst getStatusLabel = (text: any): JSX.Element => {\r\n  const map = {\r\n    failed: {\r\n      text: 'Failed',\r\n      color: 'error'\r\n    },\r\n    completed: {\r\n      text: 'Completed',\r\n      color: 'success'\r\n    },\r\n    pending: {\r\n      text: 'Pending',\r\n      color: 'warning'\r\n    }\r\n  };\r\n\r\n  const { color }: any = map['completed'];\r\n\r\n  return <Label color={color}>{text}</Label>;\r\n};\r\n\r\nconst applyFilters = (\r\n  investment_activities: CryptoOrder[],\r\n  filters: Filters\r\n): CryptoOrder[] => {\r\n  return investment_activities.filter((cryptoOrder) => {\r\n    let matches = true;\r\n\r\n    if (filters.status && cryptoOrder.status !== filters.status) {\r\n      matches = false;\r\n    }\r\n\r\n    return matches;\r\n  });\r\n};\r\n\r\nconst applyPagination = (\r\n  investment_activities: CryptoOrder[],\r\n  page: number,\r\n  limit: number\r\n): CryptoOrder[] => {\r\n  return investment_activities.slice(page * limit, page * limit + limit);\r\n};\r\n\r\nconst RecentOrdersTable: FC<RecentOrdersTableProps> = ({ investment_activities, activities }) => {\r\n  const [selectedInvestmentActivities, setSelectedCryptoOrders] = useState<string[]>(\r\n    []\r\n  );\r\n  const selectedBulkActions = selectedInvestmentActivities.length > 0;\r\n  const [page, setPage] = useState<number>(0);\r\n  const [limit, setLimit] = useState<number>(5);\r\n  const [filters, setFilters] = useState<Filters>({\r\n    status: null\r\n  });\r\n\r\n  const statusOptions = [\r\n    {\r\n      id: 'all',\r\n      name: 'All'\r\n    },\r\n    {\r\n      id: 'completed',\r\n      name: 'Completed'\r\n    },\r\n    {\r\n      id: 'pending',\r\n      name: 'Pending'\r\n    },\r\n    {\r\n      id: 'failed',\r\n      name: 'Failed'\r\n    }\r\n  ];\r\n\r\n  const handleStatusChange = (e: ChangeEvent<HTMLInputElement>): void => {\r\n    let value = null;\r\n\r\n    if (e.target.value !== 'all') {\r\n      value = e.target.value;\r\n    }\r\n\r\n    setFilters((prevFilters) => ({\r\n      ...prevFilters,\r\n      status: value\r\n    }));\r\n  };\r\n\r\n  const handleSelectAllInvestmentActivities = (\r\n    event: ChangeEvent<HTMLInputElement>\r\n  ): void => {\r\n    setSelectedCryptoOrders(\r\n      event.target.checked\r\n        ? investment_activities.map((cryptoOrder) => cryptoOrder.id)\r\n        : []\r\n    );\r\n  };\r\n\r\n  const handleSelectOneCryptoOrder = (\r\n    event: ChangeEvent<HTMLInputElement>,\r\n    cryptoOrderId: string\r\n  ): void => {\r\n    if (!selectedInvestmentActivities.includes(cryptoOrderId)) {\r\n      setSelectedCryptoOrders((prevSelected) => [\r\n        ...prevSelected,\r\n        cryptoOrderId\r\n      ]);\r\n    } else {\r\n      setSelectedCryptoOrders((prevSelected) =>\r\n        prevSelected.filter((id) => id !== cryptoOrderId)\r\n      );\r\n    }\r\n  };\r\n\r\n  const handlePageChange = (event: any, newPage: number): void => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleLimitChange = (event: ChangeEvent<HTMLInputElement>): void => {\r\n    setLimit(parseInt(event.target.value));\r\n  };\r\n\r\n  const filteredInvestmentActivities = applyFilters(investment_activities, filters);\r\n  const paginatedInvestmentActivities = applyPagination(\r\n    filteredInvestmentActivities,\r\n    page,\r\n    limit\r\n  );\r\n  const selectedSomeInvestmentActivities =\r\n    selectedInvestmentActivities.length > 0 &&\r\n    selectedInvestmentActivities.length < investment_activities.length;\r\n  const selectedAllInvestmentActivities =\r\n    selectedInvestmentActivities.length === investment_activities.length;\r\n  const theme = useTheme();\r\n\r\n  const [viewModalOpen, setViewModalOpen] = useState(false)\r\n  const [deleteModalOpen, setDeleteModalOpen] = useState(false)\r\n  const [selectedInvestmentActivity, setSelectedInvestmentActivity] = useState({})\r\n  const navigate = useNavigate()\r\n  const dispatch = useDispatch()\r\n  return (\r\n    <Card>\r\n      <ViewModal\r\n        isVisible={viewModalOpen}\r\n        onClose={() => setViewModalOpen(false)}\r\n        investment_activity={selectedInvestmentActivity}\r\n      />\r\n      <DeleteModal\r\n        isVisible={deleteModalOpen}\r\n        onClose={() => setDeleteModalOpen(false)}\r\n        investment_activity={selectedInvestmentActivity}\r\n      />\r\n      {selectedBulkActions && (\r\n        <Box flex={1} p={2}>\r\n          <BulkActions />\r\n        </Box>\r\n      )}\r\n      {!selectedBulkActions && (\r\n        <CardHeader\r\n          action={\r\n            <Box width={150}>\r\n              <FormControl fullWidth variant=\"outlined\">\r\n                <InputLabel>Status</InputLabel>\r\n                <Select\r\n                  value={filters.status || 'all'}\r\n                  onChange={handleStatusChange}\r\n                  label=\"Status\"\r\n                  autoWidth\r\n                >\r\n                  {statusOptions.map((statusOption) => (\r\n                    <MenuItem key={statusOption.id} value={statusOption.id}>\r\n                      {statusOption.name}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Box>\r\n          }\r\n          title=\"Recent Investment Activities\"\r\n        />\r\n      )}\r\n      <Divider />\r\n      <TableContainer>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell padding=\"checkbox\">\r\n                <Checkbox\r\n                  color=\"primary\"\r\n                  checked={selectedAllInvestmentActivities}\r\n                  indeterminate={selectedSomeInvestmentActivities}\r\n                  onChange={handleSelectAllInvestmentActivities}\r\n                />\r\n              </TableCell>\r\n              <TableCell>Name</TableCell>\r\n              <TableCell>Activity</TableCell>\r\n              <TableCell align=\"right\">Actions</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {paginatedInvestmentActivities.map((item) => {\r\n              const isCryptoOrderSelected = selectedInvestmentActivities.includes(\r\n                item._id\r\n              );\r\n              const investment_activity = item as unknown as IInvestmentActivity\r\n              return (\r\n                <TableRow\r\n                  hover\r\n                  key={investment_activity._id}\r\n                  selected={isCryptoOrderSelected}\r\n                >\r\n                  <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                      color=\"primary\"\r\n                      checked={isCryptoOrderSelected}\r\n                      onChange={(event: ChangeEvent<HTMLInputElement>) =>\r\n                        handleSelectOneCryptoOrder(event, investment_activity._id)\r\n                      }\r\n                      value={isCryptoOrderSelected}\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Typography\r\n                      variant=\"body1\"\r\n                      fontWeight=\"bold\"\r\n                      color=\"text.primary\"\r\n                      gutterBottom\r\n                      noWrap\r\n                    >\r\n                      {investment_activity.name}\r\n                    </Typography>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Typography\r\n                      variant=\"body1\"\r\n                      fontWeight=\"bold\"\r\n                      color=\"text.primary\"\r\n                      gutterBottom\r\n                      noWrap\r\n                    >\r\n                      {getActivity(investment_activity.activity, activities).name}\r\n                    </Typography>\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">\r\n                    <Tooltip title=\"View Profile\" arrow>\r\n                      <IconButton\r\n                        sx={{\r\n                          '&:hover': {\r\n                            background: theme.colors.primary.lighter\r\n                          },\r\n                          color: theme.palette.primary.main\r\n                        }}\r\n                        color=\"inherit\"\r\n                        size=\"small\"\r\n                        onClick={() => {\r\n                          setSelectedInvestmentActivity(investment_activity)\r\n                          setViewModalOpen(true)\r\n                        }}\r\n                      >\r\n                        <ViewTwoToneIcon fontSize=\"small\" />\r\n                      </IconButton>\r\n                    </Tooltip>\r\n                    <Tooltip title=\"Edit Profile\" arrow>\r\n                      <IconButton\r\n                        sx={{\r\n                          '&:hover': {\r\n                            background: theme.colors.primary.lighter\r\n                          },\r\n                          color: theme.palette.primary.main\r\n                        }}\r\n                        color=\"inherit\"\r\n                        size=\"small\"\r\n                        onClick={() => {\r\n                          dispatch(InvestmentActivityActions.SelectInvestmentActivity(investment_activity))\r\n                          navigate(routes.WORK_PERMIT.EDIT_INVESTMENT_ACTIVITY.ROUTE, { replace: true })\r\n                        }}\r\n                      >\r\n                        <EditTwoToneIcon fontSize=\"small\" />\r\n                      </IconButton>\r\n                    </Tooltip>\r\n                    <Tooltip title=\"Delete Profile\" arrow>\r\n                      <IconButton\r\n                        sx={{\r\n                          '&:hover': { background: theme.colors.error.lighter },\r\n                          color: theme.palette.error.main\r\n                        }}\r\n                        color=\"inherit\"\r\n                        size=\"small\"\r\n                        onClick={() => {\r\n                          setSelectedInvestmentActivity(investment_activity)\r\n                          setDeleteModalOpen(true)\r\n                        }}\r\n                      >\r\n                        <DeleteTwoToneIcon fontSize=\"small\" />\r\n                      </IconButton>\r\n                    </Tooltip>\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <Box p={2}>\r\n        <TablePagination\r\n          component=\"div\"\r\n          count={filteredInvestmentActivities.length}\r\n          onPageChange={handlePageChange}\r\n          onRowsPerPageChange={handleLimitChange}\r\n          page={page}\r\n          rowsPerPage={limit}\r\n          rowsPerPageOptions={[5, 10, 25, 30]}\r\n        />\r\n      </Box>\r\n    </Card>\r\n  );\r\n};\r\n\r\nRecentOrdersTable.propTypes = {\r\n  investment_activities: PropTypes.array.isRequired\r\n};\r\n\r\nRecentOrdersTable.defaultProps = {\r\n  investment_activities: []\r\n};\r\n\r\nexport default RecentOrdersTable;\r\n","import React, { useEffect } from \"react\";\r\nimport Card from \"@mui/material/Card\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport {\r\n  TextField,\r\n  Grid,\r\n  MenuItem,\r\n  Box,\r\n  Container,\r\n  CircularProgress,\r\n  Tabs,\r\n  Tab,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  RadioGroup,\r\n  Radio,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n} from \"@mui/material/\";\r\nimport {\r\n  LegalStatusTypes,\r\n  FormOfOwnerShipTypes,\r\n  IBusinessProfileInput,\r\n} from \"src/models/InvestmentModels/business_profile\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport ViewIcon from \"@mui/icons-material/Visibility\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport { Selectors as InvestmentActivitySelector, API, Actions } from \"src/store/States/Investment/Category/InvestmentActivity\"\r\nimport { Selectors as ActivitySelector } from \"src/store/States/Investment/Category/Activity\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport InvestmentActivitiesTable from \"./InvestmentActivitiesTable\"\r\nimport routes from \"src/constants/routes\"\r\nimport { useNavigate } from \"react-router\"\r\n\r\nconst CategoryInvestmentActivity: React.FC<any> = () => {\r\n  const rows = [\r\n    { name: \"Pre Implementation\" },\r\n    { name: \"Implementation\" },\r\n    { name: \"Operation\" },\r\n  ];\r\n\r\n  const dispatch = useDispatch()\r\n  const investment_activities = useSelector(InvestmentActivitySelector.selectInvestmentActivities)\r\n  const activities = useSelector(ActivitySelector.selectActivities)\r\n\r\n  const navigate = useNavigate()\r\n\r\n  useEffect(() => {\r\n    API.FetchInvestmentActivities((err, data) => {\r\n      if (err) throw err\r\n      dispatch(Actions.FetchedInvestmentActivities(data))\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <Grid container>\r\n        <Grid item md={6}>\r\n          <Typography\r\n            id=\"modal-modal-title\"\r\n            variant=\"h4\"\r\n            component=\"h2\"\r\n            sx={{ mb: 3, mt: 2 }}\r\n          >\r\n            Project Investment Activity\r\n          </Typography>\r\n        </Grid>\r\n\r\n        <Grid item md={6} style={{ textAlign: \"right\" }}>\r\n          <Button\r\n            sx={{ margin: 1, pb: 1.1, pt: 1.1, pl: 3, pr: 3 }}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            type=\"submit\"\r\n            startIcon={<AddIcon />}\r\n            onClick={() => navigate(routes.WORK_PERMIT.CREATE_INVESTMENT_ACTIVITY.ROUTE, { replace: true })}\r\n          >\r\n            New Investment Activity\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container spacing={3}>\r\n        <Grid item md={12}>\r\n          <InvestmentActivitiesTable\r\n            investment_activities={investment_activities as any[]}\r\n            activities={activities as any[]}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CategoryInvestmentActivity;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Card from \"@mui/material/Card\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport {\r\n  TextField,\r\n  Grid,\r\n  MenuItem,\r\n  Box,\r\n  Container,\r\n  CircularProgress,\r\n  Tabs,\r\n  Tab,\r\n} from \"@mui/material/\";\r\nimport {\r\n  LegalStatusTypes,\r\n  FormOfOwnerShipTypes,\r\n  IBusinessProfileInput,\r\n} from \"src/models/InvestmentModels/business_profile\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport PageHeader from \"./PageHeader\";\r\nimport PageTitleWrapper from \"src/components/PageTitleWrapper\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport routes from \"src/constants/routes\";\r\nimport { useNavigate } from \"react-router\";\r\nimport TabList from \"@mui/lab/TabList\";\r\nimport TabPanel from \"@mui/lab/TabPanel\";\r\nimport TabContext from \"@mui/lab/TabContext\";\r\nimport { selectCategoryTab, Actions as BufferActions } from \"src/store/States/Buffer/\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\n\r\n// tab pages\r\nimport CategorySector from \"./Tabs/Sector\";\r\nimport CategorySubSector from \"./Tabs/SubSector/index\";\r\nimport CategoryActivity from \"./Tabs/Activity\";\r\nimport CategoryInvestmentActivity from \"./Tabs/InvestmentActivity\"\r\n\r\nconst ProjectCategory = () => {\r\n  const dispatch = useDispatch()\r\n  const handleChangeWorkPermitTab = (event: any, newValue: string) => {\r\n    dispatch(BufferActions.UpdateCategoryTab(newValue))\r\n  };\r\n\r\n  const categoryTab = useSelector(selectCategoryTab)\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Work Permit</title>\r\n      </Helmet>\r\n      <PageTitleWrapper>\r\n        <PageHeader />\r\n      </PageTitleWrapper>\r\n      <Container maxWidth=\"lg\" sx={{ mb: 7 }}>\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"stretch\"\r\n          spacing={3}\r\n        >\r\n          <Grid item xs={12}>\r\n            <form>\r\n              <Card style={{ padding: 20 }}>\r\n                <TabContext value={categoryTab}>\r\n                  <Box\r\n                    sx={{ borderBottom: 2, borderColor: \"#ddd\", p: 3, pb: 4 }}\r\n                  >\r\n                    <TabList onChange={handleChangeWorkPermitTab}>\r\n                      <Tab label=\"Sector\" value=\"1\" />\r\n                      <Tab label=\"SubSector\" value=\"2\" />\r\n                      <Tab label=\"Activity\" value=\"3\" />\r\n                      <Tab label=\"Investment Activity\" value=\"4\" />\r\n                    </TabList>\r\n                  </Box>\r\n\r\n                  <TabPanel value=\"1\">\r\n                    <CategorySector />\r\n                  </TabPanel>\r\n                  <TabPanel value=\"2\">\r\n                    <CategorySubSector />\r\n                  </TabPanel>\r\n                  <TabPanel value=\"3\">\r\n                    <CategoryActivity />\r\n                  </TabPanel>\r\n                  <TabPanel value=\"4\">\r\n                    <CategoryInvestmentActivity />\r\n                  </TabPanel>\r\n                </TabContext>\r\n              </Card>\r\n            </form>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProjectCategory;\r\n","import { FC, ReactNode } from 'react';\r\nimport { Container } from '@mui/material';\r\nimport PropTypes from 'prop-types';\r\nimport { styled } from '@mui/material/styles';\r\nimport { Box } from '@mui/material';\r\n\r\nconst PageTitle = styled(Box)(\r\n  ({ theme }) => `\r\n        padding: ${theme.spacing(4, 0)};\r\n`\r\n);\r\n\r\ninterface PageTitleWrapperProps {\r\n  children?: ReactNode;\r\n}\r\n\r\nconst PageTitleWrapper: FC<PageTitleWrapperProps> = ({ children }) => {\r\n  return (\r\n    <>\r\n      <PageTitle>\r\n        <Container maxWidth=\"lg\">\r\n          {children}\r\n        </Container>\r\n      </PageTitle>\r\n    </>\r\n  );\r\n};\r\n\r\nPageTitleWrapper.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n};\r\n\r\nexport default PageTitleWrapper;\r\n","import { FC, ReactNode } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { styled } from '@mui/material/styles';\r\n\r\ninterface LabelProps {\r\n  className?: string;\r\n  color?: 'primary' | 'secondary' | 'error' | 'warning' | 'success' | 'info';\r\n  children?: ReactNode;\r\n}\r\n\r\nconst LabelWrapper = styled('span')(\r\n  ({ theme }) => `\r\n      background-color: ${theme.colors.alpha.black[5]};\r\n      padding: ${theme.spacing(0.5, 1)};\r\n      font-size: ${theme.typography.pxToRem(13)};\r\n      border-radius: ${theme.general.borderRadius};\r\n      display: inline-flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      max-height: ${theme.spacing(3)};\r\n      \r\n      &.MuiLabel {\r\n        &-primary {\r\n          background-color: ${theme.colors.primary.lighter};\r\n          color: ${theme.palette.primary.main}\r\n        }\r\n        \r\n        &-secondary {\r\n          background-color: ${theme.colors.secondary.lighter};\r\n          color: ${theme.palette.secondary.main}\r\n        }\r\n        \r\n        &-success {\r\n          background-color: ${theme.colors.success.lighter};\r\n          color: ${theme.palette.success.main}\r\n        }\r\n        \r\n        &-warning {\r\n          background-color: ${theme.colors.warning.lighter};\r\n          color: ${theme.palette.warning.main}\r\n        }\r\n              \r\n        &-error {\r\n          background-color: ${theme.colors.error.lighter};\r\n          color: ${theme.palette.error.main}\r\n        }\r\n        \r\n        &-info {\r\n          background-color: ${theme.colors.info.lighter};\r\n          color: ${theme.palette.info.main}\r\n        }\r\n      }\r\n`\r\n);\r\n\r\nconst Label: FC<LabelProps> = ({\r\n  className = '',\r\n  color = 'secondary',\r\n  children,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <LabelWrapper className={'MuiLabel-' + color} {...rest}>\r\n      {children}\r\n    </LabelWrapper>\r\n  );\r\n};\r\n\r\nLabel.propTypes = {\r\n  children: PropTypes.node,\r\n  className: PropTypes.string,\r\n  color: PropTypes.oneOf([\r\n    'primary',\r\n    'secondary',\r\n    'error',\r\n    'warning',\r\n    'success',\r\n    'info'\r\n  ])\r\n};\r\n\r\nexport default Label;\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreVertTwoTone');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'RemoveRedEyeSharp');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)([/*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M5 18.08V19h.92l9.06-9.06-.92-.92z\",\n  opacity: \".3\"\n}, \"0\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.2-.2-.45-.29-.71-.29s-.51.1-.7.29l-1.83 1.83 3.75 3.75 1.83-1.83zM3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM5.92 19H5v-.92l9.06-9.06.92.92L5.92 19z\"\n}, \"1\")], 'EditTwoTone');\n\nexports.default = _default;","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getCheckboxUtilityClass(slot) {\n  return generateUtilityClass('MuiCheckbox', slot);\n}\nconst checkboxClasses = generateUtilityClasses('MuiCheckbox', ['root', 'checked', 'disabled', 'indeterminate', 'colorPrimary', 'colorSecondary']);\nexport default checkboxClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checkedIcon\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport { alpha } from '@mui/system';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport checkboxClasses, { getCheckboxUtilityClass } from './checkboxClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    indeterminate,\n    color\n  } = ownerState;\n  const slots = {\n    root: ['root', indeterminate && 'indeterminate', `color${capitalize(color)}`]\n  };\n  const composedClasses = composeClasses(slots, getCheckboxUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\nconst CheckboxRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiCheckbox',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.indeterminate && styles.indeterminate, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  color: theme.palette.text.secondary\n}, !ownerState.disableRipple && {\n  '&:hover': {\n    backgroundColor: alpha(ownerState.color === 'default' ? theme.palette.action.active : theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${checkboxClasses.checked}, &.${checkboxClasses.indeterminate}`]: {\n    color: theme.palette[ownerState.color].main\n  },\n  [`&.${checkboxClasses.disabled}`]: {\n    color: theme.palette.action.disabled\n  }\n}));\n\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(CheckBoxIcon, {});\n\nconst defaultIcon = /*#__PURE__*/_jsx(CheckBoxOutlineBlankIcon, {});\n\nconst defaultIndeterminateIcon = /*#__PURE__*/_jsx(IndeterminateCheckBoxIcon, {});\n\nconst Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(inProps, ref) {\n  var _icon$props$fontSize, _indeterminateIcon$pr;\n\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCheckbox'\n  });\n\n  const {\n    checkedIcon = defaultCheckedIcon,\n    color = 'primary',\n    icon: iconProp = defaultIcon,\n    indeterminate = false,\n    indeterminateIcon: indeterminateIconProp = defaultIndeterminateIcon,\n    inputProps,\n    size = 'medium'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const icon = indeterminate ? indeterminateIconProp : iconProp;\n  const indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n\n  const ownerState = _extends({}, props, {\n    color,\n    indeterminate,\n    size\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CheckboxRoot, _extends({\n    type: \"checkbox\",\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: (_icon$props$fontSize = icon.props.fontSize) != null ? _icon$props$fontSize : size\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: (_indeterminateIcon$pr = indeterminateIcon.props.fontSize) != null ? _indeterminateIcon$pr : size\n    }),\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckBoxIcon />\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect is disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <CheckBoxOutlineBlankIcon />\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the `input`.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateCheckBoxIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense checkbox styling.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Checkbox;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\n\nexports.default = _default;","export const getCorrectDate = (test_date: Date) => {\r\n  if (!test_date) return `2020-01-01`\r\n  return `${new Date(test_date).getFullYear()}-${(new Date(test_date).getMonth() + 1) < 10 ? `0${(new Date(test_date).getMonth() + 1)}` : `${(new Date(test_date).getMonth() + 1)}`}-${new Date(test_date).getDate() < 10? `0${new Date(test_date).getDate()}` : `${new Date(test_date).getDate()}`}`\r\n}\r\n\r\nexport const getGQLDate = (test_date: Date, addYear: boolean) => {\r\n  let normalData = addYear? `${(new Date(test_date).getFullYear() + 1)}` : `${(new Date(test_date).getFullYear())}`\r\n  normalData = normalData + \"-\" + ((new Date(test_date).getMonth() + 1) < 10 ? `0${(new Date(test_date).getMonth() + 1)}` : (new Date(test_date).getMonth() + 1)) +\r\n    \"-\" + (new Date(test_date).getDate() < 10 ? `0${new Date(test_date).getDate()}` : new Date(test_date).getDate())\r\n  return `${normalData}T11:49:19.266Z` as unknown as Date\r\n}"],"sourceRoot":""}