{"version":3,"sources":["content/pages/Category/PageHeader.tsx","content/pages/Category/BulkActions.tsx","content/pages/Category/RecentOrdersTable.tsx","content/pages/Category/RecentOrders.tsx","content/pages/Category/index.tsx","components/PageTitleWrapper/index.tsx","components/Footer/index.tsx","components/Label/index.tsx"],"names":["PageHeader","Grid","container","justifyContent","alignItems","item","Typography","variant","component","gutterBottom","Button","sx","mt","xs","md","startIcon","fontSize","ButtonError","styled","theme","colors","error","main","palette","contrastText","dark","BulkActions","useState","onMenuOpen","menuOpen","moreRef","useRef","Box","display","color","ml","IconButton","onClick","ref","p","Menu","keepMounted","anchorEl","current","open","onClose","anchorOrigin","vertical","horizontal","transformOrigin","List","ListItem","button","ListItemText","primary","getStatusLabel","cryptoOrderStatus","failed","text","completed","pending","Label","RecentOrdersTable","cryptoOrders","selectedCryptoOrders","setSelectedCryptoOrders","selectedBulkActions","length","page","setPage","limit","setLimit","status","filters","setFilters","filteredCryptoOrders","filter","cryptoOrder","matches","applyFilters","paginatedCryptoOrders","slice","applyPagination","selectedSomeCryptoOrders","selectedAllCryptoOrders","useTheme","Card","flex","CardHeader","action","width","FormControl","fullWidth","InputLabel","Select","value","onChange","e","target","prevFilters","label","autoWidth","id","name","map","statusOption","MenuItem","title","Divider","TableContainer","Table","TableHead","TableRow","TableCell","padding","Checkbox","checked","indeterminate","event","align","TableBody","isCryptoOrderSelected","includes","hover","selected","cryptoOrderId","prevSelected","fontWeight","noWrap","format","ageLimit","orderID","sourceName","sourceDesc","amountCrypto","cryptoCurrency","numeral","amount","currency","Tooltip","arrow","background","lighter","size","TablePagination","count","onPageChange","newPage","onRowsPerPageChange","parseInt","rowsPerPage","rowsPerPageOptions","defaultProps","RecentOrders","Date","getTime","subDays","ApplicationsTransactions","PageTitleWrapper","Container","maxWidth","direction","spacing","Footer","PageTitle","children","FooterWrapper","py","textAlign","LabelWrapper","alpha","black","typography","pxToRem","general","borderRadius","secondary","success","warning","info","className","rest"],"mappings":"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","file":"static/js/64.5d80a404.chunk.js","sourcesContent":["import { Typography, Button, Grid } from '@mui/material';\r\n\r\nimport AddTwoToneIcon from '@mui/icons-material/AddTwoTone';\r\n\r\nfunction PageHeader() {\r\n\r\n  const user =\r\n  {\r\n    name: 'Catherine Pike',\r\n    avatar: '/static/images/avatars/1.jpg'\r\n  };\r\n  return (\r\n    <Grid container justifyContent=\"space-between\" alignItems=\"center\">\r\n      <Grid item>\r\n        <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n          Transactions\r\n        </Typography>\r\n        <Typography variant=\"subtitle2\">\r\n          {user.name}, these are your recent transactions\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item>\r\n        <Button\r\n          sx={{ mt: { xs: 2, md: 0 } }}\r\n          variant=\"contained\"\r\n          startIcon={<AddTwoToneIcon fontSize=\"small\" />}\r\n        >\r\n          Create transaction\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default PageHeader;\r\n","import { useState, useRef } from 'react';\r\n\r\nimport {\r\n  Box,\r\n  Menu,\r\n  IconButton,\r\n  Button,\r\n  ListItemText,\r\n  ListItem,\r\n  List,\r\n  Typography\r\n} from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\n\r\nimport DeleteTwoToneIcon from '@mui/icons-material/DeleteTwoTone';\r\nimport MoreVertTwoToneIcon from '@mui/icons-material/MoreVertTwoTone';\r\n\r\nconst ButtonError = styled(Button)(\r\n  ({ theme }) => `\r\n     background: ${theme.colors.error.main};\r\n     color: ${theme.palette.error.contrastText};\r\n\r\n     &:hover {\r\n        background: ${theme.colors.error.dark};\r\n     }\r\n    `\r\n);\r\n\r\nfunction BulkActions() {\r\n  const [onMenuOpen, menuOpen] = useState<boolean>(false);\r\n  const moreRef = useRef<HTMLButtonElement | null>(null);\r\n\r\n  const openMenu = (): void => {\r\n    menuOpen(true);\r\n  };\r\n\r\n  const closeMenu = (): void => {\r\n    menuOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <Typography variant=\"h5\" color=\"text.secondary\">\r\n            Bulk actions:\r\n          </Typography>\r\n          <ButtonError\r\n            sx={{ ml: 1 }}\r\n            startIcon={<DeleteTwoToneIcon />}\r\n            variant=\"contained\"\r\n          >\r\n            Delete\r\n          </ButtonError>\r\n        </Box>\r\n        <IconButton\r\n          color=\"primary\"\r\n          onClick={openMenu}\r\n          ref={moreRef}\r\n          sx={{ ml: 2, p: 1 }}\r\n        >\r\n          <MoreVertTwoToneIcon />\r\n        </IconButton>\r\n      </Box>\r\n\r\n      <Menu\r\n        keepMounted\r\n        anchorEl={moreRef.current}\r\n        open={onMenuOpen}\r\n        onClose={closeMenu}\r\n        anchorOrigin={{\r\n          vertical: 'center',\r\n          horizontal: 'center'\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'center',\r\n          horizontal: 'center'\r\n        }}\r\n\r\n      >\r\n        <List sx={{ p: 1 }} component=\"nav\">\r\n          <ListItem button>\r\n            <ListItemText primary=\"Bulk delete selected\" />\r\n          </ListItem>\r\n          <ListItem button>\r\n            <ListItemText primary=\"Bulk edit selected\" />\r\n          </ListItem>\r\n        </List>\r\n      </Menu>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default BulkActions;\r\n","import { FC, ChangeEvent, useState } from 'react';\r\nimport { format } from 'date-fns';\r\nimport numeral from 'numeral';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Tooltip,\r\n  Divider,\r\n  Box,\r\n  FormControl,\r\n  InputLabel,\r\n  Card,\r\n  Checkbox,\r\n  IconButton,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  TableContainer,\r\n  Select,\r\n  MenuItem,\r\n  Typography,\r\n  useTheme,\r\n  CardHeader\r\n} from '@mui/material';\r\n\r\nimport Label from 'src/components/Label';\r\nimport { CryptoOrder, CryptoOrderStatus } from 'src/models/crypto_order';\r\nimport EditTwoToneIcon from '@mui/icons-material/EditTwoTone';\r\nimport DeleteTwoToneIcon from '@mui/icons-material/DeleteTwoTone';\r\nimport BulkActions from './BulkActions';\r\n\r\ninterface RecentOrdersTableProps {\r\n  className?: string;\r\n  cryptoOrders: CryptoOrder[];\r\n}\r\n\r\ninterface Filters {\r\n  status?: CryptoOrderStatus;\r\n}\r\n\r\nconst getStatusLabel = (cryptoOrderStatus: CryptoOrderStatus): JSX.Element => {\r\n  const map = {\r\n    failed: {\r\n      text: 'Failed',\r\n      color: 'error'\r\n    },\r\n    completed: {\r\n      text: 'Completed',\r\n      color: 'success'\r\n    },\r\n    pending: {\r\n      text: 'Pending',\r\n      color: 'warning'\r\n    }\r\n  };\r\n\r\n  const { text, color }: any = map[cryptoOrderStatus];\r\n\r\n  return <Label color={color}>{text}</Label>;\r\n};\r\n\r\nconst applyFilters = (\r\n  cryptoOrders: CryptoOrder[],\r\n  filters: Filters\r\n): CryptoOrder[] => {\r\n  return cryptoOrders.filter((cryptoOrder) => {\r\n    let matches = true;\r\n\r\n    if (filters.status && cryptoOrder.status !== filters.status) {\r\n      matches = false;\r\n    }\r\n\r\n    return matches;\r\n  });\r\n};\r\n\r\nconst applyPagination = (\r\n  cryptoOrders: CryptoOrder[],\r\n  page: number,\r\n  limit: number\r\n): CryptoOrder[] => {\r\n  return cryptoOrders.slice(page * limit, page * limit + limit);\r\n};\r\n\r\nconst RecentOrdersTable: FC<RecentOrdersTableProps> = ({ cryptoOrders }) => {\r\n\r\n  const [selectedCryptoOrders, setSelectedCryptoOrders] = useState<string[]>(\r\n    []\r\n  );\r\n  const selectedBulkActions = selectedCryptoOrders.length > 0;\r\n  const [page, setPage] = useState<number>(0);\r\n  const [limit, setLimit] = useState<number>(5);\r\n  const [filters, setFilters] = useState<Filters>({\r\n    status: null\r\n  });\r\n\r\n  const statusOptions = [\r\n    {\r\n      id: 'all',\r\n      name: 'All'\r\n    },\r\n    {\r\n      id: 'completed',\r\n      name: 'Completed'\r\n    },\r\n    {\r\n      id: 'pending',\r\n      name: 'Pending'\r\n    },\r\n    {\r\n      id: 'failed',\r\n      name: 'Failed'\r\n    }\r\n  ];\r\n\r\n  const handleStatusChange = (e: ChangeEvent<HTMLInputElement>): void => {\r\n    let value = null;\r\n\r\n    if (e.target.value !== 'all') {\r\n      value = e.target.value;\r\n    }\r\n\r\n    setFilters((prevFilters) => ({\r\n      ...prevFilters,\r\n      status: value\r\n    }));\r\n  };\r\n\r\n  const handleSelectAllCryptoOrders = (\r\n    event: ChangeEvent<HTMLInputElement>\r\n  ): void => {\r\n    setSelectedCryptoOrders(\r\n      event.target.checked\r\n        ? cryptoOrders.map((cryptoOrder) => cryptoOrder.id)\r\n        : []\r\n    );\r\n  };\r\n\r\n  const handleSelectOneCryptoOrder = (\r\n    event: ChangeEvent<HTMLInputElement>,\r\n    cryptoOrderId: string\r\n  ): void => {\r\n    if (!selectedCryptoOrders.includes(cryptoOrderId)) {\r\n      setSelectedCryptoOrders((prevSelected) => [\r\n        ...prevSelected,\r\n        cryptoOrderId\r\n      ]);\r\n    } else {\r\n      setSelectedCryptoOrders((prevSelected) =>\r\n        prevSelected.filter((id) => id !== cryptoOrderId)\r\n      );\r\n    }\r\n  };\r\n\r\n  const handlePageChange = (event: any, newPage: number): void => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleLimitChange = (event: ChangeEvent<HTMLInputElement>): void => {\r\n    setLimit(parseInt(event.target.value));\r\n  };\r\n\r\n  const filteredCryptoOrders = applyFilters(cryptoOrders, filters);\r\n  const paginatedCryptoOrders = applyPagination(\r\n    filteredCryptoOrders,\r\n    page,\r\n    limit\r\n  );\r\n  const selectedSomeCryptoOrders =\r\n    selectedCryptoOrders.length > 0 &&\r\n    selectedCryptoOrders.length < cryptoOrders.length;\r\n  const selectedAllCryptoOrders =\r\n    selectedCryptoOrders.length === cryptoOrders.length;\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <Card>\r\n      {selectedBulkActions && (\r\n        <Box flex={1} p={2}>\r\n          <BulkActions />\r\n        </Box>\r\n      )}\r\n      {!selectedBulkActions && (\r\n        <CardHeader\r\n          action={\r\n            <Box width={150}>\r\n              <FormControl fullWidth variant=\"outlined\">\r\n                <InputLabel>Status</InputLabel>\r\n                <Select\r\n                  value={filters.status || 'all'}\r\n                  onChange={handleStatusChange}\r\n                  label=\"Status\"\r\n                  autoWidth\r\n                >\r\n                  {statusOptions.map((statusOption) => (\r\n                    <MenuItem key={statusOption.id} value={statusOption.id}>\r\n                      {statusOption.name}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Box>\r\n          }\r\n          title=\"Recent Orders\"\r\n        />\r\n      )}\r\n      <Divider />\r\n      <TableContainer>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell padding=\"checkbox\">\r\n                <Checkbox\r\n                  color=\"primary\"\r\n                  checked={selectedAllCryptoOrders}\r\n                  indeterminate={selectedSomeCryptoOrders}\r\n                  onChange={handleSelectAllCryptoOrders}\r\n                />\r\n              </TableCell>\r\n              <TableCell>Order Details</TableCell>\r\n              <TableCell>Order ID</TableCell>\r\n              <TableCell>Source</TableCell>\r\n              <TableCell align=\"right\">Amount</TableCell>\r\n              <TableCell align=\"right\">Status</TableCell>\r\n              <TableCell align=\"right\">Actions</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {paginatedCryptoOrders.map((cryptoOrder) => {\r\n              const isCryptoOrderSelected = selectedCryptoOrders.includes(\r\n                cryptoOrder.id\r\n              );\r\n              return (\r\n                <TableRow\r\n                  hover\r\n                  key={cryptoOrder.id}\r\n                  selected={isCryptoOrderSelected}\r\n                >\r\n                  <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                      color=\"primary\"\r\n                      checked={isCryptoOrderSelected}\r\n                      onChange={(event: ChangeEvent<HTMLInputElement>) =>\r\n                        handleSelectOneCryptoOrder(event, cryptoOrder.id)\r\n                      }\r\n                      value={isCryptoOrderSelected}\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Typography\r\n                      variant=\"body1\"\r\n                      fontWeight=\"bold\"\r\n                      color=\"text.primary\"\r\n                      gutterBottom\r\n                      noWrap\r\n                    >\r\n                      {cryptoOrder.title}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"text.secondary\" noWrap>\r\n                      {format(cryptoOrder.ageLimit, 'MMMM dd yyyy')}\r\n                    </Typography>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Typography\r\n                      variant=\"body1\"\r\n                      fontWeight=\"bold\"\r\n                      color=\"text.primary\"\r\n                      gutterBottom\r\n                      noWrap\r\n                    >\r\n                      {cryptoOrder.orderID}\r\n                    </Typography>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Typography\r\n                      variant=\"body1\"\r\n                      fontWeight=\"bold\"\r\n                      color=\"text.primary\"\r\n                      gutterBottom\r\n                      noWrap\r\n                    >\r\n                      {cryptoOrder.sourceName}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"text.secondary\" noWrap>\r\n                      {cryptoOrder.sourceDesc}\r\n                    </Typography>\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">\r\n                    <Typography\r\n                      variant=\"body1\"\r\n                      fontWeight=\"bold\"\r\n                      color=\"text.primary\"\r\n                      gutterBottom\r\n                      noWrap\r\n                    >\r\n                      {cryptoOrder.amountCrypto}\r\n                      {cryptoOrder.cryptoCurrency}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"text.secondary\" noWrap>\r\n                      {numeral(cryptoOrder.amount).format(\r\n                        `${cryptoOrder.currency}0,0.00`\r\n                      )}\r\n                    </Typography>\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">\r\n                    {getStatusLabel(cryptoOrder.status)}\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">\r\n                    <Tooltip title=\"Edit Order\" arrow>\r\n                      <IconButton\r\n                        sx={{\r\n                          '&:hover': {\r\n                            background: theme.colors.primary.lighter\r\n                          },\r\n                          color: theme.palette.primary.main\r\n                        }}\r\n                        color=\"inherit\"\r\n                        size=\"small\"\r\n                      >\r\n                        <EditTwoToneIcon fontSize=\"small\" />\r\n                      </IconButton>\r\n                    </Tooltip>\r\n                    <Tooltip title=\"Delete Order\" arrow>\r\n                      <IconButton\r\n                        sx={{\r\n                          '&:hover': { background: theme.colors.error.lighter },\r\n                          color: theme.palette.error.main\r\n                        }}\r\n                        color=\"inherit\"\r\n                        size=\"small\"\r\n                      >\r\n                        <DeleteTwoToneIcon fontSize=\"small\" />\r\n                      </IconButton>\r\n                    </Tooltip>\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <Box p={2}>\r\n        <TablePagination\r\n          component=\"div\"\r\n          count={filteredCryptoOrders.length}\r\n          onPageChange={handlePageChange}\r\n          onRowsPerPageChange={handleLimitChange}\r\n          page={page}\r\n          rowsPerPage={limit}\r\n          rowsPerPageOptions={[5, 10, 25, 30]}\r\n        />\r\n      </Box>\r\n    </Card>\r\n  );\r\n};\r\n\r\nRecentOrdersTable.propTypes = {\r\n  cryptoOrders: PropTypes.array.isRequired\r\n};\r\n\r\nRecentOrdersTable.defaultProps = {\r\n  cryptoOrders: []\r\n};\r\n\r\nexport default RecentOrdersTable;\r\n","import { Card } from '@mui/material';\r\nimport { CryptoOrder } from 'src/models/crypto_order';\r\nimport RecentOrdersTable from './RecentOrdersTable';\r\nimport { subDays } from 'date-fns';\r\n\r\nfunction RecentOrders() {\r\n\r\n  const cryptoOrders: CryptoOrder[] = [\r\n    {\r\n      id: '1',\r\n      title: 'Fiat Deposit',\r\n      ageLimit: new Date().getTime(),\r\n      status: 'completed',\r\n      orderID: 'VUVX709ET7BY',\r\n      sourceName: 'Bank Account',\r\n      sourceDesc: '*** 1111',\r\n      amountCrypto: 34.4565,\r\n      amount: 56787,\r\n      cryptoCurrency: 'ETH',\r\n      currency: '$'\r\n    },\r\n    {\r\n      id: '2',\r\n      title: 'Fiat Deposit',\r\n      ageLimit: subDays(new Date(), 1).getTime(),\r\n      status: 'completed',\r\n      orderID: '23M3UOG65G8K',\r\n      sourceName: 'Bank Account',\r\n      sourceDesc: '*** 1111',\r\n      amountCrypto: 6.58454334,\r\n      amount: 8734587,\r\n      cryptoCurrency: 'BTC',\r\n      currency: '$'\r\n    },\r\n    {\r\n      id: '3',\r\n      title: 'Fiat Deposit',\r\n      ageLimit: subDays(new Date(), 5).getTime(),\r\n      status: 'failed',\r\n      orderID: 'F6JHK65MS818',\r\n      sourceName: 'Bank Account',\r\n      sourceDesc: '*** 1111',\r\n      amountCrypto: 6.58454334,\r\n      amount: 8734587,\r\n      cryptoCurrency: 'BTC',\r\n      currency: '$'\r\n    },\r\n    {\r\n      id: '4',\r\n      title: 'Fiat Deposit',\r\n      ageLimit: subDays(new Date(), 55).getTime(),\r\n      status: 'completed',\r\n      orderID: 'QJFAI7N84LGM',\r\n      sourceName: 'Bank Account',\r\n      sourceDesc: '*** 1111',\r\n      amountCrypto: 6.58454334,\r\n      amount: 8734587,\r\n      cryptoCurrency: 'BTC',\r\n      currency: '$'\r\n    },\r\n    {\r\n      id: '5',\r\n      title: 'Fiat Deposit',\r\n      ageLimit: subDays(new Date(), 56).getTime(),\r\n      status: 'pending',\r\n      orderID: 'BO5KFSYGC0YW',\r\n      sourceName: 'Bank Account',\r\n      sourceDesc: '*** 1111',\r\n      amountCrypto: 6.58454334,\r\n      amount: 8734587,\r\n      cryptoCurrency: 'BTC',\r\n      currency: '$'\r\n    },\r\n    {\r\n      id: '6',\r\n      title: 'Fiat Deposit',\r\n      ageLimit: subDays(new Date(), 33).getTime(),\r\n      status: 'completed',\r\n      orderID: '6RS606CBMKVQ',\r\n      sourceName: 'Bank Account',\r\n      sourceDesc: '*** 1111',\r\n      amountCrypto: 6.58454334,\r\n      amount: 8734587,\r\n      cryptoCurrency: 'BTC',\r\n      currency: '$'\r\n    },\r\n    {\r\n      id: '7',\r\n      title: 'Fiat Deposit',\r\n      ageLimit: new Date().getTime(),\r\n      status: 'pending',\r\n      orderID: '479KUYHOBMJS',\r\n      sourceName: 'Bank Account',\r\n      sourceDesc: '*** 1212',\r\n      amountCrypto: 2.346546,\r\n      amount: 234234,\r\n      cryptoCurrency: 'BTC',\r\n      currency: '$'\r\n    },\r\n    {\r\n      id: '8',\r\n      title: 'Paypal Withdraw',\r\n      ageLimit: subDays(new Date(), 22).getTime(),\r\n      status: 'completed',\r\n      orderID: 'W67CFZNT71KR',\r\n      sourceName: 'Paypal Account',\r\n      sourceDesc: '*** 1111',\r\n      amountCrypto: 3.345456,\r\n      amount: 34544,\r\n      cryptoCurrency: 'BTC',\r\n      currency: '$'\r\n    },\r\n    {\r\n      id: '9',\r\n      title: 'Fiat Deposit',\r\n      ageLimit: subDays(new Date(), 11).getTime(),\r\n      status: 'completed',\r\n      orderID: '63GJ5DJFKS4H',\r\n      sourceName: 'Bank Account',\r\n      sourceDesc: '*** 2222',\r\n      amountCrypto: 1.4389567945,\r\n      amount: 123843,\r\n      cryptoCurrency: 'BTC',\r\n      currency: '$'\r\n    },\r\n    {\r\n      id: '10',\r\n      title: 'Wallet Transfer',\r\n      ageLimit: subDays(new Date(), 123).getTime(),\r\n      status: 'failed',\r\n      orderID: '17KRZHY8T05M',\r\n      sourceName: 'Wallet Transfer',\r\n      sourceDesc: \"John's Cardano Wallet\",\r\n      amountCrypto: 765.5695,\r\n      amount: 7567,\r\n      cryptoCurrency: 'ADA',\r\n      currency: '$'\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Card>\r\n      <RecentOrdersTable cryptoOrders={cryptoOrders} />\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default RecentOrders;\r\n","import { Helmet } from 'react-helmet-async';\r\nimport PageHeader from './PageHeader';\r\nimport PageTitleWrapper from 'src/components/PageTitleWrapper';\r\nimport { Grid, Container } from '@mui/material';\r\nimport Footer from 'src/components/Footer';\r\n\r\nimport RecentOrders from './RecentOrders';\r\n\r\nfunction ApplicationsTransactions() {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Transactions - Applications</title>\r\n      </Helmet>\r\n      <PageTitleWrapper>\r\n        <PageHeader />\r\n      </PageTitleWrapper>\r\n      <Container maxWidth=\"lg\">\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"stretch\"\r\n          spacing={3}\r\n        >\r\n          <Grid item xs={12}>\r\n            <RecentOrders />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ApplicationsTransactions;\r\n","import { FC, ReactNode } from 'react';\r\nimport { Container } from '@mui/material';\r\nimport PropTypes from 'prop-types';\r\nimport { styled } from '@mui/material/styles';\r\nimport { Box } from '@mui/material';\r\n\r\nconst PageTitle = styled(Box)(\r\n  ({ theme }) => `\r\n        padding: ${theme.spacing(4, 0)};\r\n`\r\n);\r\n\r\ninterface PageTitleWrapperProps {\r\n  children?: ReactNode;\r\n}\r\n\r\nconst PageTitleWrapper: FC<PageTitleWrapperProps> = ({ children }) => {\r\n  return (\r\n    <>\r\n      <PageTitle>\r\n        <Container maxWidth=\"lg\">\r\n          {children}\r\n        </Container>\r\n      </PageTitle>\r\n    </>\r\n  );\r\n};\r\n\r\nPageTitleWrapper.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n};\r\n\r\nexport default PageTitleWrapper;\r\n","import { Box, Container, Link, Typography } from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\n\r\nconst FooterWrapper = styled(Box)(\r\n  ({ theme }) => `\r\n        border-radius: 0;\r\n        margin: ${theme.spacing(3)} 0;\r\n`\r\n);\r\n\r\nfunction Footer() {\r\n  return (\r\n    <FooterWrapper>\r\n      <Container maxWidth=\"lg\">\r\n        <Box\r\n          py={3}\r\n          display={{ xs: 'block', md: 'flex' }}\r\n          alignItems=\"center\"\r\n          textAlign={{ xs: 'center', md: 'left' }}\r\n          justifyContent=\"space-between\"\r\n        >\r\n          {/* <Box>\r\n            <Typography variant=\"subtitle1\">\r\n              &copy; 2021 - Tokyo Free White React Admin Dashboard\r\n            </Typography>\r\n          </Box>\r\n          <Typography sx={{ pt: { xs: 2, md: 0 } }} variant=\"subtitle1\">\r\n            Crafted by <Link href=\"https://bloomui.com\" target=\"_blank\" rel=\"noopener noreferrer\">BloomUI.com</Link>\r\n          </Typography> */}\r\n        </Box>\r\n      </Container>\r\n    </FooterWrapper>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import { FC, ReactNode } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { styled } from '@mui/material/styles';\r\n\r\ninterface LabelProps {\r\n  className?: string;\r\n  color?: 'primary' | 'secondary' | 'error' | 'warning' | 'success' | 'info';\r\n  children?: ReactNode;\r\n}\r\n\r\nconst LabelWrapper = styled('span')(\r\n  ({ theme }) => `\r\n      background-color: ${theme.colors.alpha.black[5]};\r\n      padding: ${theme.spacing(0.5, 1)};\r\n      font-size: ${theme.typography.pxToRem(13)};\r\n      border-radius: ${theme.general.borderRadius};\r\n      display: inline-flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      max-height: ${theme.spacing(3)};\r\n      \r\n      &.MuiLabel {\r\n        &-primary {\r\n          background-color: ${theme.colors.primary.lighter};\r\n          color: ${theme.palette.primary.main}\r\n        }\r\n        \r\n        &-secondary {\r\n          background-color: ${theme.colors.secondary.lighter};\r\n          color: ${theme.palette.secondary.main}\r\n        }\r\n        \r\n        &-success {\r\n          background-color: ${theme.colors.success.lighter};\r\n          color: ${theme.palette.success.main}\r\n        }\r\n        \r\n        &-warning {\r\n          background-color: ${theme.colors.warning.lighter};\r\n          color: ${theme.palette.warning.main}\r\n        }\r\n              \r\n        &-error {\r\n          background-color: ${theme.colors.error.lighter};\r\n          color: ${theme.palette.error.main}\r\n        }\r\n        \r\n        &-info {\r\n          background-color: ${theme.colors.info.lighter};\r\n          color: ${theme.palette.info.main}\r\n        }\r\n      }\r\n`\r\n);\r\n\r\nconst Label: FC<LabelProps> = ({\r\n  className = '',\r\n  color = 'secondary',\r\n  children,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <LabelWrapper className={'MuiLabel-' + color} {...rest}>\r\n      {children}\r\n    </LabelWrapper>\r\n  );\r\n};\r\n\r\nLabel.propTypes = {\r\n  children: PropTypes.node,\r\n  className: PropTypes.string,\r\n  color: PropTypes.oneOf([\r\n    'primary',\r\n    'secondary',\r\n    'error',\r\n    'warning',\r\n    'success',\r\n    'info'\r\n  ])\r\n};\r\n\r\nexport default Label;\r\n"],"sourceRoot":""}